/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(5);


/***/ },
/* 1 */,
/* 2 */
/***/ function(module, exports) {

	eval("/*** IMPORTS FROM imports-loader ***/\nvar define = false;\n\n/* Zepto v1.1.3 - zepto event ajax form ie - zeptojs.com/license */\n\n\nvar Zepto = (function() {\n  var undefined, key, $, classList, emptyArray = [], slice = emptyArray.slice, filter = emptyArray.filter,\n      document = window.document,\n      elementDisplay = {}, classCache = {},\n      cssNumber = { 'column-count': 1, 'columns': 1, 'font-weight': 1, 'line-height': 1,'opacity': 1, 'z-index': 1, 'zoom': 1 },\n      fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\n      singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\n      tagExpanderRE = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/ig,\n      rootNodeRE = /^(?:body|html)$/i,\n      capitalRE = /([A-Z])/g,\n\n  // special attributes that should be get/set via method calls\n      methodAttributes = ['val', 'css', 'html', 'text', 'data', 'width', 'height', 'offset'],\n\n      adjacencyOperators = [ 'after', 'prepend', 'before', 'append' ],\n      table = document.createElement('table'),\n      tableRow = document.createElement('tr'),\n      containers = {\n        'tr': document.createElement('tbody'),\n        'tbody': table, 'thead': table, 'tfoot': table,\n        'td': tableRow, 'th': tableRow,\n        '*': document.createElement('div')\n      },\n      readyRE = /complete|loaded|interactive/,\n      simpleSelectorRE = /^[\\w-]*$/,\n      class2type = {},\n      toString = class2type.toString,\n      zepto = {},\n      camelize, uniq,\n      tempParent = document.createElement('div'),\n      propMap = {\n        'tabindex': 'tabIndex',\n        'readonly': 'readOnly',\n        'for': 'htmlFor',\n        'class': 'className',\n        'maxlength': 'maxLength',\n        'cellspacing': 'cellSpacing',\n        'cellpadding': 'cellPadding',\n        'rowspan': 'rowSpan',\n        'colspan': 'colSpan',\n        'usemap': 'useMap',\n        'frameborder': 'frameBorder',\n        'contenteditable': 'contentEditable'\n      },\n      isArray = Array.isArray ||\n          function(object){ return object instanceof Array }\n\n  zepto.matches = function(element, selector) {\n    if (!selector || !element || element.nodeType !== 1) return false\n    var matchesSelector = element.webkitMatchesSelector || element.mozMatchesSelector ||\n        element.oMatchesSelector || element.matchesSelector\n    if (matchesSelector) return matchesSelector.call(element, selector)\n    // fall back to performing a selector:\n    var match, parent = element.parentNode, temp = !parent\n    if (temp) (parent = tempParent).appendChild(element)\n    match = ~zepto.qsa(parent, selector).indexOf(element)\n    temp && tempParent.removeChild(element)\n    return match\n  }\n\n  function type(obj) {\n    return obj == null ? String(obj) :\n        class2type[toString.call(obj)] || \"object\"\n  }\n\n  function isFunction(value) { return type(value) == \"function\" }\n  function isWindow(obj)     { return obj != null && obj == obj.window }\n  function isDocument(obj)   { return obj != null && obj.nodeType == obj.DOCUMENT_NODE }\n  function isObject(obj)     { return type(obj) == \"object\" }\n  function isPlainObject(obj) {\n    return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype\n  }\n  function likeArray(obj) { return typeof obj.length == 'number' }\n\n  function compact(array) { return filter.call(array, function(item){ return item != null }) }\n  function flatten(array) { return array.length > 0 ? $.fn.concat.apply([], array) : array }\n  camelize = function(str){ return str.replace(/-+(.)?/g, function(match, chr){ return chr ? chr.toUpperCase() : '' }) }\n  function dasherize(str) {\n    return str.replace(/::/g, '/')\n        .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\n        .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\n        .replace(/_/g, '-')\n        .toLowerCase()\n  }\n  uniq = function(array){ return filter.call(array, function(item, idx){ return array.indexOf(item) == idx }) }\n\n  function classRE(name) {\n    return name in classCache ?\n        classCache[name] : (classCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'))\n  }\n\n  function maybeAddPx(name, value) {\n    return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\n  }\n\n  function defaultDisplay(nodeName) {\n    var element, display\n    if (!elementDisplay[nodeName]) {\n      element = document.createElement(nodeName)\n      document.body.appendChild(element)\n      display = getComputedStyle(element, '').getPropertyValue(\"display\")\n      element.parentNode.removeChild(element)\n      display == \"none\" && (display = \"block\")\n      elementDisplay[nodeName] = display\n    }\n    return elementDisplay[nodeName]\n  }\n\n  function children(element) {\n    return 'children' in element ?\n        slice.call(element.children) :\n        $.map(element.childNodes, function(node){ if (node.nodeType == 1) return node })\n  }\n\n  // `$.zepto.fragment` takes a html string and an optional tag name\n  // to generate DOM nodes nodes from the given html string.\n  // The generated DOM nodes are returned as an array.\n  // This function can be overriden in plugins for example to make\n  // it compatible with browsers that don't support the DOM fully.\n  zepto.fragment = function(html, name, properties) {\n    var dom, nodes, container\n\n    // A special case optimization for a single tag\n    if (singleTagRE.test(html)) dom = $(document.createElement(RegExp.$1))\n\n    if (!dom) {\n      if (html.replace) html = html.replace(tagExpanderRE, \"<$1></$2>\")\n      if (name === undefined) name = fragmentRE.test(html) && RegExp.$1\n      if (!(name in containers)) name = '*'\n\n      container = containers[name]\n      container.innerHTML = '' + html\n      dom = $.each(slice.call(container.childNodes), function(){\n        container.removeChild(this)\n      })\n    }\n\n    if (isPlainObject(properties)) {\n      nodes = $(dom)\n      $.each(properties, function(key, value) {\n        if (methodAttributes.indexOf(key) > -1) nodes[key](value)\n        else nodes.attr(key, value)\n      })\n    }\n\n    return dom\n  }\n\n  // `$.zepto.Z` swaps out the prototype of the given `dom` array\n  // of nodes with `$.fn` and thus supplying all the Zepto functions\n  // to the array. Note that `__proto__` is not supported on Internet\n  // Explorer. This method can be overriden in plugins.\n  zepto.Z = function(dom, selector) {\n    dom = dom || []\n    dom.__proto__ = $.fn\n    dom.selector = selector || ''\n    return dom\n  }\n\n  // `$.zepto.isZ` should return `true` if the given object is a Zepto\n  // collection. This method can be overriden in plugins.\n  zepto.isZ = function(object) {\n    return object instanceof zepto.Z\n  }\n\n  // `$.zepto.init` is Zepto's counterpart to jQuery's `$.fn.init` and\n  // takes a CSS selector and an optional context (and handles various\n  // special cases).\n  // This method can be overriden in plugins.\n  zepto.init = function(selector, context) {\n    var dom\n    // If nothing given, return an empty Zepto collection\n    if (!selector) return zepto.Z()\n    // Optimize for string selectors\n    else if (typeof selector == 'string') {\n      selector = selector.trim()\n      // If it's a html fragment, create nodes from it\n      // Note: In both Chrome 21 and Firefox 15, DOM error 12\n      // is thrown if the fragment doesn't begin with <\n      if (selector[0] == '<' && fragmentRE.test(selector))\n        dom = zepto.fragment(selector, RegExp.$1, context), selector = null\n      // If there's a context, create a collection on that context first, and select\n      // nodes from there\n      else if (context !== undefined) return $(context).find(selector)\n      // If it's a CSS selector, use it to select nodes.\n      else dom = zepto.qsa(document, selector)\n    }\n    // If a function is given, call it when the DOM is ready\n    else if (isFunction(selector)) return $(document).ready(selector)\n    // If a Zepto collection is given, just return it\n    else if (zepto.isZ(selector)) return selector\n    else {\n      // normalize array if an array of nodes is given\n      if (isArray(selector)) dom = compact(selector)\n      // Wrap DOM nodes.\n      else if (isObject(selector))\n        dom = [selector], selector = null\n      // If it's a html fragment, create nodes from it\n      else if (fragmentRE.test(selector))\n        dom = zepto.fragment(selector.trim(), RegExp.$1, context), selector = null\n      // If there's a context, create a collection on that context first, and select\n      // nodes from there\n      else if (context !== undefined) return $(context).find(selector)\n      // And last but no least, if it's a CSS selector, use it to select nodes.\n      else dom = zepto.qsa(document, selector)\n    }\n    // create a new Zepto collection from the nodes found\n    return zepto.Z(dom, selector)\n  }\n\n  // `$` will be the base `Zepto` object. When calling this\n  // function just call `$.zepto.init, which makes the implementation\n  // details of selecting nodes and creating Zepto collections\n  // patchable in plugins.\n  $ = function(selector, context){\n    return zepto.init(selector, context)\n  }\n\n  function extend(target, source, deep) {\n    for (key in source)\n      if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n        if (isPlainObject(source[key]) && !isPlainObject(target[key]))\n          target[key] = {}\n        if (isArray(source[key]) && !isArray(target[key]))\n          target[key] = []\n        extend(target[key], source[key], deep)\n      }\n      else if (source[key] !== undefined) target[key] = source[key]\n  }\n\n  // Copy all but undefined properties from one or more\n  // objects to the `target` object.\n  $.extend = function(target){\n    var deep, args = slice.call(arguments, 1)\n    if (typeof target == 'boolean') {\n      deep = target\n      target = args.shift()\n    }\n    args.forEach(function(arg){ extend(target, arg, deep) })\n    return target\n  }\n\n  // `$.zepto.qsa` is Zepto's CSS selector implementation which\n  // uses `document.querySelectorAll` and optimizes for some special cases, like `#id`.\n  // This method can be overriden in plugins.\n  zepto.qsa = function(element, selector){\n    var found,\n        maybeID = selector[0] == '#',\n        maybeClass = !maybeID && selector[0] == '.',\n        nameOnly = maybeID || maybeClass ? selector.slice(1) : selector, // Ensure that a 1 char tag name still gets checked\n        isSimple = simpleSelectorRE.test(nameOnly)\n    return (isDocument(element) && isSimple && maybeID) ?\n        ( (found = element.getElementById(nameOnly)) ? [found] : [] ) :\n        (element.nodeType !== 1 && element.nodeType !== 9) ? [] :\n            slice.call(\n                isSimple && !maybeID ?\n                    maybeClass ? element.getElementsByClassName(nameOnly) : // If it's simple, it could be a class\n                        element.getElementsByTagName(selector) : // Or a tag\n                    element.querySelectorAll(selector) // Or it's not simple, and we need to query all\n            )\n  }\n\n  function filtered(nodes, selector) {\n    return selector == null ? $(nodes) : $(nodes).filter(selector)\n  }\n\n  $.contains = function(parent, node) {\n    return parent !== node && parent.contains(node)\n  }\n\n  function funcArg(context, arg, idx, payload) {\n    return isFunction(arg) ? arg.call(context, idx, payload) : arg\n  }\n\n  function setAttribute(node, name, value) {\n    value == null ? node.removeAttribute(name) : node.setAttribute(name, value)\n  }\n\n  // access className property while respecting SVGAnimatedString\n  function className(node, value){\n    var klass = node.className,\n        svg   = klass && klass.baseVal !== undefined\n\n    if (value === undefined) return svg ? klass.baseVal : klass\n    svg ? (klass.baseVal = value) : (node.className = value)\n  }\n\n  // \"true\"  => true\n  // \"false\" => false\n  // \"null\"  => null\n  // \"42\"    => 42\n  // \"42.5\"  => 42.5\n  // \"08\"    => \"08\"\n  // JSON    => parse if valid\n  // String  => self\n  function deserializeValue(value) {\n    var num\n    try {\n      return value ?\n          value == \"true\" ||\n              ( value == \"false\" ? false :\n                  value == \"null\" ? null :\n                      !/^0/.test(value) && !isNaN(num = Number(value)) ? num :\n                          /^[\\[\\{]/.test(value) ? $.parseJSON(value) :\n                              value )\n          : value\n    } catch(e) {\n      return value\n    }\n  }\n\n  $.type = type\n  $.isFunction = isFunction\n  $.isWindow = isWindow\n  $.isArray = isArray\n  $.isPlainObject = isPlainObject\n\n  $.isEmptyObject = function(obj) {\n    var name\n    for (name in obj) return false\n    return true\n  }\n\n  $.inArray = function(elem, array, i){\n    return emptyArray.indexOf.call(array, elem, i)\n  }\n\n  $.camelCase = camelize\n  $.trim = function(str) {\n    return str == null ? \"\" : String.prototype.trim.call(str)\n  }\n\n  // plugin compatibility\n  $.uuid = 0\n  $.support = { }\n  $.expr = { }\n\n  $.map = function(elements, callback){\n    var value, values = [], i, key\n    if (likeArray(elements))\n      for (i = 0; i < elements.length; i++) {\n        value = callback(elements[i], i)\n        if (value != null) values.push(value)\n      }\n    else\n      for (key in elements) {\n        value = callback(elements[key], key)\n        if (value != null) values.push(value)\n      }\n    return flatten(values)\n  }\n\n  $.each = function(elements, callback){\n    var i, key\n    if (likeArray(elements)) {\n      for (i = 0; i < elements.length; i++)\n        if (callback.call(elements[i], i, elements[i]) === false) return elements\n    } else {\n      for (key in elements)\n        if (callback.call(elements[key], key, elements[key]) === false) return elements\n    }\n\n    return elements\n  }\n\n  $.grep = function(elements, callback){\n    return filter.call(elements, callback)\n  }\n\n  if (window.JSON) $.parseJSON = JSON.parse\n\n  // Populate the class2type map\n  $.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\n    class2type[ \"[object \" + name + \"]\" ] = name.toLowerCase()\n  })\n\n  // Define methods that will be available on all\n  // Zepto collections\n  $.fn = {\n    // Because a collection acts like an array\n    // copy over these useful array functions.\n    forEach: emptyArray.forEach,\n    reduce: emptyArray.reduce,\n    push: emptyArray.push,\n    sort: emptyArray.sort,\n    indexOf: emptyArray.indexOf,\n    concat: emptyArray.concat,\n\n    // `map` and `slice` in the jQuery API work differently\n    // from their array counterparts\n    map: function(fn){\n      return $($.map(this, function(el, i){ return fn.call(el, i, el) }))\n    },\n    slice: function(){\n      return $(slice.apply(this, arguments))\n    },\n\n    ready: function(callback){\n      // need to check if document.body exists for IE as that browser reports\n      // document ready when it hasn't yet created the body element\n      if (readyRE.test(document.readyState) && document.body) callback($)\n      else document.addEventListener('DOMContentLoaded', function(){ callback($) }, false)\n      return this\n    },\n    get: function(idx){\n      return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\n    },\n    toArray: function(){ return this.get() },\n    size: function(){\n      return this.length\n    },\n    remove: function(){\n      return this.each(function(){\n        if (this.parentNode != null)\n          this.parentNode.removeChild(this)\n      })\n    },\n    each: function(callback){\n      emptyArray.every.call(this, function(el, idx){\n        return callback.call(el, idx, el) !== false\n      })\n      return this\n    },\n    filter: function(selector){\n      if (isFunction(selector)) return this.not(this.not(selector))\n      return $(filter.call(this, function(element){\n        return zepto.matches(element, selector)\n      }))\n    },\n    add: function(selector,context){\n      return $(uniq(this.concat($(selector,context))))\n    },\n    is: function(selector){\n      return this.length > 0 && zepto.matches(this[0], selector)\n    },\n    not: function(selector){\n      var nodes=[]\n      if (isFunction(selector) && selector.call !== undefined)\n        this.each(function(idx){\n          if (!selector.call(this,idx)) nodes.push(this)\n        })\n      else {\n        var excludes = typeof selector == 'string' ? this.filter(selector) :\n            (likeArray(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\n        this.forEach(function(el){\n          if (excludes.indexOf(el) < 0) nodes.push(el)\n        })\n      }\n      return $(nodes)\n    },\n    has: function(selector){\n      return this.filter(function(){\n        return isObject(selector) ?\n            $.contains(this, selector) :\n            $(this).find(selector).size()\n      })\n    },\n    eq: function(idx){\n      return idx === -1 ? this.slice(idx) : this.slice(idx, + idx + 1)\n    },\n    first: function(){\n      var el = this[0]\n      return el && !isObject(el) ? el : $(el)\n    },\n    last: function(){\n      var el = this[this.length - 1]\n      return el && !isObject(el) ? el : $(el)\n    },\n    find: function(selector){\n      var result, $this = this\n      if (typeof selector == 'object')\n        result = $(selector).filter(function(){\n          var node = this\n          return emptyArray.some.call($this, function(parent){\n            return $.contains(parent, node)\n          })\n        })\n      else if (this.length == 1) result = $(zepto.qsa(this[0], selector))\n      else result = this.map(function(){ return zepto.qsa(this, selector) })\n      return result\n    },\n    closest: function(selector, context){\n      var node = this[0], collection = false\n      if (typeof selector == 'object') collection = $(selector)\n      while (node && !(collection ? collection.indexOf(node) >= 0 : zepto.matches(node, selector)))\n        node = node !== context && !isDocument(node) && node.parentNode\n      return $(node)\n    },\n    parents: function(selector){\n      var ancestors = [], nodes = this\n      while (nodes.length > 0)\n        nodes = $.map(nodes, function(node){\n          if ((node = node.parentNode) && !isDocument(node) && ancestors.indexOf(node) < 0) {\n            ancestors.push(node)\n            return node\n          }\n        })\n      return filtered(ancestors, selector)\n    },\n    parent: function(selector){\n      return filtered(uniq(this.pluck('parentNode')), selector)\n    },\n    children: function(selector){\n      return filtered(this.map(function(){ return children(this) }), selector)\n    },\n    contents: function() {\n      return this.map(function() { return slice.call(this.childNodes) })\n    },\n    siblings: function(selector){\n      return filtered(this.map(function(i, el){\n        return filter.call(children(el.parentNode), function(child){ return child!==el })\n      }), selector)\n    },\n    empty: function(){\n      return this.each(function(){ this.innerHTML = '' })\n    },\n    // `pluck` is borrowed from Prototype.js\n    pluck: function(property){\n      return $.map(this, function(el){ return el[property] })\n    },\n    show: function(){\n      return this.each(function(){\n        this.style.display == \"none\" && (this.style.display = '')\n        if (getComputedStyle(this, '').getPropertyValue(\"display\") == \"none\")\n          this.style.display = defaultDisplay(this.nodeName)\n      });\n    },\n    replaceWith: function(newContent){\n      return this.before(newContent).remove()\n    },\n    wrap: function(structure){\n      var func = isFunction(structure)\n      if (this[0] && !func)\n        var dom   = $(structure).get(0),\n            clone = dom.parentNode || this.length > 1\n\n      return this.each(function(index){\n        $(this).wrapAll(\n            func ? structure.call(this, index) :\n                clone ? dom.cloneNode(true) : dom\n        )\n      })\n    },\n    wrapAll: function(structure){\n      if (this[0]) {\n        $(this[0]).before(structure = $(structure))\n        var children\n        // drill down to the inmost element\n        while ((children = structure.children()).length) structure = children.first()\n        $(structure).append(this)\n      }\n      return this\n    },\n    wrapInner: function(structure){\n      var func = isFunction(structure)\n      return this.each(function(index){\n        var self = $(this), contents = self.contents(),\n            dom  = func ? structure.call(this, index) : structure\n        contents.length ? contents.wrapAll(dom) : self.append(dom)\n      })\n    },\n    unwrap: function(){\n      this.parent().each(function(){\n        $(this).replaceWith($(this).children())\n      })\n      return this\n    },\n    clone: function(){\n      return this.map(function(){ return this.cloneNode(true) })\n    },\n    hide: function(){\n      return this.css(\"display\", \"none\")\n    },\n    toggle: function(setting){\n      return this.each(function(){\n        var el = $(this)\n            ;(setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show() : el.hide()\n      })\n    },\n    prev: function(selector){ return $(this.pluck('previousElementSibling')).filter(selector || '*') },\n    next: function(selector){ return $(this.pluck('nextElementSibling')).filter(selector || '*') },\n    html: function(html){\n      return arguments.length === 0 ?\n          (this.length > 0 ? this[0].innerHTML : null) :\n          this.each(function(idx){\n            var originHtml = this.innerHTML\n            $(this).empty().append( funcArg(this, html, idx, originHtml) )\n          })\n    },\n    text: function(text){\n      return arguments.length === 0 ?\n          (this.length > 0 ? this[0].textContent : null) :\n          this.each(function(){ this.textContent = (text === undefined) ? '' : ''+text })\n    },\n    attr: function(name, value){\n      var result\n      return (typeof name == 'string' && value === undefined) ?\n          (this.length == 0 || this[0].nodeType !== 1 ? undefined :\n              (name == 'value' && this[0].nodeName == 'INPUT') ? this.val() :\n                  (!(result = this[0].getAttribute(name)) && name in this[0]) ? this[0][name] : result\n              ) :\n          this.each(function(idx){\n            if (this.nodeType !== 1) return\n            if (isObject(name)) for (key in name) setAttribute(this, key, name[key])\n            else setAttribute(this, name, funcArg(this, value, idx, this.getAttribute(name)))\n          })\n    },\n    removeAttr: function(name){\n      return this.each(function(){ this.nodeType === 1 && setAttribute(this, name) })\n    },\n    prop: function(name, value){\n      name = propMap[name] || name\n      return (value === undefined) ?\n          (this[0] && this[0][name]) :\n          this.each(function(idx){\n            this[name] = funcArg(this, value, idx, this[name])\n          })\n    },\n    data: function(name, value){\n      var data = this.attr('data-' + name.replace(capitalRE, '-$1').toLowerCase(), value)\n      return data !== null ? deserializeValue(data) : undefined\n    },\n    val: function(value){\n      return arguments.length === 0 ?\n          (this[0] && (this[0].multiple ?\n              $(this[0]).find('option').filter(function(){ return this.selected }).pluck('value') :\n              this[0].value)\n              ) :\n          this.each(function(idx){\n            this.value = funcArg(this, value, idx, this.value)\n          })\n    },\n    offset: function(coordinates){\n      if (coordinates) return this.each(function(index){\n        var $this = $(this),\n            coords = funcArg(this, coordinates, index, $this.offset()),\n            parentOffset = $this.offsetParent().offset(),\n            props = {\n              top:  coords.top  - parentOffset.top,\n              left: coords.left - parentOffset.left\n            }\n\n        if ($this.css('position') == 'static') props['position'] = 'relative'\n        $this.css(props)\n      })\n      if (this.length==0) return null\n      var obj = this[0].getBoundingClientRect()\n      return {\n        left: obj.left + window.pageXOffset,\n        top: obj.top + window.pageYOffset,\n        width: Math.round(obj.width),\n        height: Math.round(obj.height)\n      }\n    },\n    css: function(property, value){\n      if (arguments.length < 2) {\n        var element = this[0], computedStyle = getComputedStyle(element, '')\n        if(!element) return\n        if (typeof property == 'string')\n          return element.style[camelize(property)] || computedStyle.getPropertyValue(property)\n        else if (isArray(property)) {\n          var props = {}\n          $.each(isArray(property) ? property: [property], function(_, prop){\n            props[prop] = (element.style[camelize(prop)] || computedStyle.getPropertyValue(prop))\n          })\n          return props\n        }\n      }\n\n      var css = ''\n      if (type(property) == 'string') {\n        if (!value && value !== 0)\n          this.each(function(){ this.style.removeProperty(dasherize(property)) })\n        else\n          css = dasherize(property) + \":\" + maybeAddPx(property, value)\n      } else {\n        for (key in property)\n          if (!property[key] && property[key] !== 0)\n            this.each(function(){ this.style.removeProperty(dasherize(key)) })\n          else\n            css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\n      }\n\n      return this.each(function(){ this.style.cssText += ';' + css })\n    },\n    index: function(element){\n      return element ? this.indexOf($(element)[0]) : this.parent().children().indexOf(this[0])\n    },\n    hasClass: function(name){\n      if (!name) return false\n      return emptyArray.some.call(this, function(el){\n        return this.test(className(el))\n      }, classRE(name))\n    },\n    addClass: function(name){\n      if (!name) return this\n      return this.each(function(idx){\n        classList = []\n        var cls = className(this), newName = funcArg(this, name, idx, cls)\n        newName.split(/\\s+/g).forEach(function(klass){\n          if (!$(this).hasClass(klass)) classList.push(klass)\n        }, this)\n        classList.length && className(this, cls + (cls ? \" \" : \"\") + classList.join(\" \"))\n      })\n    },\n    removeClass: function(name){\n      return this.each(function(idx){\n        if (name === undefined) return className(this, '')\n        classList = className(this)\n        funcArg(this, name, idx, classList).split(/\\s+/g).forEach(function(klass){\n          classList = classList.replace(classRE(klass), \" \")\n        })\n        className(this, classList.trim())\n      })\n    },\n    toggleClass: function(name, when){\n      if (!name) return this\n      return this.each(function(idx){\n        var $this = $(this), names = funcArg(this, name, idx, className(this))\n        names.split(/\\s+/g).forEach(function(klass){\n          (when === undefined ? !$this.hasClass(klass) : when) ?\n              $this.addClass(klass) : $this.removeClass(klass)\n        })\n      })\n    },\n    scrollTop: function(value){\n      if (!this.length) return\n      var hasScrollTop = 'scrollTop' in this[0]\n      if (value === undefined) return hasScrollTop ? this[0].scrollTop : this[0].pageYOffset\n      return this.each(hasScrollTop ?\n          function(){ this.scrollTop = value } :\n          function(){ this.scrollTo(this.scrollX, value) })\n    },\n    scrollLeft: function(value){\n      if (!this.length) return\n      var hasScrollLeft = 'scrollLeft' in this[0]\n      if (value === undefined) return hasScrollLeft ? this[0].scrollLeft : this[0].pageXOffset\n      return this.each(hasScrollLeft ?\n          function(){ this.scrollLeft = value } :\n          function(){ this.scrollTo(value, this.scrollY) })\n    },\n    position: function() {\n      if (!this.length) return\n\n      var elem = this[0],\n      // Get *real* offsetParent\n          offsetParent = this.offsetParent(),\n      // Get correct offsets\n          offset       = this.offset(),\n          parentOffset = rootNodeRE.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset()\n\n      // Subtract element margins\n      // note: when an element has margin: auto the offsetLeft and marginLeft\n      // are the same in Safari causing offset.left to incorrectly be 0\n      offset.top  -= parseFloat( $(elem).css('margin-top') ) || 0\n      offset.left -= parseFloat( $(elem).css('margin-left') ) || 0\n\n      // Add offsetParent borders\n      parentOffset.top  += parseFloat( $(offsetParent[0]).css('border-top-width') ) || 0\n      parentOffset.left += parseFloat( $(offsetParent[0]).css('border-left-width') ) || 0\n\n      // Subtract the two offsets\n      return {\n        top:  offset.top  - parentOffset.top,\n        left: offset.left - parentOffset.left\n      }\n    },\n    offsetParent: function() {\n      return this.map(function(){\n        var parent = this.offsetParent || document.body\n        while (parent && !rootNodeRE.test(parent.nodeName) && $(parent).css(\"position\") == \"static\")\n          parent = parent.offsetParent\n        return parent\n      })\n    }\n  }\n\n  // for now\n  $.fn.detach = $.fn.remove\n\n    // Generate the `width` and `height` functions\n  ;['width', 'height'].forEach(function(dimension){\n    var dimensionProperty =\n        dimension.replace(/./, function(m){ return m[0].toUpperCase() })\n\n    $.fn[dimension] = function(value){\n      var offset, el = this[0]\n      if (value === undefined) return isWindow(el) ? el['inner' + dimensionProperty] :\n          isDocument(el) ? el.documentElement['scroll' + dimensionProperty] :\n              (offset = this.offset()) && offset[dimension]\n      else return this.each(function(idx){\n        el = $(this)\n        el.css(dimension, funcArg(this, value, idx, el[dimension]()))\n      })\n    }\n  })\n\n  function traverseNode(node, fun) {\n    fun(node)\n    for (var key in node.childNodes) traverseNode(node.childNodes[key], fun)\n  }\n\n  // Generate the `after`, `prepend`, `before`, `append`,\n  // `insertAfter`, `insertBefore`, `appendTo`, and `prependTo` methods.\n  adjacencyOperators.forEach(function(operator, operatorIndex) {\n    var inside = operatorIndex % 2 //=> prepend, append\n\n    $.fn[operator] = function(){\n      // arguments can be nodes, arrays of nodes, Zepto objects and HTML strings\n      var argType, nodes = $.map(arguments, function(arg) {\n            argType = type(arg)\n            return argType == \"object\" || argType == \"array\" || arg == null ?\n                arg : zepto.fragment(arg)\n          }),\n          parent, copyByClone = this.length > 1\n      if (nodes.length < 1) return this\n\n      return this.each(function(_, target){\n        parent = inside ? target : target.parentNode\n\n        // convert all methods to a \"before\" operation\n        target = operatorIndex == 0 ? target.nextSibling :\n            operatorIndex == 1 ? target.firstChild :\n                operatorIndex == 2 ? target :\n                    null\n\n        nodes.forEach(function(node){\n          if (copyByClone) node = node.cloneNode(true)\n          else if (!parent) return $(node).remove()\n\n          traverseNode(parent.insertBefore(node, target), function(el){\n            if (el.nodeName != null && el.nodeName.toUpperCase() === 'SCRIPT' &&\n                (!el.type || el.type === 'text/javascript') && !el.src)\n              window['eval'].call(window, el.innerHTML)\n          })\n        })\n      })\n    }\n\n    // after    => insertAfter\n    // prepend  => prependTo\n    // before   => insertBefore\n    // append   => appendTo\n    $.fn[inside ? operator+'To' : 'insert'+(operatorIndex ? 'Before' : 'After')] = function(html){\n      $(html)[operator](this)\n      return this\n    }\n  })\n\n  zepto.Z.prototype = $.fn\n\n  // Export internal API functions in the `$.zepto` namespace\n  zepto.uniq = uniq\n  zepto.deserializeValue = deserializeValue\n  $.zepto = zepto\n\n  return $\n})()\n\nwindow.Zepto = Zepto\nwindow.$ === undefined && (window.$ = Zepto)\n\n;(function($){\n  var _zid = 1, undefined,\n      slice = Array.prototype.slice,\n      isFunction = $.isFunction,\n      isString = function(obj){ return typeof obj == 'string' },\n      handlers = {},\n      specialEvents={},\n      focusinSupported = 'onfocusin' in window,\n      focus = { focus: 'focusin', blur: 'focusout' },\n      hover = { mouseenter: 'mouseover', mouseleave: 'mouseout' }\n\n  specialEvents.click = specialEvents.mousedown = specialEvents.mouseup = specialEvents.mousemove = 'MouseEvents'\n\n  function zid(element) {\n    return element._zid || (element._zid = _zid++)\n  }\n  function findHandlers(element, event, fn, selector) {\n    event = parse(event)\n    if (event.ns) var matcher = matcherFor(event.ns)\n    return (handlers[zid(element)] || []).filter(function(handler) {\n      return handler\n          && (!event.e  || handler.e == event.e)\n          && (!event.ns || matcher.test(handler.ns))\n          && (!fn       || zid(handler.fn) === zid(fn))\n          && (!selector || handler.sel == selector)\n    })\n  }\n  function parse(event) {\n    var parts = ('' + event).split('.')\n    return {e: parts[0], ns: parts.slice(1).sort().join(' ')}\n  }\n  function matcherFor(ns) {\n    return new RegExp('(?:^| )' + ns.replace(' ', ' .* ?') + '(?: |$)')\n  }\n\n  function eventCapture(handler, captureSetting) {\n    return handler.del &&\n        (!focusinSupported && (handler.e in focus)) ||\n        !!captureSetting\n  }\n\n  function realEvent(type) {\n    return hover[type] || (focusinSupported && focus[type]) || type\n  }\n\n  function add(element, events, fn, data, selector, delegator, capture){\n    var id = zid(element), set = (handlers[id] || (handlers[id] = []))\n    events.split(/\\s/).forEach(function(event){\n      if (event == 'ready') return $(document).ready(fn)\n      var handler   = parse(event)\n      handler.fn    = fn\n      handler.sel   = selector\n      // emulate mouseenter, mouseleave\n      if (handler.e in hover) fn = function(e){\n        var related = e.relatedTarget\n        if (!related || (related !== this && !$.contains(this, related)))\n          return handler.fn.apply(this, arguments)\n      }\n      handler.del   = delegator\n      var callback  = delegator || fn\n      handler.proxy = function(e){\n        e = compatible(e)\n        if (e.isImmediatePropagationStopped()) return\n        e.data = data\n        var result = callback.apply(element, e._args == undefined ? [e] : [e].concat(e._args))\n        if (result === false) e.preventDefault(), e.stopPropagation()\n        return result\n      }\n      handler.i = set.length\n      set.push(handler)\n      if ('addEventListener' in element)\n        element.addEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))\n    })\n  }\n  function remove(element, events, fn, selector, capture){\n    var id = zid(element)\n        ;(events || '').split(/\\s/).forEach(function(event){\n      findHandlers(element, event, fn, selector).forEach(function(handler){\n        delete handlers[id][handler.i]\n        if ('removeEventListener' in element)\n          element.removeEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))\n      })\n    })\n  }\n\n  $.event = { add: add, remove: remove }\n\n  $.proxy = function(fn, context) {\n    if (isFunction(fn)) {\n      var proxyFn = function(){ return fn.apply(context, arguments) }\n      proxyFn._zid = zid(fn)\n      return proxyFn\n    } else if (isString(context)) {\n      return $.proxy(fn[context], fn)\n    } else {\n      throw new TypeError(\"expected function\")\n    }\n  }\n\n  $.fn.bind = function(event, data, callback){\n    return this.on(event, data, callback)\n  }\n  $.fn.unbind = function(event, callback){\n    return this.off(event, callback)\n  }\n  $.fn.one = function(event, selector, data, callback){\n    return this.on(event, selector, data, callback, 1)\n  }\n\n  var returnTrue = function(){return true},\n      returnFalse = function(){return false},\n      ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\n      eventMethods = {\n        preventDefault: 'isDefaultPrevented',\n        stopImmediatePropagation: 'isImmediatePropagationStopped',\n        stopPropagation: 'isPropagationStopped'\n      }\n\n  function compatible(event, source) {\n    if (source || !event.isDefaultPrevented) {\n      source || (source = event)\n\n      $.each(eventMethods, function(name, predicate) {\n        var sourceMethod = source[name]\n        event[name] = function(){\n          this[predicate] = returnTrue\n          return sourceMethod && sourceMethod.apply(source, arguments)\n        }\n        event[predicate] = returnFalse\n      })\n\n      if (source.defaultPrevented !== undefined ? source.defaultPrevented :\n          'returnValue' in source ? source.returnValue === false :\n              source.getPreventDefault && source.getPreventDefault())\n        event.isDefaultPrevented = returnTrue\n    }\n    return event\n  }\n\n  function createProxy(event) {\n    var key, proxy = { originalEvent: event }\n    for (key in event)\n      if (!ignoreProperties.test(key) && event[key] !== undefined) proxy[key] = event[key]\n\n    return compatible(proxy, event)\n  }\n\n  $.fn.delegate = function(selector, event, callback){\n    return this.on(event, selector, callback)\n  }\n  $.fn.undelegate = function(selector, event, callback){\n    return this.off(event, selector, callback)\n  }\n\n  $.fn.live = function(event, callback){\n    $(document.body).delegate(this.selector, event, callback)\n    return this\n  }\n  $.fn.die = function(event, callback){\n    $(document.body).undelegate(this.selector, event, callback)\n    return this\n  }\n\n  $.fn.on = function(event, selector, data, callback, one){\n    var autoRemove, delegator, $this = this\n    if (event && !isString(event)) {\n      $.each(event, function(type, fn){\n        $this.on(type, selector, data, fn, one)\n      })\n      return $this\n    }\n\n    if (!isString(selector) && !isFunction(callback) && callback !== false)\n      callback = data, data = selector, selector = undefined\n    if (isFunction(data) || data === false)\n      callback = data, data = undefined\n\n    if (callback === false) callback = returnFalse\n\n    return $this.each(function(_, element){\n      if (one) autoRemove = function(e){\n        remove(element, e.type, callback)\n        return callback.apply(this, arguments)\n      }\n\n      if (selector) delegator = function(e){\n        var evt, match = $(e.target).closest(selector, element).get(0)\n        if (match && match !== element) {\n          evt = $.extend(createProxy(e), {currentTarget: match, liveFired: element})\n          return (autoRemove || callback).apply(match, [evt].concat(slice.call(arguments, 1)))\n        }\n      }\n\n      add(element, event, callback, data, selector, delegator || autoRemove)\n    })\n  }\n  $.fn.off = function(event, selector, callback){\n    var $this = this\n    if (event && !isString(event)) {\n      $.each(event, function(type, fn){\n        $this.off(type, selector, fn)\n      })\n      return $this\n    }\n\n    if (!isString(selector) && !isFunction(callback) && callback !== false)\n      callback = selector, selector = undefined\n\n    if (callback === false) callback = returnFalse\n\n    return $this.each(function(){\n      remove(this, event, callback, selector)\n    })\n  }\n\n  $.fn.trigger = function(event, args){\n    event = (isString(event) || $.isPlainObject(event)) ? $.Event(event) : compatible(event)\n    event._args = args\n    return this.each(function(){\n      // items in the collection might not be DOM elements\n      if('dispatchEvent' in this) this.dispatchEvent(event)\n      else $(this).triggerHandler(event, args)\n    })\n  }\n\n  // triggers event handlers on current element just as if an event occurred,\n  // doesn't trigger an actual event, doesn't bubble\n  $.fn.triggerHandler = function(event, args){\n    var e, result\n    this.each(function(i, element){\n      e = createProxy(isString(event) ? $.Event(event) : event)\n      e._args = args\n      e.target = element\n      $.each(findHandlers(element, event.type || event), function(i, handler){\n        result = handler.proxy(e)\n        if (e.isImmediatePropagationStopped()) return false\n      })\n    })\n    return result\n  }\n\n    // shortcut methods for `.bind(event, fn)` for each event type\n  ;('focusin focusout load resize scroll unload click dblclick '+\n      'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave '+\n      'change select keydown keypress keyup error').split(' ').forEach(function(event) {\n        $.fn[event] = function(callback) {\n          return callback ?\n              this.bind(event, callback) :\n              this.trigger(event)\n        }\n      })\n\n  ;['focus', 'blur'].forEach(function(name) {\n    $.fn[name] = function(callback) {\n      if (callback) this.bind(name, callback)\n      else this.each(function(){\n        try { this[name]() }\n        catch(e) {}\n      })\n      return this\n    }\n  })\n\n  $.Event = function(type, props) {\n    if (!isString(type)) props = type, type = props.type\n    var event = document.createEvent(specialEvents[type] || 'Events'), bubbles = true\n    if (props) for (var name in props) (name == 'bubbles') ? (bubbles = !!props[name]) : (event[name] = props[name])\n    event.initEvent(type, bubbles, true)\n    return compatible(event)\n  }\n\n})(Zepto)\n\n;(function($){\n  var jsonpID = 0,\n      document = window.document,\n      key,\n      name,\n      rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\n      scriptTypeRE = /^(?:text|application)\\/javascript/i,\n      xmlTypeRE = /^(?:text|application)\\/xml/i,\n      jsonType = 'application/json',\n      htmlType = 'text/html',\n      blankRE = /^\\s*$/\n\n  // trigger a custom event and return false if it was cancelled\n  function triggerAndReturn(context, eventName, data) {\n    var event = $.Event(eventName)\n    $(context).trigger(event, data)\n    return !event.isDefaultPrevented()\n  }\n\n  // trigger an Ajax \"global\" event\n  function triggerGlobal(settings, context, eventName, data) {\n    if (settings.global) return triggerAndReturn(context || document, eventName, data)\n  }\n\n  // Number of active Ajax requests\n  $.active = 0\n\n  function ajaxStart(settings) {\n    if (settings.global && $.active++ === 0) triggerGlobal(settings, null, 'ajaxStart')\n  }\n  function ajaxStop(settings) {\n    if (settings.global && !(--$.active)) triggerGlobal(settings, null, 'ajaxStop')\n  }\n\n  // triggers an extra global event \"ajaxBeforeSend\" that's like \"ajaxSend\" but cancelable\n  function ajaxBeforeSend(xhr, settings) {\n    var context = settings.context\n    if (settings.beforeSend.call(context, xhr, settings) === false ||\n        triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false)\n      return false\n\n    triggerGlobal(settings, context, 'ajaxSend', [xhr, settings])\n  }\n  function ajaxSuccess(data, xhr, settings, deferred) {\n    var context = settings.context, status = 'success'\n    settings.success.call(context, data, status, xhr)\n    if (deferred) deferred.resolveWith(context, [data, status, xhr])\n    triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\n    ajaxComplete(status, xhr, settings)\n  }\n  // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\n  function ajaxError(error, type, xhr, settings, deferred) {\n    var context = settings.context\n    settings.error.call(context, xhr, type, error)\n    if (deferred) deferred.rejectWith(context, [xhr, type, error])\n    triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\n    ajaxComplete(type, xhr, settings)\n  }\n  // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\n  function ajaxComplete(status, xhr, settings) {\n    var context = settings.context\n    settings.complete.call(context, xhr, status)\n    triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\n    ajaxStop(settings)\n  }\n\n  // Empty function, used as default callback\n  function empty() {}\n\n  $.ajaxJSONP = function(options, deferred){\n    if (!('type' in options)) return $.ajax(options)\n\n    var _callbackName = options.jsonpCallback,\n        callbackName = ($.isFunction(_callbackName) ?\n            _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\n        script = document.createElement('script'),\n        originalCallback = window[callbackName],\n        responseData,\n        abort = function(errorType) {\n          $(script).triggerHandler('error', errorType || 'abort')\n        },\n        xhr = { abort: abort }, abortTimeout\n\n    if (deferred) deferred.promise(xhr)\n\n    $(script).on('load error', function(e, errorType){\n      clearTimeout(abortTimeout)\n      $(script).off().remove()\n\n      if (e.type == 'error' || !responseData) {\n        ajaxError(null, errorType || 'error', xhr, options, deferred)\n      } else {\n        ajaxSuccess(responseData[0], xhr, options, deferred)\n      }\n\n      window[callbackName] = originalCallback\n      if (responseData && $.isFunction(originalCallback))\n        originalCallback(responseData[0])\n\n      originalCallback = responseData = undefined\n    })\n\n    if (ajaxBeforeSend(xhr, options) === false) {\n      abort('abort')\n      return xhr\n    }\n\n    window[callbackName] = function(){\n      responseData = arguments\n    }\n\n    script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\n    document.head.appendChild(script)\n\n    if (options.timeout > 0) abortTimeout = setTimeout(function(){\n      abort('timeout')\n    }, options.timeout)\n\n    return xhr\n  }\n\n  $.ajaxSettings = {\n    // Default type of request\n    type: 'GET',\n    // Callback that is executed before request\n    beforeSend: empty,\n    // Callback that is executed if the request succeeds\n    success: empty,\n    // Callback that is executed the the server drops error\n    error: empty,\n    // Callback that is executed on request complete (both: error and success)\n    complete: empty,\n    // The context for the callbacks\n    context: null,\n    // Whether to trigger \"global\" Ajax events\n    global: true,\n    // Transport\n    xhr: function () {\n      return new window.XMLHttpRequest()\n    },\n    // MIME types mapping\n    // IIS returns Javascript as \"application/x-javascript\"\n    accepts: {\n      script: 'text/javascript, application/javascript, application/x-javascript',\n      json:   jsonType,\n      xml:    'application/xml, text/xml',\n      html:   htmlType,\n      text:   'text/plain'\n    },\n    // Whether the request is to another domain\n    crossDomain: false,\n    // Default timeout\n    timeout: 0,\n    // Whether data should be serialized to string\n    processData: true,\n    // Whether the browser should be allowed to cache GET responses\n    cache: true\n  }\n\n  function mimeToDataType(mime) {\n    if (mime) mime = mime.split(';', 2)[0]\n    return mime && ( mime == htmlType ? 'html' :\n        mime == jsonType ? 'json' :\n            scriptTypeRE.test(mime) ? 'script' :\n                xmlTypeRE.test(mime) && 'xml' ) || 'text'\n  }\n\n  function appendQuery(url, query) {\n    if (query == '') return url\n    return (url + '&' + query).replace(/[&?]{1,2}/, '?')\n  }\n\n  // serialize payload and append it to the URL for GET requests\n  function serializeData(options) {\n    if (options.processData && options.data && $.type(options.data) != \"string\")\n      options.data = $.param(options.data, options.traditional)\n    if (options.data && (!options.type || options.type.toUpperCase() == 'GET'))\n      options.url = appendQuery(options.url, options.data), options.data = undefined\n  }\n\n  $.ajax = function(options){\n    var settings = $.extend({}, options || {}),\n        deferred = $.Deferred && $.Deferred()\n    for (key in $.ajaxSettings) if (settings[key] === undefined) settings[key] = $.ajaxSettings[key]\n\n    ajaxStart(settings)\n\n    if (!settings.crossDomain) settings.crossDomain = /^([\\w-]+:)?\\/\\/([^\\/]+)/.test(settings.url) &&\n        RegExp.$2 != window.location.host\n\n    if (!settings.url) settings.url = window.location.toString()\n    serializeData(settings)\n    if (settings.cache === false) settings.url = appendQuery(settings.url, '_=' + Date.now())\n\n    var dataType = settings.dataType, hasPlaceholder = /\\?.+=\\?/.test(settings.url)\n    if (dataType == 'jsonp' || hasPlaceholder) {\n      if (!hasPlaceholder)\n        settings.url = appendQuery(settings.url,\n            settings.jsonp ? (settings.jsonp + '=?') : settings.jsonp === false ? '' : 'callback=?')\n      return $.ajaxJSONP(settings, deferred)\n    }\n\n    var mime = settings.accepts[dataType],\n        headers = { },\n        setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\n        protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\n        xhr = settings.xhr(),\n        nativeSetHeader = xhr.setRequestHeader,\n        abortTimeout\n\n    if (deferred) deferred.promise(xhr)\n\n    if (!settings.crossDomain) setHeader('X-Requested-With', 'XMLHttpRequest')\n    setHeader('Accept', mime || '*/*')\n    if (mime = settings.mimeType || mime) {\n      if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\n      xhr.overrideMimeType && xhr.overrideMimeType(mime)\n    }\n    if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET'))\n      setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\n\n    if (settings.headers) for (name in settings.headers) setHeader(name, settings.headers[name])\n    xhr.setRequestHeader = setHeader\n\n    xhr.onreadystatechange = function(){\n      if (xhr.readyState == 4) {\n        xhr.onreadystatechange = empty\n        clearTimeout(abortTimeout)\n        var result, error = false\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\n          dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\n          result = xhr.responseText\n\n          try {\n            // http://perfectionkills.com/global-eval-what-are-the-options/\n            if (dataType == 'script')    (1,eval)(result)\n            else if (dataType == 'xml')  result = xhr.responseXML\n            else if (dataType == 'json') result = blankRE.test(result) ? null : $.parseJSON(result)\n          } catch (e) { error = e }\n\n          if (error) ajaxError(error, 'parsererror', xhr, settings, deferred)\n          else ajaxSuccess(result, xhr, settings, deferred)\n        } else {\n          ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred)\n        }\n      }\n    }\n\n    if (ajaxBeforeSend(xhr, settings) === false) {\n      xhr.abort()\n      ajaxError(null, 'abort', xhr, settings, deferred)\n      return xhr\n    }\n\n    if (settings.xhrFields) for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\n\n    var async = 'async' in settings ? settings.async : true\n    xhr.open(settings.type, settings.url, async, settings.username, settings.password)\n\n    for (name in headers) nativeSetHeader.apply(xhr, headers[name])\n\n    if (settings.timeout > 0) abortTimeout = setTimeout(function(){\n      xhr.onreadystatechange = empty\n      xhr.abort()\n      ajaxError(null, 'timeout', xhr, settings, deferred)\n    }, settings.timeout)\n\n    // avoid sending empty string (#319)\n    xhr.send(settings.data ? settings.data : null)\n    return xhr\n  }\n\n  // handle optional data/success arguments\n  function parseArguments(url, data, success, dataType) {\n    if ($.isFunction(data)) dataType = success, success = data, data = undefined\n    if (!$.isFunction(success)) dataType = success, success = undefined\n    return {\n      url: url\n      , data: data\n      , success: success\n      , dataType: dataType\n    }\n  }\n\n  $.get = function(/* url, data, success, dataType */){\n    return $.ajax(parseArguments.apply(null, arguments))\n  }\n\n  $.post = function(/* url, data, success, dataType */){\n    var options = parseArguments.apply(null, arguments)\n    options.type = 'POST'\n    return $.ajax(options)\n  }\n\n  $.getJSON = function(/* url, data, success */){\n    var options = parseArguments.apply(null, arguments)\n    options.dataType = 'json'\n    return $.ajax(options)\n  }\n\n  $.fn.load = function(url, data, success){\n    if (!this.length) return this\n    var self = this, parts = url.split(/\\s/), selector,\n        options = parseArguments(url, data, success),\n        callback = options.success\n    if (parts.length > 1) options.url = parts[0], selector = parts[1]\n    options.success = function(response){\n      self.html(selector ?\n          $('<div>').html(response.replace(rscript, \"\")).find(selector)\n          : response)\n      callback && callback.apply(self, arguments)\n    }\n    $.ajax(options)\n    return this\n  }\n\n  var escape = encodeURIComponent\n\n  function serialize(params, obj, traditional, scope){\n    var type, array = $.isArray(obj), hash = $.isPlainObject(obj)\n    $.each(obj, function(key, value) {\n      type = $.type(value)\n      if (scope) key = traditional ? scope :\n          scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']'\n      // handle data in serializeArray() format\n      if (!scope && array) params.add(value.name, value.value)\n      // recurse into nested objects\n      else if (type == \"array\" || (!traditional && type == \"object\"))\n        serialize(params, value, traditional, key)\n      else params.add(key, value)\n    })\n  }\n\n  $.param = function(obj, traditional){\n    var params = []\n    params.add = function(k, v){ this.push(escape(k) + '=' + escape(v)) }\n    serialize(params, obj, traditional)\n    return params.join('&').replace(/%20/g, '+')\n  }\n})(Zepto)\n\n;(function($){\n  $.fn.serializeArray = function() {\n    var result = [], el\n    $([].slice.call(this.get(0).elements)).each(function(){\n      el = $(this)\n      var type = el.attr('type')\n      if (this.nodeName.toLowerCase() != 'fieldset' &&\n          !this.disabled && type != 'submit' && type != 'reset' && type != 'button' &&\n          ((type != 'radio' && type != 'checkbox') || this.checked))\n        result.push({\n          name: el.attr('name'),\n          value: el.val()\n        })\n    })\n    return result\n  }\n\n  $.fn.serialize = function(){\n    var result = []\n    this.serializeArray().forEach(function(elm){\n      result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value))\n    })\n    return result.join('&')\n  }\n\n  $.fn.submit = function(callback) {\n    if (callback) this.bind('submit', callback)\n    else if (this.length) {\n      var event = $.Event('submit')\n      this.eq(0).trigger(event)\n      if (!event.isDefaultPrevented()) this.get(0).submit()\n    }\n    return this\n  }\n\n})(Zepto)\n\n;(function($){\n  // __proto__ doesn't exist on IE<11, so redefine\n  // the Z function to use object extension instead\n  if (!('__proto__' in {})) {\n    $.extend($.zepto, {\n      Z: function(dom, selector){\n        dom = dom || []\n        $.extend(dom, $.fn)\n        dom.selector = selector || ''\n        dom.__Z = true\n        return dom\n      },\n      // this is a kludge but works\n      isZ: function(object){\n        return $.type(object) === 'array' && '__Z' in object\n      }\n    })\n  }\n\n  // getComputedStyle shouldn't freak out when called\n  // without a valid element as argument\n  try {\n    getComputedStyle(undefined)\n  } catch(e) {\n    var nativeGetComputedStyle = getComputedStyle;\n    window.getComputedStyle = function(element){\n      try {\n        return nativeGetComputedStyle(element)\n      } catch(e) {\n        return null\n      }\n    }\n  }\n})(Zepto)\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 3 */
/***/ function(module, exports) {

	eval("/*** IMPORTS FROM imports-loader ***/\nvar define = false;\n\n//     Zepto.js\r\n//     (c) 2010-2016 Thomas Fuchs\r\n//     Zepto.js may be freely distributed under the MIT license.\r\n\r\n;(function($){\r\n  var touch = {},\r\n    touchTimeout, tapTimeout, swipeTimeout, longTapTimeout,\r\n    longTapDelay = 750,\r\n    gesture\r\n\r\n  function swipeDirection(x1, x2, y1, y2) {\r\n    return Math.abs(x1 - x2) >=\r\n      Math.abs(y1 - y2) ? (x1 - x2 > 0 ? 'Left' : 'Right') : (y1 - y2 > 0 ? 'Up' : 'Down')\r\n  }\r\n\r\n  function longTap() {\r\n    longTapTimeout = null\r\n    if (touch.last) {\r\n      touch.el.trigger('longTap')\r\n      touch = {}\r\n    }\r\n  }\r\n\r\n  function cancelLongTap() {\r\n    if (longTapTimeout) clearTimeout(longTapTimeout)\r\n    longTapTimeout = null\r\n  }\r\n\r\n  function cancelAll() {\r\n    if (touchTimeout) clearTimeout(touchTimeout)\r\n    if (tapTimeout) clearTimeout(tapTimeout)\r\n    if (swipeTimeout) clearTimeout(swipeTimeout)\r\n    if (longTapTimeout) clearTimeout(longTapTimeout)\r\n    touchTimeout = tapTimeout = swipeTimeout = longTapTimeout = null\r\n    touch = {}\r\n  }\r\n\r\n  function isPrimaryTouch(event){\r\n    return (event.pointerType == 'touch' ||\r\n      event.pointerType == event.MSPOINTER_TYPE_TOUCH)\r\n      && event.isPrimary\r\n  }\r\n\r\n  function isPointerEventType(e, type){\r\n    return (e.type == 'pointer'+type ||\r\n      e.type.toLowerCase() == 'mspointer'+type)\r\n  }\r\n\r\n  $(document).ready(function(){\r\n    var now, delta, deltaX = 0, deltaY = 0, firstTouch, _isPointerType\r\n\r\n    if ('MSGesture' in window) {\r\n      gesture = new MSGesture()\r\n      gesture.target = document.body\r\n    }\r\n\r\n    $(document)\r\n      .bind('MSGestureEnd', function(e){\r\n        var swipeDirectionFromVelocity =\r\n          e.velocityX > 1 ? 'Right' : e.velocityX < -1 ? 'Left' : e.velocityY > 1 ? 'Down' : e.velocityY < -1 ? 'Up' : null;\r\n        if (swipeDirectionFromVelocity) {\r\n          touch.el.trigger('swipe')\r\n          touch.el.trigger('swipe'+ swipeDirectionFromVelocity)\r\n        }\r\n      })\r\n      .on('touchstart MSPointerDown pointerdown', function(e){\r\n        if((_isPointerType = isPointerEventType(e, 'down')) &&\r\n          !isPrimaryTouch(e)) return\r\n        firstTouch = _isPointerType ? e : e.touches[0]\r\n        if (e.touches && e.touches.length === 1 && touch.x2) {\r\n          // Clear out touch movement data if we have it sticking around\r\n          // This can occur if touchcancel doesn't fire due to preventDefault, etc.\r\n          touch.x2 = undefined\r\n          touch.y2 = undefined\r\n        }\r\n        now = Date.now()\r\n        delta = now - (touch.last || now)\r\n        touch.el = $('tagName' in firstTouch.target ?\r\n          firstTouch.target : firstTouch.target.parentNode)\r\n        touchTimeout && clearTimeout(touchTimeout)\r\n        touch.x1 = firstTouch.pageX\r\n        touch.y1 = firstTouch.pageY\r\n        if (delta > 0 && delta <= 250) touch.isDoubleTap = true\r\n        touch.last = now\r\n        longTapTimeout = setTimeout(longTap, longTapDelay)\r\n        // adds the current touch contact for IE gesture recognition\r\n        if (gesture && _isPointerType) gesture.addPointer(e.pointerId);\r\n      })\r\n      .on('touchmove MSPointerMove pointermove', function(e){\r\n        if((_isPointerType = isPointerEventType(e, 'move')) &&\r\n          !isPrimaryTouch(e)) return\r\n        firstTouch = _isPointerType ? e : e.touches[0]\r\n        cancelLongTap()\r\n        touch.x2 = firstTouch.pageX\r\n        touch.y2 = firstTouch.pageY\r\n\r\n        deltaX += Math.abs(touch.x1 - touch.x2)\r\n        deltaY += Math.abs(touch.y1 - touch.y2)\r\n      })\r\n      .on('touchend MSPointerUp pointerup', function(e){\r\n        if((_isPointerType = isPointerEventType(e, 'up')) &&\r\n          !isPrimaryTouch(e)) return\r\n        cancelLongTap()\r\n\r\n        // swipe\r\n        if ((touch.x2 && Math.abs(touch.x1 - touch.x2) > 30) ||\r\n            (touch.y2 && Math.abs(touch.y1 - touch.y2) > 30))\r\n\r\n          swipeTimeout = setTimeout(function() {\r\n            touch.el.trigger('swipe')\r\n            touch.el.trigger('swipe' + (swipeDirection(touch.x1, touch.x2, touch.y1, touch.y2)))\r\n            touch = {}\r\n          }, 0)\r\n\r\n        // normal tap\r\n        else if ('last' in touch)\r\n          // don't fire tap when delta position changed by more than 30 pixels,\r\n          // for instance when moving to a point and back to origin\r\n          if (deltaX < 30 && deltaY < 30) {\r\n            // delay by one tick so we can cancel the 'tap' event if 'scroll' fires\r\n            // ('tap' fires before 'scroll')\r\n            tapTimeout = setTimeout(function() {\r\n\r\n              // trigger universal 'tap' with the option to cancelTouch()\r\n              // (cancelTouch cancels processing of single vs double taps for faster 'tap' response)\r\n              var event = $.Event('tap')\r\n              event.cancelTouch = cancelAll\r\n              touch.el.trigger(event)\r\n\r\n              // trigger double tap immediately\r\n              if (touch.isDoubleTap) {\r\n                if (touch.el) touch.el.trigger('doubleTap')\r\n                touch = {}\r\n              }\r\n\r\n              // trigger single tap after 250ms of inactivity\r\n              else {\r\n                touchTimeout = setTimeout(function(){\r\n                  touchTimeout = null\r\n                  if (touch.el) touch.el.trigger('singleTap')\r\n                  touch = {}\r\n                }, 250)\r\n              }\r\n            }, 0)\r\n          } else {\r\n            touch = {}\r\n          }\r\n          deltaX = deltaY = 0\r\n\r\n      })\r\n      // when the browser window loses focus,\r\n      // for example when a modal dialog is shown,\r\n      // cancel all ongoing events\r\n      .on('touchcancel MSPointerCancel pointercancel', cancelAll)\r\n\r\n    // scrolling the window indicates intention of the user\r\n    // to scroll, not tap or swipe, so cancel all ongoing events\r\n    $(window).on('scroll', cancelAll)\r\n  })\r\n\r\n  ;['swipe', 'swipeLeft', 'swipeRight', 'swipeUp', 'swipeDown',\r\n    'doubleTap', 'tap', 'singleTap', 'longTap'].forEach(function(eventName){\r\n    $.fn[eventName] = function(callback){ return this.on(eventName, callback) }\r\n  })\r\n})(Zepto)\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 4 */,
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	eval("/*** IMPORTS FROM imports-loader ***/\nvar define = false;\n\n__webpack_require__(6);\r\n__webpack_require__(9);\r\n__webpack_require__(2);\r\n__webpack_require__(3);\r\nvar userName = window.location.href.split('=')[1];\r\n$('#footer li').eq(1).on('tap',function(){\r\n    window.location.href = 'classify.html?user='+userName;\r\n});\r\n$('#footer li').eq(2).on('tap',function(){\r\n    window.location.href = 'cars.html?user='+userName;\r\n});\r\n$('#footer li').eq(3).on('tap',function(){\r\n    window.location.href = 'myshow.html?user='+userName;\r\n});\r\n$('#footer li').eq(4).on('tap',function(){\r\n    window.location.href = 'more.html?user='+userName;\r\n});\r\nvar myswiper = new Swiper('.swiper-container',{\r\n    autoplay:true,\r\n    loop:true,\r\n    speed: 1000,\r\n    pagination : '.swiper-pagination',\r\n    resistanceRatio:0\r\n});\r\ngetBannerdata();\r\nfunction getBannerdata(){\r\n    $.ajax({\r\n        url:\"http://datainfo.duapp.com/shopdata/getBanner.php\",\r\n        type:'get',\r\n        dataType:'jsonp',\r\n        success:function(data){\r\n            for(var i=0;i<4;i++){\r\n                var src = JSON.parse(data[i].goodsBenUrl)[0];\r\n                $('.swiper-wrapper .swiper-slide').eq(i+1).find('img').attr('src',src);\r\n            }\r\n        },\r\n        error:function(){\r\n            console.log(\"something go wrong~\");\r\n        }\r\n    })\r\n}\r\ngetGoodsdata();\r\nfunction getGoodsdata(){\r\n    $.ajax({\r\n        url:\"http://datainfo.duapp.com/shopdata/getGoods.php\",\r\n        type:'get',\r\n        dataType:'jsonp',\r\n        success:function(data){\r\n            for(var i=0;i<5;i++){\r\n                var src = data[i].goodsListImg;\r\n                var info = data[i].goodsName;\r\n                var price = data[i].price;\r\n                var disc = data[i].discount;\r\n                var goodsID = data[i].goodsID;\r\n                $('#thelist').append('<li><dl><dt><img src='+\r\n                    src+' alt=\"\"> </dt> <dd> <p class=\"intro-txt\">'+\r\n                    info+'</p> <div> <span class=\"intro-price\"><p> <span class=\"new-price\">￥'+\r\n                    price+'</span> <span class=\"old-price\">￥2880</span></p><b class=\"disc\">'+\r\n                    disc+'折</b> </span> <span id=\"bycar\" class=\"bycar iconfont\" data-id='+\r\n                    goodsID+'>&#xe629;</span> </div> </dd> </dl> </li>');\r\n            }\r\n        },\r\n        error:function(){\r\n            console.log(\"something go wrong~\");\r\n        }\r\n    });\r\n}\r\nif(userName != undefined && userName != 'undefined') {\r\n    $('#thelist').on('tap','#bycar',function(){\r\n        var goodsID = $(this).attr('data-id');\r\n        $.ajax({\r\n            url: 'http://datainfo.duapp.com/shopdata/updatecar.php',\r\n            type: 'get',\r\n            data: {\r\n                userID: userName,\r\n                goodsID: goodsID,\r\n                number: 1\r\n            },\r\n            success: function (data) {\r\n                console.log(data);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvaG9tZS5qcz8yYjU0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLElBQUk7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLElBQUk7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEM7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTCIsImZpbGUiOiI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqKiBJTVBPUlRTIEZST00gaW1wb3J0cy1sb2FkZXIgKioqL1xudmFyIGRlZmluZSA9IGZhbHNlO1xuXG5yZXF1aXJlKCcuL215aXNjcm9sbCcpO1xyXG5yZXF1aXJlKCcuL3N3aXBlci0zLjMuMS5taW4nKTtcclxucmVxdWlyZSgnLi96ZXB0bycpO1xyXG5yZXF1aXJlKCcuL3plcHRvLXRhcCcpO1xyXG52YXIgdXNlck5hbWUgPSB3aW5kb3cubG9jYXRpb24uaHJlZi5zcGxpdCgnPScpWzFdO1xyXG4kKCcjZm9vdGVyIGxpJykuZXEoMSkub24oJ3RhcCcsZnVuY3Rpb24oKXtcclxuICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gJ2NsYXNzaWZ5Lmh0bWw/dXNlcj0nK3VzZXJOYW1lO1xyXG59KTtcclxuJCgnI2Zvb3RlciBsaScpLmVxKDIpLm9uKCd0YXAnLGZ1bmN0aW9uKCl7XHJcbiAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICdjYXJzLmh0bWw/dXNlcj0nK3VzZXJOYW1lO1xyXG59KTtcclxuJCgnI2Zvb3RlciBsaScpLmVxKDMpLm9uKCd0YXAnLGZ1bmN0aW9uKCl7XHJcbiAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICdteXNob3cuaHRtbD91c2VyPScrdXNlck5hbWU7XHJcbn0pO1xyXG4kKCcjZm9vdGVyIGxpJykuZXEoNCkub24oJ3RhcCcsZnVuY3Rpb24oKXtcclxuICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gJ21vcmUuaHRtbD91c2VyPScrdXNlck5hbWU7XHJcbn0pO1xyXG52YXIgbXlzd2lwZXIgPSBuZXcgU3dpcGVyKCcuc3dpcGVyLWNvbnRhaW5lcicse1xyXG4gICAgYXV0b3BsYXk6dHJ1ZSxcclxuICAgIGxvb3A6dHJ1ZSxcclxuICAgIHNwZWVkOiAxMDAwLFxyXG4gICAgcGFnaW5hdGlvbiA6ICcuc3dpcGVyLXBhZ2luYXRpb24nLFxyXG4gICAgcmVzaXN0YW5jZVJhdGlvOjBcclxufSk7XHJcbmdldEJhbm5lcmRhdGEoKTtcclxuZnVuY3Rpb24gZ2V0QmFubmVyZGF0YSgpe1xyXG4gICAgJC5hamF4KHtcclxuICAgICAgICB1cmw6XCJodHRwOi8vZGF0YWluZm8uZHVhcHAuY29tL3Nob3BkYXRhL2dldEJhbm5lci5waHBcIixcclxuICAgICAgICB0eXBlOidnZXQnLFxyXG4gICAgICAgIGRhdGFUeXBlOidqc29ucCcsXHJcbiAgICAgICAgc3VjY2VzczpmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICAgZm9yKHZhciBpPTA7aTw0O2krKyl7XHJcbiAgICAgICAgICAgICAgICB2YXIgc3JjID0gSlNPTi5wYXJzZShkYXRhW2ldLmdvb2RzQmVuVXJsKVswXTtcclxuICAgICAgICAgICAgICAgICQoJy5zd2lwZXItd3JhcHBlciAuc3dpcGVyLXNsaWRlJykuZXEoaSsxKS5maW5kKCdpbWcnKS5hdHRyKCdzcmMnLHNyYyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGVycm9yOmZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwic29tZXRoaW5nIGdvIHdyb25nflwiKTtcclxuICAgICAgICB9XHJcbiAgICB9KVxyXG59XHJcbmdldEdvb2RzZGF0YSgpO1xyXG5mdW5jdGlvbiBnZXRHb29kc2RhdGEoKXtcclxuICAgICQuYWpheCh7XHJcbiAgICAgICAgdXJsOlwiaHR0cDovL2RhdGFpbmZvLmR1YXBwLmNvbS9zaG9wZGF0YS9nZXRHb29kcy5waHBcIixcclxuICAgICAgICB0eXBlOidnZXQnLFxyXG4gICAgICAgIGRhdGFUeXBlOidqc29ucCcsXHJcbiAgICAgICAgc3VjY2VzczpmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICAgZm9yKHZhciBpPTA7aTw1O2krKyl7XHJcbiAgICAgICAgICAgICAgICB2YXIgc3JjID0gZGF0YVtpXS5nb29kc0xpc3RJbWc7XHJcbiAgICAgICAgICAgICAgICB2YXIgaW5mbyA9IGRhdGFbaV0uZ29vZHNOYW1lO1xyXG4gICAgICAgICAgICAgICAgdmFyIHByaWNlID0gZGF0YVtpXS5wcmljZTtcclxuICAgICAgICAgICAgICAgIHZhciBkaXNjID0gZGF0YVtpXS5kaXNjb3VudDtcclxuICAgICAgICAgICAgICAgIHZhciBnb29kc0lEID0gZGF0YVtpXS5nb29kc0lEO1xyXG4gICAgICAgICAgICAgICAgJCgnI3RoZWxpc3QnKS5hcHBlbmQoJzxsaT48ZGw+PGR0PjxpbWcgc3JjPScrXHJcbiAgICAgICAgICAgICAgICAgICAgc3JjKycgYWx0PVwiXCI+IDwvZHQ+IDxkZD4gPHAgY2xhc3M9XCJpbnRyby10eHRcIj4nK1xyXG4gICAgICAgICAgICAgICAgICAgIGluZm8rJzwvcD4gPGRpdj4gPHNwYW4gY2xhc3M9XCJpbnRyby1wcmljZVwiPjxwPiA8c3BhbiBjbGFzcz1cIm5ldy1wcmljZVwiPu+/pScrXHJcbiAgICAgICAgICAgICAgICAgICAgcHJpY2UrJzwvc3Bhbj4gPHNwYW4gY2xhc3M9XCJvbGQtcHJpY2VcIj7vv6UyODgwPC9zcGFuPjwvcD48YiBjbGFzcz1cImRpc2NcIj4nK1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc2MrJ+aKmDwvYj4gPC9zcGFuPiA8c3BhbiBpZD1cImJ5Y2FyXCIgY2xhc3M9XCJieWNhciBpY29uZm9udFwiIGRhdGEtaWQ9JytcclxuICAgICAgICAgICAgICAgICAgICBnb29kc0lEKyc+JiN4ZTYyOTs8L3NwYW4+IDwvZGl2PiA8L2RkPiA8L2RsPiA8L2xpPicpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlcnJvcjpmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcInNvbWV0aGluZyBnbyB3cm9uZ35cIik7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn1cclxuaWYodXNlck5hbWUgIT0gdW5kZWZpbmVkICYmIHVzZXJOYW1lICE9ICd1bmRlZmluZWQnKSB7XHJcbiAgICAkKCcjdGhlbGlzdCcpLm9uKCd0YXAnLCcjYnljYXInLGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdmFyIGdvb2RzSUQgPSAkKHRoaXMpLmF0dHIoJ2RhdGEtaWQnKTtcclxuICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICB1cmw6ICdodHRwOi8vZGF0YWluZm8uZHVhcHAuY29tL3Nob3BkYXRhL3VwZGF0ZWNhci5waHAnLFxyXG4gICAgICAgICAgICB0eXBlOiAnZ2V0JyxcclxuICAgICAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICAgICAgdXNlcklEOiB1c2VyTmFtZSxcclxuICAgICAgICAgICAgICAgIGdvb2RzSUQ6IGdvb2RzSUQsXHJcbiAgICAgICAgICAgICAgICBudW1iZXI6IDFcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvanMvaG9tZS5qc1xuICoqIG1vZHVsZSBpZCA9IDVcbiAqKiBtb2R1bGUgY2h1bmtzID0gMlxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	eval("/*** IMPORTS FROM imports-loader ***/\nvar define = false;\n\n__webpack_require__(7);\r\n// require('./zepto-tap');\r\n//require('./iscroll');\r\nvar thisScroll = __webpack_require__(8);\r\nvar myScroll,\r\n\tpullDownEl, pullDownOffset,_maxScrollY,\r\n\tpullUpEl, pullUpOffset,num=1,\r\n\tgeneratedCount = 0;\r\n\r\n//function pullDownAction () {\r\n//\tsetTimeout(function () {\t// <-- Simulate network congestion, remove setTimeout from production!\r\n//\t\tvar el, li, i;\r\n//\t\tel = document.getElementById('thelist');\r\n//\t\tfor (i=0; i<3; i++) {\r\n//\t\t\tvar oLi = $('#thelist li').first().clone();\r\n//\t\t\tif(oLi.hasClass('active')){\r\n//\t\t\t\toLi.removeClass('active');\r\n//\t\t\t}\r\n//\t\t\t$('#thelist').prepend(oLi);\r\n//\t\t}\r\n//\t\t//prepend 在父元素之前追加\r\n//\t\t//刷新myscroll\r\n//\t\tmyScroll.refresh();\t\t// Remember to refresh when contents are loaded (ie: on ajax completion)\r\n//\t}, 1000);\t// <-- Simulate network congestion, remove setTimeout from production!\r\n//}\r\nfunction getData(count){\r\n\t$.ajax({\r\n\t\turl:\"http://datainfo.duapp.com/shopdata/getGoods.php\",\r\n\t\ttype:'get',\r\n\t\tdataType:'jsonp',\r\n\t\tsuccess:function(data){\r\n\t\t\tfor(var i=count;i<count+5;i++){\r\n\t\t\t\tvar src = data[i].goodsListImg;\r\n\t\t\t\tvar info = data[i].goodsName;\r\n\t\t\t\tvar price = data[i].price;\r\n\t\t\t\tvar disc = data[i].discount;\r\n\t\t\t\t$('#thelist').append('<li><dl><dt><img src='+\r\n\t\t\t\t\tsrc+' alt=\"\"> </dt> <dd> <p class=\"intro-txt\">'+\r\n\t\t\t\t\tinfo+'</p> <div> <span class=\"intro-price\"><p> <span class=\"new-price\">￥'+\r\n\t\t\t\t\tprice+'</span> <span class=\"old-price\">￥2880</span></p><b class=\"disc\">'+\r\n\t\t\t\t\tdisc+'折</b> </span> <span class=\"bycar iconfont\">&#xe629;</span> </div> </dd> </dl> </li>');\r\n\t\t\t}\r\n\t\t\tmyScroll.refresh();\r\n\t\t},\r\n\t\terror:function(){\r\n\t\t\tconsole.log(\"something go wrong~\");\r\n\t\t}\r\n\t})\r\n}\r\nfunction pullUpAction () {\r\n\tsetTimeout(function () {\t// <-- Simulate network congestion, remove setTimeout from production!\r\n\t\tvar el, li, i;\r\n\t\tel = document.getElementById('thelist');\r\n\t\t//generatedCount++;\r\n\t\t// generatedCount  =1  ==>data1.json\r\n\t\t//getData(generatedCount);\r\n\t\t//控制data数据\r\n\r\n\t\t// if(generatedCount>=5){\r\n\t\t// \tgeneratedCount=0;\r\n\t\t// }\r\n\t\tgeneratedCount+=5;\r\n\t\tif(generatedCount>5){\r\n\t\t\tgeneratedCount = 0;\r\n\t\t}\r\n\t\tgetData(generatedCount);\r\n\t\t// function getData(count){\r\n\t\t// \t$.ajax({\r\n\t\t// \t\turl:'../json/data'+count+'.json',\r\n\t\t// \t\ttype:\"get\",\r\n\t\t// \t\t// data:count,\r\n\t\t// \t\tsuccess:function(data){\r\n\t\t// \t\t\tvar l = data.weikeList.length;\r\n\t\t// \t\t\tfor(var i=0;i<l;i++){\r\n\t\t// \t\t\t\tvar text = data.weikeList[i].wkTitle;\r\n\t\t// \t\t\t\tvar oLi = $('#thelist li').first().clone();\r\n\t\t// \t\t\t\toLi.find('div').html(text+'up');\r\n\t\t// \t\t\t\tif(oLi.hasClass('active')){\r\n\t\t// \t\t\t\t\toLi.removeClass('active');\r\n\t\t// \t\t\t\t}\r\n\t\t// \t\t\t\t$('#thelist').append(oLi);\r\n\t\t// \t\t\t}\r\n\t\t// \t\t}\r\n\t\t// \t});\r\n\t\t// }\r\n\r\n\t\t// for (i=0; i<4; i++) {\r\n\t\t// \tli = document.createElement('li');\r\n\t\t// \tli.innerText = 'Generated up ' + (++generatedCount);\r\n\t\t// \tel.appendChild(li, el.childNodes[0]);\r\n\t\t// }\r\n\r\n// 03\tajax({\r\n// 04\turl:\"RemoteInterface.cgi\",\r\n// 05\tmethod:\"get\",\r\n// 06\tdata:{pageIndex:pageIndex},\r\n// 07\tcallback:callback\r\n// 08\t});\r\n// 把加载更多的接口写在这里\r\n\r\n\t\t\t// Remember to refresh when contents are loaded (ie: on ajax completion)\r\n\t}, 1000);\t// <-- Simulate network congestion, remove setTimeout from production!\r\n}\r\n\r\nfunction loaded() {\r\n\tpullDownEl = document.getElementById('pullDown');\r\n\tpullDownOffset = pullDownEl.offsetHeight;\r\n\tpullUpEl = document.getElementById('pullUp');\r\n\tpullUpOffset = pullUpEl.offsetHeight;\r\n\t//初始化scroll\r\n\tmyScroll = new thisScroll.iScroll('wrapper', {\r\n\t\tuseTransition: true,       //是否使用css 变形\r\n\t\ttopOffset: pullDownOffset,   //已经滚动的基准值\r\n\t\t// hideScrollbar:true,          //表示用户没有操作scroll时会隐藏滚动条\r\n\t\t// fadeScrollbar:true,\r\n\t\t//表示滚动条重新 刷新\r\n\r\n\t\tonRefresh: function () {\r\n\t\t\t//this  ==>scroll\r\n\t\t\t//this.maxScrollY 表示滚动到底部的距离  (定值前提是scroll不加载更多)\r\n\t\t\t//myScroll.maxScrollX  myScroll.maxScrollY\r\n\t\t\t// 当滚动到底部时的 myScroll.x/y\r\n\t\t\t// $.each($('#thelist li'),function(index){\r\n\t\t\t// \t$(this).html(index+1);\r\n\t\t\t// })\r\n\r\n            _maxScrollY = this.maxScrollY = this.maxScrollY + pullUpOffset;\r\n            //console.log(this.maxScrollY)\r\n            //match\r\n\t\t\tif (pullDownEl.className.match('loading')) {\r\n\t\t\t\tpullDownEl.className = '';\r\n\t\t\t\tpullDownEl.querySelector('.pullDownLabel').innerHTML = '下拉刷新...';\r\n\t\t\t} else if (pullUpEl.className.match('loading')) {\r\n\t\t\t\tpullUpEl.className = '';\r\n\t\t\t\tpullUpEl.querySelector('.pullUpLabel').innerHTML = '加载更多...';\r\n\t\t\t}\r\n\t\t},\r\n\t\t//表示滚动条开始滑动\r\n\t\tonScrollMove: function () {\r\n\t\t\t// console.log(this.y);\r\n\t\t\t//console.log(_maxScrollY - pullUpOffset);\r\n\t\t\t// console.log(this.maxScrollY)\r\n\t\t\t// y:滚动条距离垂直初始位置 (负值)\r\n\t\t\tif (this.y > 5 && !pullDownEl.className.match('flip')) {\r\n\t\t\t\tpullDownEl.className = 'flip';\r\n\t\t\t\tpullDownEl.querySelector('.pullDownLabel').innerHTML = '松开刷新...';  //松开刷新\r\n\t\t\t\tthis.minScrollY = 0;\r\n\r\n\t\t\t} else if (this.y < 5 && pullDownEl.className.match('flip')) {\r\n\t\t\t\tpullDownEl.className = '';\r\n\t\t\t\tpullDownEl.querySelector('.pullDownLabel').innerHTML = '松开刷新...';\r\n\t\t\t\tthis.minScrollY = -pullDownOffset;\r\n\t\t\t} else if (this.y <= (_maxScrollY - pullUpOffset) && !pullUpEl.className.match('flip')) {\r\n\t\t\t\tpullUpEl.className = 'flip';\r\n\t\t\t\tpullUpEl.querySelector('.pullUpLabel').innerHTML = '松开刷新...';\r\n                this.maxScrollY = this.maxScrollY - pullUpOffset;\r\n\t\t\t}\r\n\t\t\t else if (this.y > (_maxScrollY - pullUpOffset) && pullUpEl.className.match('flip')) {\r\n\t\t\t\t//debugger;\r\n\t\t\t\tpullUpEl.className = '';\r\n\t\t\t\tpullUpEl.querySelector('.pullUpLabel').innerHTML = '加载更多...';\r\n                this.maxScrollY = this.maxScrollY + pullUpOffset;\r\n\t\t\t}\r\n\t\t},\r\n\t\t//表示滚动条滑动结束时候\r\n\t\tonScrollEnd: function () {\r\n\t\t\tif (pullDownEl.className.match('flip')) {\r\n\t\t\t\tpullDownEl.className = 'loading';\r\n\t\t\t\tpullDownEl.querySelector('.pullDownLabel').innerHTML = '松开刷新...';\r\n\t\t\t\t//pullDownAction();\t// Execute custom function (ajax call?)\r\n\t\t\t\tmyScroll.refresh();\r\n\t\t\t}else if (pullUpEl.className.match('flip')) {\r\n\t\t\t\tpullUpEl.className = 'loading';\r\n\t\t\t\tpullUpEl.querySelector('.pullUpLabel').innerHTML = '加载中...';\r\n\t\t\t\tpullUpAction();\t// Execute custom function (ajax call?)\r\n\t\t\t\t//console.log(111);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\nsetTimeout(function () { document.getElementById('wrapper').style.left = '0'; }, 800);\r\n}\r\n\r\n//处理浏览器默认事件\r\ndocument.addEventListener('touchmove', function (e) { e.preventDefault(); }, false);\r\n//当 DOM 元素 已经加载好内容后执行\r\ndocument.addEventListener('DOMContentLoaded', function () { setTimeout(loaded, 200); }, false);\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 7 */
/***/ function(module, exports) {

	eval("/*** IMPORTS FROM imports-loader ***/\nvar define = false;\n\n/* Zepto 1.1.6 - zepto ajax event data form touch fx fx_methods - zeptojs.com/license */\nvar Zepto=function(){function L(t){return null==t?String(t):j[S.call(t)]||\"object\"}function A(t){return\"function\"==L(t)}function Z(t){return null!=t&&t==t.window}function $(t){return null!=t&&t.nodeType==t.DOCUMENT_NODE}function R(t){return\"object\"==L(t)}function k(t){return R(t)&&!Z(t)&&Object.getPrototypeOf(t)==Object.prototype}function z(t){return\"number\"==typeof t.length}function F(t){return a.call(t,function(t){return null!=t})}function _(t){return t.length>0?n.fn.concat.apply([],t):t}function I(t){return t.replace(/::/g,\"/\").replace(/([A-Z]+)([A-Z][a-z])/g,\"$1_$2\").replace(/([a-z\\d])([A-Z])/g,\"$1_$2\").replace(/_/g,\"-\").toLowerCase()}function q(t){return t in c?c[t]:c[t]=new RegExp(\"(^|\\\\s)\"+t+\"(\\\\s|$)\")}function H(t,e){return\"number\"!=typeof e||l[I(t)]?e:e+\"px\"}function U(t){var e,n;return f[t]||(e=u.createElement(t),u.body.appendChild(e),n=getComputedStyle(e,\"\").getPropertyValue(\"display\"),e.parentNode.removeChild(e),\"none\"==n&&(n=\"block\"),f[t]=n),f[t]}function X(t){return\"children\"in t?s.call(t.children):n.map(t.childNodes,function(t){return 1==t.nodeType?t:void 0})}function V(t,e){var n,i=t?t.length:0;for(n=0;i>n;n++)this[n]=t[n];this.length=i,this.selector=e||\"\"}function B(n,i,r){for(e in i)r&&(k(i[e])||D(i[e]))?(k(i[e])&&!k(n[e])&&(n[e]={}),D(i[e])&&!D(n[e])&&(n[e]=[]),B(n[e],i[e],r)):i[e]!==t&&(n[e]=i[e])}function Y(t,e){return null==e?n(t):n(t).filter(e)}function J(t,e,n,i){return A(e)?e.call(t,n,i):e}function W(t,e,n){null==n?t.removeAttribute(e):t.setAttribute(e,n)}function G(e,n){var i=e.className||\"\",r=i&&i.baseVal!==t;return n===t?r?i.baseVal:i:void(r?i.baseVal=n:e.className=n)}function K(t){try{return t?\"true\"==t||(\"false\"==t?!1:\"null\"==t?null:+t+\"\"==t?+t:/^[\\[\\{]/.test(t)?n.parseJSON(t):t):t}catch(e){return t}}function Q(t,e){e(t);for(var n=0,i=t.childNodes.length;i>n;n++)Q(t.childNodes[n],e)}var t,e,n,i,P,N,r=[],o=r.concat,a=r.filter,s=r.slice,u=window.document,f={},c={},l={\"column-count\":1,columns:1,\"font-weight\":1,\"line-height\":1,opacity:1,\"z-index\":1,zoom:1},h=/^\\s*<(\\w+|!)[^>]*>/,p=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,d=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,m=/^(?:body|html)$/i,g=/([A-Z])/g,v=[\"val\",\"css\",\"html\",\"text\",\"data\",\"width\",\"height\",\"offset\"],y=[\"after\",\"prepend\",\"before\",\"append\"],x=u.createElement(\"table\"),w=u.createElement(\"tr\"),b={tr:u.createElement(\"tbody\"),tbody:x,thead:x,tfoot:x,td:w,th:w,\"*\":u.createElement(\"div\")},E=/complete|loaded|interactive/,T=/^[\\w-]*$/,j={},S=j.toString,C={},O=u.createElement(\"div\"),M={tabindex:\"tabIndex\",readonly:\"readOnly\",\"for\":\"htmlFor\",\"class\":\"className\",maxlength:\"maxLength\",cellspacing:\"cellSpacing\",cellpadding:\"cellPadding\",rowspan:\"rowSpan\",colspan:\"colSpan\",usemap:\"useMap\",frameborder:\"frameBorder\",contenteditable:\"contentEditable\"},D=Array.isArray||function(t){return t instanceof Array};return C.matches=function(t,e){if(!e||!t||1!==t.nodeType)return!1;var n=t.webkitMatchesSelector||t.mozMatchesSelector||t.oMatchesSelector||t.matchesSelector;if(n)return n.call(t,e);var i,r=t.parentNode,o=!r;return o&&(r=O).appendChild(t),i=~C.qsa(r,e).indexOf(t),o&&O.removeChild(t),i},P=function(t){return t.replace(/-+(.)?/g,function(t,e){return e?e.toUpperCase():\"\"})},N=function(t){return a.call(t,function(e,n){return t.indexOf(e)==n})},C.fragment=function(e,i,r){var o,a,f;return p.test(e)&&(o=n(u.createElement(RegExp.$1))),o||(e.replace&&(e=e.replace(d,\"<$1></$2>\")),i===t&&(i=h.test(e)&&RegExp.$1),i in b||(i=\"*\"),f=b[i],f.innerHTML=\"\"+e,o=n.each(s.call(f.childNodes),function(){f.removeChild(this)})),k(r)&&(a=n(o),n.each(r,function(t,e){v.indexOf(t)>-1?a[t](e):a.attr(t,e)})),o},C.Z=function(t,e){return new V(t,e)},C.isZ=function(t){return t instanceof C.Z},C.init=function(e,i){var r;if(!e)return C.Z();if(\"string\"==typeof e)if(e=e.trim(),\"<\"==e[0]&&h.test(e))r=C.fragment(e,RegExp.$1,i),e=null;else{if(i!==t)return n(i).find(e);r=C.qsa(u,e)}else{if(A(e))return n(u).ready(e);if(C.isZ(e))return e;if(D(e))r=F(e);else if(R(e))r=[e],e=null;else if(h.test(e))r=C.fragment(e.trim(),RegExp.$1,i),e=null;else{if(i!==t)return n(i).find(e);r=C.qsa(u,e)}}return C.Z(r,e)},n=function(t,e){return C.init(t,e)},n.extend=function(t){var e,n=s.call(arguments,1);return\"boolean\"==typeof t&&(e=t,t=n.shift()),n.forEach(function(n){B(t,n,e)}),t},C.qsa=function(t,e){var n,i=\"#\"==e[0],r=!i&&\".\"==e[0],o=i||r?e.slice(1):e,a=T.test(o);return t.getElementById&&a&&i?(n=t.getElementById(o))?[n]:[]:1!==t.nodeType&&9!==t.nodeType&&11!==t.nodeType?[]:s.call(a&&!i&&t.getElementsByClassName?r?t.getElementsByClassName(o):t.getElementsByTagName(e):t.querySelectorAll(e))},n.contains=u.documentElement.contains?function(t,e){return t!==e&&t.contains(e)}:function(t,e){for(;e&&(e=e.parentNode);)if(e===t)return!0;return!1},n.type=L,n.isFunction=A,n.isWindow=Z,n.isArray=D,n.isPlainObject=k,n.isEmptyObject=function(t){var e;for(e in t)return!1;return!0},n.inArray=function(t,e,n){return r.indexOf.call(e,t,n)},n.camelCase=P,n.trim=function(t){return null==t?\"\":String.prototype.trim.call(t)},n.uuid=0,n.support={},n.expr={},n.noop=function(){},n.map=function(t,e){var n,r,o,i=[];if(z(t))for(r=0;r<t.length;r++)n=e(t[r],r),null!=n&&i.push(n);else for(o in t)n=e(t[o],o),null!=n&&i.push(n);return _(i)},n.each=function(t,e){var n,i;if(z(t)){for(n=0;n<t.length;n++)if(e.call(t[n],n,t[n])===!1)return t}else for(i in t)if(e.call(t[i],i,t[i])===!1)return t;return t},n.grep=function(t,e){return a.call(t,e)},window.JSON&&(n.parseJSON=JSON.parse),n.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(t,e){j[\"[object \"+e+\"]\"]=e.toLowerCase()}),n.fn={constructor:C.Z,length:0,forEach:r.forEach,reduce:r.reduce,push:r.push,sort:r.sort,splice:r.splice,indexOf:r.indexOf,concat:function(){var t,e,n=[];for(t=0;t<arguments.length;t++)e=arguments[t],n[t]=C.isZ(e)?e.toArray():e;return o.apply(C.isZ(this)?this.toArray():this,n)},map:function(t){return n(n.map(this,function(e,n){return t.call(e,n,e)}))},slice:function(){return n(s.apply(this,arguments))},ready:function(t){return E.test(u.readyState)&&u.body?t(n):u.addEventListener(\"DOMContentLoaded\",function(){t(n)},!1),this},get:function(e){return e===t?s.call(this):this[e>=0?e:e+this.length]},toArray:function(){return this.get()},size:function(){return this.length},remove:function(){return this.each(function(){null!=this.parentNode&&this.parentNode.removeChild(this)})},each:function(t){return r.every.call(this,function(e,n){return t.call(e,n,e)!==!1}),this},filter:function(t){return A(t)?this.not(this.not(t)):n(a.call(this,function(e){return C.matches(e,t)}))},add:function(t,e){return n(N(this.concat(n(t,e))))},is:function(t){return this.length>0&&C.matches(this[0],t)},not:function(e){var i=[];if(A(e)&&e.call!==t)this.each(function(t){e.call(this,t)||i.push(this)});else{var r=\"string\"==typeof e?this.filter(e):z(e)&&A(e.item)?s.call(e):n(e);this.forEach(function(t){r.indexOf(t)<0&&i.push(t)})}return n(i)},has:function(t){return this.filter(function(){return R(t)?n.contains(this,t):n(this).find(t).size()})},eq:function(t){return-1===t?this.slice(t):this.slice(t,+t+1)},first:function(){var t=this[0];return t&&!R(t)?t:n(t)},last:function(){var t=this[this.length-1];return t&&!R(t)?t:n(t)},find:function(t){var e,i=this;return e=t?\"object\"==typeof t?n(t).filter(function(){var t=this;return r.some.call(i,function(e){return n.contains(e,t)})}):1==this.length?n(C.qsa(this[0],t)):this.map(function(){return C.qsa(this,t)}):n()},closest:function(t,e){var i=this[0],r=!1;for(\"object\"==typeof t&&(r=n(t));i&&!(r?r.indexOf(i)>=0:C.matches(i,t));)i=i!==e&&!$(i)&&i.parentNode;return n(i)},parents:function(t){for(var e=[],i=this;i.length>0;)i=n.map(i,function(t){return(t=t.parentNode)&&!$(t)&&e.indexOf(t)<0?(e.push(t),t):void 0});return Y(e,t)},parent:function(t){return Y(N(this.pluck(\"parentNode\")),t)},children:function(t){return Y(this.map(function(){return X(this)}),t)},contents:function(){return this.map(function(){return this.contentDocument||s.call(this.childNodes)})},siblings:function(t){return Y(this.map(function(t,e){return a.call(X(e.parentNode),function(t){return t!==e})}),t)},empty:function(){return this.each(function(){this.innerHTML=\"\"})},pluck:function(t){return n.map(this,function(e){return e[t]})},show:function(){return this.each(function(){\"none\"==this.style.display&&(this.style.display=\"\"),\"none\"==getComputedStyle(this,\"\").getPropertyValue(\"display\")&&(this.style.display=U(this.nodeName))})},replaceWith:function(t){return this.before(t).remove()},wrap:function(t){var e=A(t);if(this[0]&&!e)var i=n(t).get(0),r=i.parentNode||this.length>1;return this.each(function(o){n(this).wrapAll(e?t.call(this,o):r?i.cloneNode(!0):i)})},wrapAll:function(t){if(this[0]){n(this[0]).before(t=n(t));for(var e;(e=t.children()).length;)t=e.first();n(t).append(this)}return this},wrapInner:function(t){var e=A(t);return this.each(function(i){var r=n(this),o=r.contents(),a=e?t.call(this,i):t;o.length?o.wrapAll(a):r.append(a)})},unwrap:function(){return this.parent().each(function(){n(this).replaceWith(n(this).children())}),this},clone:function(){return this.map(function(){return this.cloneNode(!0)})},hide:function(){return this.css(\"display\",\"none\")},toggle:function(e){return this.each(function(){var i=n(this);(e===t?\"none\"==i.css(\"display\"):e)?i.show():i.hide()})},prev:function(t){return n(this.pluck(\"previousElementSibling\")).filter(t||\"*\")},next:function(t){return n(this.pluck(\"nextElementSibling\")).filter(t||\"*\")},html:function(t){return 0 in arguments?this.each(function(e){var i=this.innerHTML;n(this).empty().append(J(this,t,e,i))}):0 in this?this[0].innerHTML:null},text:function(t){return 0 in arguments?this.each(function(e){var n=J(this,t,e,this.textContent);this.textContent=null==n?\"\":\"\"+n}):0 in this?this[0].textContent:null},attr:function(n,i){var r;return\"string\"!=typeof n||1 in arguments?this.each(function(t){if(1===this.nodeType)if(R(n))for(e in n)W(this,e,n[e]);else W(this,n,J(this,i,t,this.getAttribute(n)))}):this.length&&1===this[0].nodeType?!(r=this[0].getAttribute(n))&&n in this[0]?this[0][n]:r:t},removeAttr:function(t){return this.each(function(){1===this.nodeType&&t.split(\" \").forEach(function(t){W(this,t)},this)})},prop:function(t,e){return t=M[t]||t,1 in arguments?this.each(function(n){this[t]=J(this,e,n,this[t])}):this[0]&&this[0][t]},data:function(e,n){var i=\"data-\"+e.replace(g,\"-$1\").toLowerCase(),r=1 in arguments?this.attr(i,n):this.attr(i);return null!==r?K(r):t},val:function(t){return 0 in arguments?this.each(function(e){this.value=J(this,t,e,this.value)}):this[0]&&(this[0].multiple?n(this[0]).find(\"option\").filter(function(){return this.selected}).pluck(\"value\"):this[0].value)},offset:function(t){if(t)return this.each(function(e){var i=n(this),r=J(this,t,e,i.offset()),o=i.offsetParent().offset(),a={top:r.top-o.top,left:r.left-o.left};\"static\"==i.css(\"position\")&&(a.position=\"relative\"),i.css(a)});if(!this.length)return null;if(!n.contains(u.documentElement,this[0]))return{top:0,left:0};var e=this[0].getBoundingClientRect();return{left:e.left+window.pageXOffset,top:e.top+window.pageYOffset,width:Math.round(e.width),height:Math.round(e.height)}},css:function(t,i){if(arguments.length<2){var r,o=this[0];if(!o)return;if(r=getComputedStyle(o,\"\"),\"string\"==typeof t)return o.style[P(t)]||r.getPropertyValue(t);if(D(t)){var a={};return n.each(t,function(t,e){a[e]=o.style[P(e)]||r.getPropertyValue(e)}),a}}var s=\"\";if(\"string\"==L(t))i||0===i?s=I(t)+\":\"+H(t,i):this.each(function(){this.style.removeProperty(I(t))});else for(e in t)t[e]||0===t[e]?s+=I(e)+\":\"+H(e,t[e])+\";\":this.each(function(){this.style.removeProperty(I(e))});return this.each(function(){this.style.cssText+=\";\"+s})},index:function(t){return t?this.indexOf(n(t)[0]):this.parent().children().indexOf(this[0])},hasClass:function(t){return t?r.some.call(this,function(t){return this.test(G(t))},q(t)):!1},addClass:function(t){return t?this.each(function(e){if(\"className\"in this){i=[];var r=G(this),o=J(this,t,e,r);o.split(/\\s+/g).forEach(function(t){n(this).hasClass(t)||i.push(t)},this),i.length&&G(this,r+(r?\" \":\"\")+i.join(\" \"))}}):this},removeClass:function(e){return this.each(function(n){if(\"className\"in this){if(e===t)return G(this,\"\");i=G(this),J(this,e,n,i).split(/\\s+/g).forEach(function(t){i=i.replace(q(t),\" \")}),G(this,i.trim())}})},toggleClass:function(e,i){return e?this.each(function(r){var o=n(this),a=J(this,e,r,G(this));a.split(/\\s+/g).forEach(function(e){(i===t?!o.hasClass(e):i)?o.addClass(e):o.removeClass(e)})}):this},scrollTop:function(e){if(this.length){var n=\"scrollTop\"in this[0];return e===t?n?this[0].scrollTop:this[0].pageYOffset:this.each(n?function(){this.scrollTop=e}:function(){this.scrollTo(this.scrollX,e)})}},scrollLeft:function(e){if(this.length){var n=\"scrollLeft\"in this[0];return e===t?n?this[0].scrollLeft:this[0].pageXOffset:this.each(n?function(){this.scrollLeft=e}:function(){this.scrollTo(e,this.scrollY)})}},position:function(){if(this.length){var t=this[0],e=this.offsetParent(),i=this.offset(),r=m.test(e[0].nodeName)?{top:0,left:0}:e.offset();return i.top-=parseFloat(n(t).css(\"margin-top\"))||0,i.left-=parseFloat(n(t).css(\"margin-left\"))||0,r.top+=parseFloat(n(e[0]).css(\"border-top-width\"))||0,r.left+=parseFloat(n(e[0]).css(\"border-left-width\"))||0,{top:i.top-r.top,left:i.left-r.left}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent||u.body;t&&!m.test(t.nodeName)&&\"static\"==n(t).css(\"position\");)t=t.offsetParent;return t})}},n.fn.detach=n.fn.remove,[\"width\",\"height\"].forEach(function(e){var i=e.replace(/./,function(t){return t[0].toUpperCase()});n.fn[e]=function(r){var o,a=this[0];return r===t?Z(a)?a[\"inner\"+i]:$(a)?a.documentElement[\"scroll\"+i]:(o=this.offset())&&o[e]:this.each(function(t){a=n(this),a.css(e,J(this,r,t,a[e]()))})}}),y.forEach(function(t,e){var i=e%2;n.fn[t]=function(){var t,o,r=n.map(arguments,function(e){return t=L(e),\"object\"==t||\"array\"==t||null==e?e:C.fragment(e)}),a=this.length>1;return r.length<1?this:this.each(function(t,s){o=i?s:s.parentNode,s=0==e?s.nextSibling:1==e?s.firstChild:2==e?s:null;var f=n.contains(u.documentElement,o);r.forEach(function(t){if(a)t=t.cloneNode(!0);else if(!o)return n(t).remove();o.insertBefore(t,s),f&&Q(t,function(t){null==t.nodeName||\"SCRIPT\"!==t.nodeName.toUpperCase()||t.type&&\"text/javascript\"!==t.type||t.src||window.eval.call(window,t.innerHTML)})})})},n.fn[i?t+\"To\":\"insert\"+(e?\"Before\":\"After\")]=function(e){return n(e)[t](this),this}}),C.Z.prototype=V.prototype=n.fn,C.uniq=N,C.deserializeValue=K,n.zepto=C,n}();window.Zepto=Zepto,void 0===window.$&&(window.$=Zepto),function(t){function h(e,n,i){var r=t.Event(n);return t(e).trigger(r,i),!r.isDefaultPrevented()}function p(t,e,i,r){return t.global?h(e||n,i,r):void 0}function d(e){e.global&&0===t.active++&&p(e,null,\"ajaxStart\")}function m(e){e.global&&!--t.active&&p(e,null,\"ajaxStop\")}function g(t,e){var n=e.context;return e.beforeSend.call(n,t,e)===!1||p(e,n,\"ajaxBeforeSend\",[t,e])===!1?!1:void p(e,n,\"ajaxSend\",[t,e])}function v(t,e,n,i){var r=n.context,o=\"success\";n.success.call(r,t,o,e),i&&i.resolveWith(r,[t,o,e]),p(n,r,\"ajaxSuccess\",[e,n,t]),x(o,e,n)}function y(t,e,n,i,r){var o=i.context;i.error.call(o,n,e,t),r&&r.rejectWith(o,[n,e,t]),p(i,o,\"ajaxError\",[n,i,t||e]),x(e,n,i)}function x(t,e,n){var i=n.context;n.complete.call(i,e,t),p(n,i,\"ajaxComplete\",[e,n]),m(n)}function w(){}function b(t){return t&&(t=t.split(\";\",2)[0]),t&&(t==f?\"html\":t==u?\"json\":a.test(t)?\"script\":s.test(t)&&\"xml\")||\"text\"}function E(t,e){return\"\"==e?t:(t+\"&\"+e).replace(/[&?]{1,2}/,\"?\")}function T(e){e.processData&&e.data&&\"string\"!=t.type(e.data)&&(e.data=t.param(e.data,e.traditional)),!e.data||e.type&&\"GET\"!=e.type.toUpperCase()||(e.url=E(e.url,e.data),e.data=void 0)}function j(e,n,i,r){return t.isFunction(n)&&(r=i,i=n,n=void 0),t.isFunction(i)||(r=i,i=void 0),{url:e,data:n,success:i,dataType:r}}function C(e,n,i,r){var o,a=t.isArray(n),s=t.isPlainObject(n);t.each(n,function(n,u){o=t.type(u),r&&(n=i?r:r+\"[\"+(s||\"object\"==o||\"array\"==o?n:\"\")+\"]\"),!r&&a?e.add(u.name,u.value):\"array\"==o||!i&&\"object\"==o?C(e,u,i,n):e.add(n,u)})}var i,r,e=0,n=window.document,o=/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,a=/^(?:text|application)\\/javascript/i,s=/^(?:text|application)\\/xml/i,u=\"application/json\",f=\"text/html\",c=/^\\s*$/,l=n.createElement(\"a\");l.href=window.location.href,t.active=0,t.ajaxJSONP=function(i,r){if(!(\"type\"in i))return t.ajax(i);var f,h,o=i.jsonpCallback,a=(t.isFunction(o)?o():o)||\"jsonp\"+ ++e,s=n.createElement(\"script\"),u=window[a],c=function(e){t(s).triggerHandler(\"error\",e||\"abort\")},l={abort:c};return r&&r.promise(l),t(s).on(\"load error\",function(e,n){clearTimeout(h),t(s).off().remove(),\"error\"!=e.type&&f?v(f[0],l,i,r):y(null,n||\"error\",l,i,r),window[a]=u,f&&t.isFunction(u)&&u(f[0]),u=f=void 0}),g(l,i)===!1?(c(\"abort\"),l):(window[a]=function(){f=arguments},s.src=i.url.replace(/\\?(.+)=\\?/,\"?$1=\"+a),n.head.appendChild(s),i.timeout>0&&(h=setTimeout(function(){c(\"timeout\")},i.timeout)),l)},t.ajaxSettings={type:\"GET\",beforeSend:w,success:w,error:w,complete:w,context:null,global:!0,xhr:function(){return new window.XMLHttpRequest},accepts:{script:\"text/javascript, application/javascript, application/x-javascript\",json:u,xml:\"application/xml, text/xml\",html:f,text:\"text/plain\"},crossDomain:!1,timeout:0,processData:!0,cache:!0},t.ajax=function(e){var s,u,o=t.extend({},e||{}),a=t.Deferred&&t.Deferred();for(i in t.ajaxSettings)void 0===o[i]&&(o[i]=t.ajaxSettings[i]);d(o),o.crossDomain||(s=n.createElement(\"a\"),s.href=o.url,s.href=s.href,o.crossDomain=l.protocol+\"//\"+l.host!=s.protocol+\"//\"+s.host),o.url||(o.url=window.location.toString()),(u=o.url.indexOf(\"#\"))>-1&&(o.url=o.url.slice(0,u)),T(o);var f=o.dataType,h=/\\?.+=\\?/.test(o.url);if(h&&(f=\"jsonp\"),o.cache!==!1&&(e&&e.cache===!0||\"script\"!=f&&\"jsonp\"!=f)||(o.url=E(o.url,\"_=\"+Date.now())),\"jsonp\"==f)return h||(o.url=E(o.url,o.jsonp?o.jsonp+\"=?\":o.jsonp===!1?\"\":\"callback=?\")),t.ajaxJSONP(o,a);var P,p=o.accepts[f],m={},x=function(t,e){m[t.toLowerCase()]=[t,e]},j=/^([\\w-]+:)\\/\\//.test(o.url)?RegExp.$1:window.location.protocol,S=o.xhr(),C=S.setRequestHeader;if(a&&a.promise(S),o.crossDomain||x(\"X-Requested-With\",\"XMLHttpRequest\"),x(\"Accept\",p||\"*/*\"),(p=o.mimeType||p)&&(p.indexOf(\",\")>-1&&(p=p.split(\",\",2)[0]),S.overrideMimeType&&S.overrideMimeType(p)),(o.contentType||o.contentType!==!1&&o.data&&\"GET\"!=o.type.toUpperCase())&&x(\"Content-Type\",o.contentType||\"application/x-www-form-urlencoded\"),o.headers)for(r in o.headers)x(r,o.headers[r]);if(S.setRequestHeader=x,S.onreadystatechange=function(){if(4==S.readyState){S.onreadystatechange=w,clearTimeout(P);var e,n=!1;if(S.status>=200&&S.status<300||304==S.status||0==S.status&&\"file:\"==j){f=f||b(o.mimeType||S.getResponseHeader(\"content-type\")),e=S.responseText;try{\"script\"==f?(1,eval)(e):\"xml\"==f?e=S.responseXML:\"json\"==f&&(e=c.test(e)?null:t.parseJSON(e))}catch(i){n=i}n?y(n,\"parsererror\",S,o,a):v(e,S,o,a)}else y(S.statusText||null,S.status?\"error\":\"abort\",S,o,a)}},g(S,o)===!1)return S.abort(),y(null,\"abort\",S,o,a),S;if(o.xhrFields)for(r in o.xhrFields)S[r]=o.xhrFields[r];var N=\"async\"in o?o.async:!0;S.open(o.type,o.url,N,o.username,o.password);for(r in m)C.apply(S,m[r]);return o.timeout>0&&(P=setTimeout(function(){S.onreadystatechange=w,S.abort(),y(null,\"timeout\",S,o,a)},o.timeout)),S.send(o.data?o.data:null),S},t.get=function(){return t.ajax(j.apply(null,arguments))},t.post=function(){var e=j.apply(null,arguments);return e.type=\"POST\",t.ajax(e)},t.getJSON=function(){var e=j.apply(null,arguments);return e.dataType=\"json\",t.ajax(e)},t.fn.load=function(e,n,i){if(!this.length)return this;var s,r=this,a=e.split(/\\s/),u=j(e,n,i),f=u.success;return a.length>1&&(u.url=a[0],s=a[1]),u.success=function(e){r.html(s?t(\"<div>\").html(e.replace(o,\"\")).find(s):e),f&&f.apply(r,arguments)},t.ajax(u),this};var S=encodeURIComponent;t.param=function(e,n){var i=[];return i.add=function(e,n){t.isFunction(n)&&(n=n()),null==n&&(n=\"\"),this.push(S(e)+\"=\"+S(n))},C(i,e,n),i.join(\"&\").replace(/%20/g,\"+\")}}(Zepto),function(t){function l(t){return t._zid||(t._zid=e++)}function h(t,e,n,i){if(e=p(e),e.ns)var r=d(e.ns);return(a[l(t)]||[]).filter(function(t){return t&&(!e.e||t.e==e.e)&&(!e.ns||r.test(t.ns))&&(!n||l(t.fn)===l(n))&&(!i||t.sel==i)})}function p(t){var e=(\"\"+t).split(\".\");return{e:e[0],ns:e.slice(1).sort().join(\" \")}}function d(t){return new RegExp(\"(?:^| )\"+t.replace(\" \",\" .* ?\")+\"(?: |$)\")}function m(t,e){return t.del&&!u&&t.e in f||!!e}function g(t){return c[t]||u&&f[t]||t}function v(e,i,r,o,s,u,f){var h=l(e),d=a[h]||(a[h]=[]);i.split(/\\s/).forEach(function(i){if(\"ready\"==i)return t(document).ready(r);var a=p(i);a.fn=r,a.sel=s,a.e in c&&(r=function(e){var n=e.relatedTarget;return!n||n!==this&&!t.contains(this,n)?a.fn.apply(this,arguments):void 0}),a.del=u;var l=u||r;a.proxy=function(t){if(t=T(t),!t.isImmediatePropagationStopped()){t.data=o;var i=l.apply(e,t._args==n?[t]:[t].concat(t._args));return i===!1&&(t.preventDefault(),t.stopPropagation()),i}},a.i=d.length,d.push(a),\"addEventListener\"in e&&e.addEventListener(g(a.e),a.proxy,m(a,f))})}function y(t,e,n,i,r){var o=l(t);(e||\"\").split(/\\s/).forEach(function(e){h(t,e,n,i).forEach(function(e){delete a[o][e.i],\"removeEventListener\"in t&&t.removeEventListener(g(e.e),e.proxy,m(e,r))})})}function T(e,i){return(i||!e.isDefaultPrevented)&&(i||(i=e),t.each(E,function(t,n){var r=i[t];e[t]=function(){return this[n]=x,r&&r.apply(i,arguments)},e[n]=w}),(i.defaultPrevented!==n?i.defaultPrevented:\"returnValue\"in i?i.returnValue===!1:i.getPreventDefault&&i.getPreventDefault())&&(e.isDefaultPrevented=x)),e}function j(t){var e,i={originalEvent:t};for(e in t)b.test(e)||t[e]===n||(i[e]=t[e]);return T(i,t)}var n,e=1,i=Array.prototype.slice,r=t.isFunction,o=function(t){return\"string\"==typeof t},a={},s={},u=\"onfocusin\"in window,f={focus:\"focusin\",blur:\"focusout\"},c={mouseenter:\"mouseover\",mouseleave:\"mouseout\"};s.click=s.mousedown=s.mouseup=s.mousemove=\"MouseEvents\",t.event={add:v,remove:y},t.proxy=function(e,n){var a=2 in arguments&&i.call(arguments,2);if(r(e)){var s=function(){return e.apply(n,a?a.concat(i.call(arguments)):arguments)};return s._zid=l(e),s}if(o(n))return a?(a.unshift(e[n],e),t.proxy.apply(null,a)):t.proxy(e[n],e);throw new TypeError(\"expected function\")},t.fn.bind=function(t,e,n){return this.on(t,e,n)},t.fn.unbind=function(t,e){return this.off(t,e)},t.fn.one=function(t,e,n,i){return this.on(t,e,n,i,1)};var x=function(){return!0},w=function(){return!1},b=/^([A-Z]|returnValue$|layer[XY]$)/,E={preventDefault:\"isDefaultPrevented\",stopImmediatePropagation:\"isImmediatePropagationStopped\",stopPropagation:\"isPropagationStopped\"};t.fn.delegate=function(t,e,n){return this.on(e,t,n)},t.fn.undelegate=function(t,e,n){return this.off(e,t,n)},t.fn.live=function(e,n){return t(document.body).delegate(this.selector,e,n),this},t.fn.die=function(e,n){return t(document.body).undelegate(this.selector,e,n),this},t.fn.on=function(e,a,s,u,f){var c,l,h=this;return e&&!o(e)?(t.each(e,function(t,e){h.on(t,a,s,e,f)}),h):(o(a)||r(u)||u===!1||(u=s,s=a,a=n),(u===n||s===!1)&&(u=s,s=n),u===!1&&(u=w),h.each(function(n,r){f&&(c=function(t){return y(r,t.type,u),u.apply(this,arguments)}),a&&(l=function(e){var n,o=t(e.target).closest(a,r).get(0);return o&&o!==r?(n=t.extend(j(e),{currentTarget:o,liveFired:r}),(c||u).apply(o,[n].concat(i.call(arguments,1)))):void 0}),v(r,e,u,s,a,l||c)}))},t.fn.off=function(e,i,a){var s=this;return e&&!o(e)?(t.each(e,function(t,e){s.off(t,i,e)}),s):(o(i)||r(a)||a===!1||(a=i,i=n),a===!1&&(a=w),s.each(function(){y(this,e,a,i)}))},t.fn.trigger=function(e,n){return e=o(e)||t.isPlainObject(e)?t.Event(e):T(e),e._args=n,this.each(function(){e.type in f&&\"function\"==typeof this[e.type]?this[e.type]():\"dispatchEvent\"in this?this.dispatchEvent(e):t(this).triggerHandler(e,n)})},t.fn.triggerHandler=function(e,n){var i,r;return this.each(function(a,s){i=j(o(e)?t.Event(e):e),i._args=n,i.target=s,t.each(h(s,e.type||e),function(t,e){return r=e.proxy(i),i.isImmediatePropagationStopped()?!1:void 0})}),r},\"focusin focusout focus blur load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select keydown keypress keyup error\".split(\" \").forEach(function(e){t.fn[e]=function(t){return 0 in arguments?this.bind(e,t):this.trigger(e)}}),t.Event=function(t,e){o(t)||(e=t,t=e.type);var n=document.createEvent(s[t]||\"Events\"),i=!0;if(e)for(var r in e)\"bubbles\"==r?i=!!e[r]:n[r]=e[r];return n.initEvent(t,i,!0),T(n)}}(Zepto),function(t){function a(o,a){var u=o[r],f=u&&e[u];if(void 0===a)return f||s(o);if(f){if(a in f)return f[a];var c=i(a);if(c in f)return f[c]}return n.call(t(o),a)}function s(n,o,a){var s=n[r]||(n[r]=++t.uuid),f=e[s]||(e[s]=u(n));return void 0!==o&&(f[i(o)]=a),f}function u(e){var n={};return t.each(e.attributes||o,function(e,r){0==r.name.indexOf(\"data-\")&&(n[i(r.name.replace(\"data-\",\"\"))]=t.zepto.deserializeValue(r.value))}),n}var e={},n=t.fn.data,i=t.camelCase,r=t.expando=\"Zepto\"+ +new Date,o=[];t.fn.data=function(e,n){return void 0===n?t.isPlainObject(e)?this.each(function(n,i){t.each(e,function(t,e){s(i,t,e)})}):0 in this?a(this[0],e):void 0:this.each(function(){s(this,e,n)})},t.fn.removeData=function(n){return\"string\"==typeof n&&(n=n.split(/\\s+/)),this.each(function(){var o=this[r],a=o&&e[o];a&&t.each(n||a,function(t){delete a[n?i(this):t]})})},[\"remove\",\"empty\"].forEach(function(e){var n=t.fn[e];t.fn[e]=function(){var t=this.find(\"*\");return\"remove\"===e&&(t=t.add(this)),t.removeData(),n.call(this)}})}(Zepto),function(t){t.fn.serializeArray=function(){var e,n,i=[],r=function(t){return t.forEach?t.forEach(r):void i.push({name:e,value:t})};return this[0]&&t.each(this[0].elements,function(i,o){n=o.type,e=o.name,e&&\"fieldset\"!=o.nodeName.toLowerCase()&&!o.disabled&&\"submit\"!=n&&\"reset\"!=n&&\"button\"!=n&&\"file\"!=n&&(\"radio\"!=n&&\"checkbox\"!=n||o.checked)&&r(t(o).val())}),i},t.fn.serialize=function(){var t=[];return this.serializeArray().forEach(function(e){t.push(encodeURIComponent(e.name)+\"=\"+encodeURIComponent(e.value))}),t.join(\"&\")},t.fn.submit=function(e){if(0 in arguments)this.bind(\"submit\",e);else if(this.length){var n=t.Event(\"submit\");this.eq(0).trigger(n),n.isDefaultPrevented()||this.get(0).submit()}return this}}(Zepto),function(t){function u(t,e,n,i){return Math.abs(t-e)>=Math.abs(n-i)?t-e>0?\"Left\":\"Right\":n-i>0?\"Up\":\"Down\"}function f(){o=null,e.last&&(e.el.trigger(\"longTap\"),e={})}function c(){o&&clearTimeout(o),o=null}function l(){n&&clearTimeout(n),i&&clearTimeout(i),r&&clearTimeout(r),o&&clearTimeout(o),n=i=r=o=null,e={}}function h(t){return(\"touch\"==t.pointerType||t.pointerType==t.MSPOINTER_TYPE_TOUCH)&&t.isPrimary}function p(t,e){return t.type==\"pointer\"+e||t.type.toLowerCase()==\"mspointer\"+e}var n,i,r,o,s,e={},a=750;t(document).ready(function(){var d,m,y,x,g=0,v=0;\"MSGesture\"in window&&(s=new MSGesture,s.target=document.body),t(document).bind(\"MSGestureEnd\",function(t){var n=t.velocityX>1?\"Right\":t.velocityX<-1?\"Left\":t.velocityY>1?\"Down\":t.velocityY<-1?\"Up\":null;n&&(e.el.trigger(\"swipe\"),e.el.trigger(\"swipe\"+n))}).on(\"touchstart MSPointerDown pointerdown\",function(i){(!(x=p(i,\"down\"))||h(i))&&(y=x?i:i.touches[0],i.touches&&1===i.touches.length&&e.x2&&(e.x2=void 0,e.y2=void 0),d=Date.now(),m=d-(e.last||d),e.el=t(\"tagName\"in y.target?y.target:y.target.parentNode),n&&clearTimeout(n),e.x1=y.pageX,e.y1=y.pageY,m>0&&250>=m&&(e.isDoubleTap=!0),e.last=d,o=setTimeout(f,a),s&&x&&s.addPointer(i.pointerId))}).on(\"touchmove MSPointerMove pointermove\",function(t){(!(x=p(t,\"move\"))||h(t))&&(y=x?t:t.touches[0],c(),e.x2=y.pageX,e.y2=y.pageY,g+=Math.abs(e.x1-e.x2),v+=Math.abs(e.y1-e.y2))}).on(\"touchend MSPointerUp pointerup\",function(o){(!(x=p(o,\"up\"))||h(o))&&(c(),e.x2&&Math.abs(e.x1-e.x2)>30||e.y2&&Math.abs(e.y1-e.y2)>30?r=setTimeout(function(){e.el.trigger(\"swipe\"),e.el.trigger(\"swipe\"+u(e.x1,e.x2,e.y1,e.y2)),e={}},0):\"last\"in e&&(30>g&&30>v?i=setTimeout(function(){var i=t.Event(\"tap\");i.cancelTouch=l,e.el.trigger(i),e.isDoubleTap?(e.el&&e.el.trigger(\"doubleTap\"),e={}):n=setTimeout(function(){n=null,e.el&&e.el.trigger(\"singleTap\"),e={}},250)},0):e={}),g=v=0)}).on(\"touchcancel MSPointerCancel pointercancel\",l),t(window).on(\"scroll\",l)}),[\"swipe\",\"swipeLeft\",\"swipeRight\",\"swipeUp\",\"swipeDown\",\"doubleTap\",\"tap\",\"singleTap\",\"longTap\"].forEach(function(e){t.fn[e]=function(t){return this.on(e,t)}})}(Zepto),function(t,e){function v(t){return t.replace(/([a-z])([A-Z])/,\"$1-$2\").toLowerCase()}function y(t){return i?i+t:t.toLowerCase()}var i,s,u,f,c,l,h,p,d,m,n=\"\",r={Webkit:\"webkit\",Moz:\"\",O:\"o\"},o=document.createElement(\"div\"),a=/^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,g={};t.each(r,function(t,r){return o.style[t+\"TransitionProperty\"]!==e?(n=\"-\"+t.toLowerCase()+\"-\",i=r,!1):void 0}),s=n+\"transform\",g[u=n+\"transition-property\"]=g[f=n+\"transition-duration\"]=g[l=n+\"transition-delay\"]=g[c=n+\"transition-timing-function\"]=g[h=n+\"animation-name\"]=g[p=n+\"animation-duration\"]=g[m=n+\"animation-delay\"]=g[d=n+\"animation-timing-function\"]=\"\",t.fx={off:i===e&&o.style.transitionProperty===e,speeds:{_default:400,fast:200,slow:600},cssPrefix:n,transitionEnd:y(\"TransitionEnd\"),animationEnd:y(\"AnimationEnd\")},t.fn.animate=function(n,i,r,o,a){return t.isFunction(i)&&(o=i,r=e,i=e),t.isFunction(r)&&(o=r,r=e),t.isPlainObject(i)&&(r=i.easing,o=i.complete,a=i.delay,i=i.duration),i&&(i=(\"number\"==typeof i?i:t.fx.speeds[i]||t.fx.speeds._default)/1e3),a&&(a=parseFloat(a)/1e3),this.anim(n,i,r,o,a)},t.fn.anim=function(n,i,r,o,y){var x,b,j,w={},E=\"\",T=this,S=t.fx.transitionEnd,C=!1;if(i===e&&(i=t.fx.speeds._default/1e3),y===e&&(y=0),t.fx.off&&(i=0),\"string\"==typeof n)w[h]=n,w[p]=i+\"s\",w[m]=y+\"s\",w[d]=r||\"linear\",S=t.fx.animationEnd;else{b=[];for(x in n)a.test(x)?E+=x+\"(\"+n[x]+\") \":(w[x]=n[x],b.push(v(x)));E&&(w[s]=E,b.push(s)),i>0&&\"object\"==typeof n&&(w[u]=b.join(\", \"),w[f]=i+\"s\",w[l]=y+\"s\",w[c]=r||\"linear\")}return j=function(e){if(\"undefined\"!=typeof e){if(e.target!==e.currentTarget)return;t(e.target).unbind(S,j)}else t(this).unbind(S,j);C=!0,t(this).css(g),o&&o.call(this)},i>0&&(this.bind(S,j),setTimeout(function(){C||j.call(T)},1e3*(i+y)+25)),this.size()&&this.get(0).clientLeft,this.css(w),0>=i&&setTimeout(function(){T.each(function(){j.call(this)})},0),this},o=null}(Zepto),function(t,e){function s(n,i,r,o,a){\"function\"!=typeof i||a||(a=i,i=e);var s={opacity:r};return o&&(s.scale=o,n.css(t.fx.cssPrefix+\"transform-origin\",\"0 0\")),n.animate(s,i,null,a)}function u(e,n,i,r){return s(e,n,0,i,function(){o.call(t(this)),r&&r.call(this)})}var n=window.document,r=(n.documentElement,t.fn.show),o=t.fn.hide,a=t.fn.toggle;t.fn.show=function(t,n){return r.call(this),t===e?t=0:this.css(\"opacity\",0),s(this,t,1,\"1,1\",n)},t.fn.hide=function(t,n){return t===e?o.call(this):u(this,t,\"0,0\",n)},t.fn.toggle=function(n,i){return n===e||\"boolean\"==typeof n?a.call(this,n):this.each(function(){var e=t(this);e[\"none\"==e.css(\"display\")?\"show\":\"hide\"](n,i)})},t.fn.fadeTo=function(t,e,n){return s(this,t,e,null,n)},t.fn.fadeIn=function(t,e){var n=this.css(\"opacity\");return n>0?this.css(\"opacity\",0):n=1,r.call(this).fadeTo(t,n,e)},t.fn.fadeOut=function(t,e){return u(this,t,null,e)},t.fn.fadeToggle=function(e,n){return this.each(function(){var i=t(this);i[0==i.css(\"opacity\")||\"none\"==i.css(\"display\")?\"fadeIn\":\"fadeOut\"](e,n)})}}(Zepto);\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	eval("/*** IMPORTS FROM imports-loader ***/\nvar define = false;\n\n/*!\n * iScroll v4.2.5 ~ Copyright (c) 2012 Matteo Spinelli, http://cubiq.org\n * Released under MIT license, http://cubiq.org/license\n */\n(function(window, doc){\nvar m = Math,\n\tdummyStyle = doc.createElement('div').style,\n\tvendor = (function () {\n\t\tvar vendors = 't,webkitT,MozT,msT,OT'.split(','),\n\t\t\tt,\n\t\t\ti = 0,\n\t\t\tl = vendors.length;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tt = vendors[i] + 'ransform';\n\t\t\tif ( t in dummyStyle ) {\n\t\t\t\treturn vendors[i].substr(0, vendors[i].length - 1);\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t})(),\n\tcssVendor = vendor ? '-' + vendor.toLowerCase() + '-' : '',\n\n\t// Style properties\n\ttransform = prefixStyle('transform'),\n\ttransitionProperty = prefixStyle('transitionProperty'),\n\ttransitionDuration = prefixStyle('transitionDuration'),\n\ttransformOrigin = prefixStyle('transformOrigin'),\n\ttransitionTimingFunction = prefixStyle('transitionTimingFunction'),\n\ttransitionDelay = prefixStyle('transitionDelay'),\n\n    // Browser capabilities\n\tisAndroid = (/android/gi).test(navigator.appVersion),\n\tisIDevice = (/iphone|ipad/gi).test(navigator.appVersion),\n\tisTouchPad = (/hp-tablet/gi).test(navigator.appVersion),\n\n    has3d = prefixStyle('perspective') in dummyStyle,\n    hasTouch = 'ontouchstart' in window && !isTouchPad,\n    hasTransform = vendor !== false,\n    hasTransitionEnd = prefixStyle('transition') in dummyStyle,\n\n\tRESIZE_EV = 'onorientationchange' in window ? 'orientationchange' : 'resize',\n\tSTART_EV = hasTouch ? 'touchstart' : 'mousedown',\n\tMOVE_EV = hasTouch ? 'touchmove' : 'mousemove',\n\tEND_EV = hasTouch ? 'touchend' : 'mouseup',\n\tCANCEL_EV = hasTouch ? 'touchcancel' : 'mouseup',\n\tTRNEND_EV = (function () {\n\t\tif ( vendor === false ) return false;\n\n\t\tvar transitionEnd = {\n\t\t\t\t''\t\t\t: 'transitionend',\n\t\t\t\t'webkit'\t: 'webkitTransitionEnd',\n\t\t\t\t'Moz'\t\t: 'transitionend',\n\t\t\t\t'O'\t\t\t: 'otransitionend',\n\t\t\t\t'ms'\t\t: 'MSTransitionEnd'\n\t\t\t};\n\n\t\treturn transitionEnd[vendor];\n\t})(),\n\n\tnextFrame = (function() {\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) { return setTimeout(callback, 1); };\n\t})(),\n\tcancelFrame = (function () {\n\t\treturn window.cancelRequestAnimationFrame ||\n\t\t\twindow.webkitCancelAnimationFrame ||\n\t\t\twindow.webkitCancelRequestAnimationFrame ||\n\t\t\twindow.mozCancelRequestAnimationFrame ||\n\t\t\twindow.oCancelRequestAnimationFrame ||\n\t\t\twindow.msCancelRequestAnimationFrame ||\n\t\t\tclearTimeout;\n\t})(),\n\n\t// Helpers\n\ttranslateZ = has3d ? ' translateZ(0)' : '',\n\n\t// Constructor\n\tiScroll = function (el, options) {\n\t\tvar that = this,\n\t\t\ti;\n\n\t\tthat.wrapper = typeof el == 'object' ? el : doc.getElementById(el);\n\t\tthat.wrapper.style.overflow = 'hidden';\n\t\tthat.scroller = that.wrapper.children[0];\n\n\t\t// Default options\n\t\tthat.options = {\n\t\t\thScroll: true,\n\t\t\tvScroll: true,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tbounce: true,\n\t\t\tbounceLock: false,\n\t\t\tmomentum: true,\n\t\t\tlockDirection: true,\n\t\t\tuseTransform: true,\n\t\t\tuseTransition: false,\n\t\t\ttopOffset: 0,\n\t\t\tcheckDOMChanges: false,\t\t// Experimental\n\t\t\thandleClick: true,\n\n\t\t\t// Scrollbar\n\t\t\thScrollbar: true,\n\t\t\tvScrollbar: true,\n\t\t\tfixedScrollbar: isAndroid,\n\t\t\thideScrollbar: isIDevice,\n\t\t\tfadeScrollbar: isIDevice && has3d,\n\t\t\tscrollbarClass: '',\n\n\t\t\t// Zoom\n\t\t\tzoom: false,\n\t\t\tzoomMin: 1,\n\t\t\tzoomMax: 4,\n\t\t\tdoubleTapZoom: 2,\n\t\t\twheelAction: 'scroll',\n\n\t\t\t// Snap\n\t\t\tsnap: false,\n\t\t\tsnapThreshold: 1,\n\n\t\t\t// Events\n\t\t\tonRefresh: null,\n\t\t\tonBeforeScrollStart: function (e) { e.preventDefault(); },\n\t\t\tonScrollStart: null,\n\t\t\tonBeforeScrollMove: null,\n\t\t\tonScrollMove: null,\n\t\t\tonBeforeScrollEnd: null,\n\t\t\tonScrollEnd: null,\n\t\t\tonTouchEnd: null,\n\t\t\tonDestroy: null,\n\t\t\tonZoomStart: null,\n\t\t\tonZoom: null,\n\t\t\tonZoomEnd: null\n\t\t};\n\n\t\t// User defined options\n\t\tfor (i in options) that.options[i] = options[i];\n\t\t\n\t\t// Set starting position\n\t\tthat.x = that.options.x;\n\t\tthat.y = that.options.y;\n\n\t\t// Normalize options\n\t\tthat.options.useTransform = hasTransform && that.options.useTransform;\n\t\tthat.options.hScrollbar = that.options.hScroll && that.options.hScrollbar;\n\t\tthat.options.vScrollbar = that.options.vScroll && that.options.vScrollbar;\n\t\tthat.options.zoom = that.options.useTransform && that.options.zoom;\n\t\tthat.options.useTransition = hasTransitionEnd && that.options.useTransition;\n\n\t\t// Helpers FIX ANDROID BUG!\n\t\t// translate3d and scale doesn't work together!\n\t\t// Ignoring 3d ONLY WHEN YOU SET that.options.zoom\n\t\tif ( that.options.zoom && isAndroid ){\n\t\t\ttranslateZ = '';\n\t\t}\n\t\t\n\t\t// Set some default styles\n\t\tthat.scroller.style[transitionProperty] = that.options.useTransform ? cssVendor + 'transform' : 'top left';\n\t\tthat.scroller.style[transitionDuration] = '0';\n\t\tthat.scroller.style[transformOrigin] = '0 0';\n\t\tif (that.options.useTransition) that.scroller.style[transitionTimingFunction] = 'cubic-bezier(0.33,0.66,0.66,1)';\n\t\t\n\t\tif (that.options.useTransform) that.scroller.style[transform] = 'translate(' + that.x + 'px,' + that.y + 'px)' + translateZ;\n\t\telse that.scroller.style.cssText += ';position:absolute;top:' + that.y + 'px;left:' + that.x + 'px';\n\n\t\tif (that.options.useTransition) that.options.fixedScrollbar = true;\n\n\t\tthat.refresh();\n\n\t\tthat._bind(RESIZE_EV, window);\n\t\tthat._bind(START_EV);\n\t\tif (!hasTouch) {\n\t\t\tif (that.options.wheelAction != 'none') {\n\t\t\t\tthat._bind('DOMMouseScroll');\n\t\t\t\tthat._bind('mousewheel');\n\t\t\t}\n\t\t}\n\n\t\tif (that.options.checkDOMChanges) that.checkDOMTime = setInterval(function () {\n\t\t\tthat._checkDOMChanges();\n\t\t}, 500);\n\t};\n\n// Prototype\niScroll.prototype = {\n\tenabled: true,\n\tx: 0,\n\ty: 0,\n\tsteps: [],\n\tscale: 1,\n\tcurrPageX: 0, currPageY: 0,\n\tpagesX: [], pagesY: [],\n\taniTime: null,\n\twheelZoomCount: 0,\n\t\n\thandleEvent: function (e) {\n\t\tvar that = this;\n\t\tswitch(e.type) {\n\t\t\tcase START_EV:\n\t\t\t\tif (!hasTouch && e.button !== 0) return;\n\t\t\t\tthat._start(e);\n\t\t\t\tbreak;\n\t\t\tcase MOVE_EV: that._move(e); break;\n\t\t\tcase END_EV:\n\t\t\tcase CANCEL_EV: that._end(e); break;\n\t\t\tcase RESIZE_EV: that._resize(); break;\n\t\t\tcase 'DOMMouseScroll': case 'mousewheel': that._wheel(e); break;\n\t\t\tcase TRNEND_EV: that._transitionEnd(e); break;\n\t\t}\n\t},\n\t\n\t_checkDOMChanges: function () {\n\t\tif (this.moved || this.zoomed || this.animating ||\n\t\t\t(this.scrollerW == this.scroller.offsetWidth * this.scale && this.scrollerH == this.scroller.offsetHeight * this.scale)) return;\n\n\t\tthis.refresh();\n\t},\n\t\n\t_scrollbar: function (dir) {\n\t\tvar that = this,\n\t\t\tbar;\n\n\t\tif (!that[dir + 'Scrollbar']) {\n\t\t\tif (that[dir + 'ScrollbarWrapper']) {\n\t\t\t\tif (hasTransform) that[dir + 'ScrollbarIndicator'].style[transform] = '';\n\t\t\t\tthat[dir + 'ScrollbarWrapper'].parentNode.removeChild(that[dir + 'ScrollbarWrapper']);\n\t\t\t\tthat[dir + 'ScrollbarWrapper'] = null;\n\t\t\t\tthat[dir + 'ScrollbarIndicator'] = null;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (!that[dir + 'ScrollbarWrapper']) {\n\t\t\t// Create the scrollbar wrapper\n\t\t\tbar = doc.createElement('div');\n\n\t\t\tif (that.options.scrollbarClass) bar.className = that.options.scrollbarClass + dir.toUpperCase();\n\t\t\telse bar.style.cssText = 'position:absolute;z-index:100;' + (dir == 'h' ? 'height:7px;bottom:1px;left:2px;right:' + (that.vScrollbar ? '7' : '2') + 'px' : 'width:7px;bottom:' + (that.hScrollbar ? '7' : '2') + 'px;top:2px;right:1px');\n\n\t\t\tbar.style.cssText += ';pointer-events:none;' + cssVendor + 'transition-property:opacity;' + cssVendor + 'transition-duration:' + (that.options.fadeScrollbar ? '350ms' : '0') + ';overflow:hidden;opacity:' + (that.options.hideScrollbar ? '0' : '1');\n\n\t\t\tthat.wrapper.appendChild(bar);\n\t\t\tthat[dir + 'ScrollbarWrapper'] = bar;\n\n\t\t\t// Create the scrollbar indicator\n\t\t\tbar = doc.createElement('div');\n\t\t\tif (!that.options.scrollbarClass) {\n\t\t\t\tbar.style.cssText = 'position:absolute;z-index:100;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);' + cssVendor + 'background-clip:padding-box;' + cssVendor + 'box-sizing:border-box;' + (dir == 'h' ? 'height:100%' : 'width:100%') + ';' + cssVendor + 'border-radius:3px;border-radius:3px';\n\t\t\t}\n\t\t\tbar.style.cssText += ';pointer-events:none;' + cssVendor + 'transition-property:' + cssVendor + 'transform;' + cssVendor + 'transition-timing-function:cubic-bezier(0.33,0.66,0.66,1);' + cssVendor + 'transition-duration:0;' + cssVendor + 'transform: translate(0,0)' + translateZ;\n\t\t\tif (that.options.useTransition) bar.style.cssText += ';' + cssVendor + 'transition-timing-function:cubic-bezier(0.33,0.66,0.66,1)';\n\n\t\t\tthat[dir + 'ScrollbarWrapper'].appendChild(bar);\n\t\t\tthat[dir + 'ScrollbarIndicator'] = bar;\n\t\t}\n\n\t\tif (dir == 'h') {\n\t\t\tthat.hScrollbarSize = that.hScrollbarWrapper.clientWidth;\n\t\t\tthat.hScrollbarIndicatorSize = m.max(m.round(that.hScrollbarSize * that.hScrollbarSize / that.scrollerW), 8);\n\t\t\tthat.hScrollbarIndicator.style.width = that.hScrollbarIndicatorSize + 'px';\n\t\t\tthat.hScrollbarMaxScroll = that.hScrollbarSize - that.hScrollbarIndicatorSize;\n\t\t\tthat.hScrollbarProp = that.hScrollbarMaxScroll / that.maxScrollX;\n\t\t} else {\n\t\t\tthat.vScrollbarSize = that.vScrollbarWrapper.clientHeight;\n\t\t\tthat.vScrollbarIndicatorSize = m.max(m.round(that.vScrollbarSize * that.vScrollbarSize / that.scrollerH), 8);\n\t\t\tthat.vScrollbarIndicator.style.height = that.vScrollbarIndicatorSize + 'px';\n\t\t\tthat.vScrollbarMaxScroll = that.vScrollbarSize - that.vScrollbarIndicatorSize;\n\t\t\tthat.vScrollbarProp = that.vScrollbarMaxScroll / that.maxScrollY;\n\t\t}\n\n\t\t// Reset position\n\t\tthat._scrollbarPos(dir, true);\n\t},\n\t\n\t_resize: function () {\n\t\tvar that = this;\n\t\tsetTimeout(function () { that.refresh(); }, isAndroid ? 200 : 0);\n\t},\n\t\n\t_pos: function (x, y) {\n\t\tif (this.zoomed) return;\n\n\t\tx = this.hScroll ? x : 0;\n\t\ty = this.vScroll ? y : 0;\n\n\t\tif (this.options.useTransform) {\n\t\t\tthis.scroller.style[transform] = 'translate(' + x + 'px,' + y + 'px) scale(' + this.scale + ')' + translateZ;\n\t\t} else {\n\t\t\tx = m.round(x);\n\t\t\ty = m.round(y);\n\t\t\tthis.scroller.style.left = x + 'px';\n\t\t\tthis.scroller.style.top = y + 'px';\n\t\t}\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\tthis._scrollbarPos('h');\n\t\tthis._scrollbarPos('v');\n\t},\n\n\t_scrollbarPos: function (dir, hidden) {\n\t\tvar that = this,\n\t\t\tpos = dir == 'h' ? that.x : that.y,\n\t\t\tsize;\n\n\t\tif (!that[dir + 'Scrollbar']) return;\n\n\t\tpos = that[dir + 'ScrollbarProp'] * pos;\n\n\t\tif (pos < 0) {\n\t\t\tif (!that.options.fixedScrollbar) {\n\t\t\t\tsize = that[dir + 'ScrollbarIndicatorSize'] + m.round(pos * 3);\n\t\t\t\tif (size < 8) size = 8;\n\t\t\t\tthat[dir + 'ScrollbarIndicator'].style[dir == 'h' ? 'width' : 'height'] = size + 'px';\n\t\t\t}\n\t\t\tpos = 0;\n\t\t} else if (pos > that[dir + 'ScrollbarMaxScroll']) {\n\t\t\tif (!that.options.fixedScrollbar) {\n\t\t\t\tsize = that[dir + 'ScrollbarIndicatorSize'] - m.round((pos - that[dir + 'ScrollbarMaxScroll']) * 3);\n\t\t\t\tif (size < 8) size = 8;\n\t\t\t\tthat[dir + 'ScrollbarIndicator'].style[dir == 'h' ? 'width' : 'height'] = size + 'px';\n\t\t\t\tpos = that[dir + 'ScrollbarMaxScroll'] + (that[dir + 'ScrollbarIndicatorSize'] - size);\n\t\t\t} else {\n\t\t\t\tpos = that[dir + 'ScrollbarMaxScroll'];\n\t\t\t}\n\t\t}\n\n\t\tthat[dir + 'ScrollbarWrapper'].style[transitionDelay] = '0';\n\t\tthat[dir + 'ScrollbarWrapper'].style.opacity = hidden && that.options.hideScrollbar ? '0' : '1';\n\t\tthat[dir + 'ScrollbarIndicator'].style[transform] = 'translate(' + (dir == 'h' ? pos + 'px,0)' : '0,' + pos + 'px)') + translateZ;\n\t},\n\t\n\t_start: function (e) {\n\t\tvar that = this,\n\t\t\tpoint = hasTouch ? e.touches[0] : e,\n\t\t\tmatrix, x, y,\n\t\t\tc1, c2;\n\n\t\tif (!that.enabled) return;\n\n\t\tif (that.options.onBeforeScrollStart) that.options.onBeforeScrollStart.call(that, e);\n\n\t\tif (that.options.useTransition || that.options.zoom) that._transitionTime(0);\n\n\t\tthat.moved = false;\n\t\tthat.animating = false;\n\t\tthat.zoomed = false;\n\t\tthat.distX = 0;\n\t\tthat.distY = 0;\n\t\tthat.absDistX = 0;\n\t\tthat.absDistY = 0;\n\t\tthat.dirX = 0;\n\t\tthat.dirY = 0;\n\n\t\t// Gesture start\n\t\tif (that.options.zoom && hasTouch && e.touches.length > 1) {\n\t\t\tc1 = m.abs(e.touches[0].pageX-e.touches[1].pageX);\n\t\t\tc2 = m.abs(e.touches[0].pageY-e.touches[1].pageY);\n\t\t\tthat.touchesDistStart = m.sqrt(c1 * c1 + c2 * c2);\n\n\t\t\tthat.originX = m.abs(e.touches[0].pageX + e.touches[1].pageX - that.wrapperOffsetLeft * 2) / 2 - that.x;\n\t\t\tthat.originY = m.abs(e.touches[0].pageY + e.touches[1].pageY - that.wrapperOffsetTop * 2) / 2 - that.y;\n\n\t\t\tif (that.options.onZoomStart) that.options.onZoomStart.call(that, e);\n\t\t}\n\n\t\tif (that.options.momentum) {\n\t\t\tif (that.options.useTransform) {\n\t\t\t\t// Very lame general purpose alternative to CSSMatrix\n\t\t\t\tmatrix = getComputedStyle(that.scroller, null)[transform].replace(/[^0-9\\-.,]/g, '').split(',');\n\t\t\t\tx = +(matrix[12] || matrix[4]);\n\t\t\t\ty = +(matrix[13] || matrix[5]);\n\t\t\t} else {\n\t\t\t\tx = +getComputedStyle(that.scroller, null).left.replace(/[^0-9-]/g, '');\n\t\t\t\ty = +getComputedStyle(that.scroller, null).top.replace(/[^0-9-]/g, '');\n\t\t\t}\n\t\t\t\n\t\t\tif (x != that.x || y != that.y) {\n\t\t\t\tif (that.options.useTransition) that._unbind(TRNEND_EV);\n\t\t\t\telse cancelFrame(that.aniTime);\n\t\t\t\tthat.steps = [];\n\t\t\t\tthat._pos(x, y);\n\t\t\t\tif (that.options.onScrollEnd) that.options.onScrollEnd.call(that);\n\t\t\t}\n\t\t}\n\n\t\tthat.absStartX = that.x;\t// Needed by snap threshold\n\t\tthat.absStartY = that.y;\n\n\t\tthat.startX = that.x;\n\t\tthat.startY = that.y;\n\t\tthat.pointX = point.pageX;\n\t\tthat.pointY = point.pageY;\n\n\t\tthat.startTime = e.timeStamp || Date.now();\n\n\t\tif (that.options.onScrollStart) that.options.onScrollStart.call(that, e);\n\n\t\tthat._bind(MOVE_EV, window);\n\t\tthat._bind(END_EV, window);\n\t\tthat._bind(CANCEL_EV, window);\n\t},\n\t\n\t_move: function (e) {\n\t\tvar that = this,\n\t\t\tpoint = hasTouch ? e.touches[0] : e,\n\t\t\tdeltaX = point.pageX - that.pointX,\n\t\t\tdeltaY = point.pageY - that.pointY,\n\t\t\tnewX = that.x + deltaX,\n\t\t\tnewY = that.y + deltaY,\n\t\t\tc1, c2, scale,\n\t\t\ttimestamp = e.timeStamp || Date.now();\n\n\t\tif (that.options.onBeforeScrollMove) that.options.onBeforeScrollMove.call(that, e);\n\n\t\t// Zoom\n\t\tif (that.options.zoom && hasTouch && e.touches.length > 1) {\n\t\t\tc1 = m.abs(e.touches[0].pageX - e.touches[1].pageX);\n\t\t\tc2 = m.abs(e.touches[0].pageY - e.touches[1].pageY);\n\t\t\tthat.touchesDist = m.sqrt(c1*c1+c2*c2);\n\n\t\t\tthat.zoomed = true;\n\n\t\t\tscale = 1 / that.touchesDistStart * that.touchesDist * this.scale;\n\n\t\t\tif (scale < that.options.zoomMin) scale = 0.5 * that.options.zoomMin * Math.pow(2.0, scale / that.options.zoomMin);\n\t\t\telse if (scale > that.options.zoomMax) scale = 2.0 * that.options.zoomMax * Math.pow(0.5, that.options.zoomMax / scale);\n\n\t\t\tthat.lastScale = scale / this.scale;\n\n\t\t\tnewX = this.originX - this.originX * that.lastScale + this.x;\n\t\t\tnewY = this.originY - this.originY * that.lastScale + this.y;\n\n\t\t\tthis.scroller.style[transform] = 'translate(' + newX + 'px,' + newY + 'px) scale(' + scale + ')' + translateZ;\n\n\t\t\tif (that.options.onZoom) that.options.onZoom.call(that, e);\n\t\t\treturn;\n\t\t}\n\n\t\tthat.pointX = point.pageX;\n\t\tthat.pointY = point.pageY;\n\n\t\t// Slow down if outside of the boundaries\n\t\tif (newX > 0 || newX < that.maxScrollX) {\n\t\t\tnewX = that.options.bounce ? that.x + (deltaX / 2) : newX >= 0 || that.maxScrollX >= 0 ? 0 : that.maxScrollX;\n\t\t}\n\t\tif (newY > that.minScrollY || newY < that.maxScrollY) {\n\t\t\tnewY = that.options.bounce ? that.y + (deltaY / 2) : newY >= that.minScrollY || that.maxScrollY >= 0 ? that.minScrollY : that.maxScrollY;\n\t\t}\n\n\t\tthat.distX += deltaX;\n\t\tthat.distY += deltaY;\n\t\tthat.absDistX = m.abs(that.distX);\n\t\tthat.absDistY = m.abs(that.distY);\n\n\t\tif (that.absDistX < 6 && that.absDistY < 6) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Lock direction\n\t\tif (that.options.lockDirection) {\n\t\t\tif (that.absDistX > that.absDistY + 5) {\n\t\t\t\tnewY = that.y;\n\t\t\t\tdeltaY = 0;\n\t\t\t} else if (that.absDistY > that.absDistX + 5) {\n\t\t\t\tnewX = that.x;\n\t\t\t\tdeltaX = 0;\n\t\t\t}\n\t\t}\n\n\t\tthat.moved = true;\n\t\tthat._pos(newX, newY);\n\t\tthat.dirX = deltaX > 0 ? -1 : deltaX < 0 ? 1 : 0;\n\t\tthat.dirY = deltaY > 0 ? -1 : deltaY < 0 ? 1 : 0;\n\n\t\tif (timestamp - that.startTime > 300) {\n\t\t\tthat.startTime = timestamp;\n\t\t\tthat.startX = that.x;\n\t\t\tthat.startY = that.y;\n\t\t}\n\t\t\n\t\tif (that.options.onScrollMove) that.options.onScrollMove.call(that, e);\n\t},\n\t\n\t_end: function (e) {\n\t\tif (hasTouch && e.touches.length !== 0) return;\n\n\t\tvar that = this,\n\t\t\tpoint = hasTouch ? e.changedTouches[0] : e,\n\t\t\ttarget, ev,\n\t\t\tmomentumX = { dist:0, time:0 },\n\t\t\tmomentumY = { dist:0, time:0 },\n\t\t\tduration = (e.timeStamp || Date.now()) - that.startTime,\n\t\t\tnewPosX = that.x,\n\t\t\tnewPosY = that.y,\n\t\t\tdistX, distY,\n\t\t\tnewDuration,\n\t\t\tsnap,\n\t\t\tscale;\n\n\t\tthat._unbind(MOVE_EV, window);\n\t\tthat._unbind(END_EV, window);\n\t\tthat._unbind(CANCEL_EV, window);\n\n\t\tif (that.options.onBeforeScrollEnd) that.options.onBeforeScrollEnd.call(that, e);\n\n\t\tif (that.zoomed) {\n\t\t\tscale = that.scale * that.lastScale;\n\t\t\tscale = Math.max(that.options.zoomMin, scale);\n\t\t\tscale = Math.min(that.options.zoomMax, scale);\n\t\t\tthat.lastScale = scale / that.scale;\n\t\t\tthat.scale = scale;\n\n\t\t\tthat.x = that.originX - that.originX * that.lastScale + that.x;\n\t\t\tthat.y = that.originY - that.originY * that.lastScale + that.y;\n\t\t\t\n\t\t\tthat.scroller.style[transitionDuration] = '200ms';\n\t\t\tthat.scroller.style[transform] = 'translate(' + that.x + 'px,' + that.y + 'px) scale(' + that.scale + ')' + translateZ;\n\t\t\t\n\t\t\tthat.zoomed = false;\n\t\t\tthat.refresh();\n\n\t\t\tif (that.options.onZoomEnd) that.options.onZoomEnd.call(that, e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!that.moved) {\n\t\t\tif (hasTouch) {\n\t\t\t\tif (that.doubleTapTimer && that.options.zoom) {\n\t\t\t\t\t// Double tapped\n\t\t\t\t\tclearTimeout(that.doubleTapTimer);\n\t\t\t\t\tthat.doubleTapTimer = null;\n\t\t\t\t\tif (that.options.onZoomStart) that.options.onZoomStart.call(that, e);\n\t\t\t\t\tthat.zoom(that.pointX, that.pointY, that.scale == 1 ? that.options.doubleTapZoom : 1);\n\t\t\t\t\tif (that.options.onZoomEnd) {\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tthat.options.onZoomEnd.call(that, e);\n\t\t\t\t\t\t}, 200); // 200 is default zoom duration\n\t\t\t\t\t}\n\t\t\t\t} else if (this.options.handleClick) {\n\t\t\t\t\tthat.doubleTapTimer = setTimeout(function () {\n\t\t\t\t\t\tthat.doubleTapTimer = null;\n\n\t\t\t\t\t\t// Find the last touched element\n\t\t\t\t\t\ttarget = point.target;\n\t\t\t\t\t\twhile (target.nodeType != 1) target = target.parentNode;\n\n\t\t\t\t\t\tif (target.tagName != 'SELECT' && target.tagName != 'INPUT' && target.tagName != 'TEXTAREA') {\n\t\t\t\t\t\t\tev = doc.createEvent('MouseEvents');\n\t\t\t\t\t\t\tev.initMouseEvent('click', true, true, e.view, 1,\n\t\t\t\t\t\t\t\tpoint.screenX, point.screenY, point.clientX, point.clientY,\n\t\t\t\t\t\t\t\te.ctrlKey, e.altKey, e.shiftKey, e.metaKey,\n\t\t\t\t\t\t\t\t0, null);\n\t\t\t\t\t\t\tev._fake = true;\n\t\t\t\t\t\t\ttarget.dispatchEvent(ev);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, that.options.zoom ? 250 : 0);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthat._resetPos(400);\n\n\t\t\tif (that.options.onTouchEnd) that.options.onTouchEnd.call(that, e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (duration < 300 && that.options.momentum) {\n\t\t\tmomentumX = newPosX ? that._momentum(newPosX - that.startX, duration, -that.x, that.scrollerW - that.wrapperW + that.x, that.options.bounce ? that.wrapperW : 0) : momentumX;\n\t\t\tmomentumY = newPosY ? that._momentum(newPosY - that.startY, duration, -that.y, (that.maxScrollY < 0 ? that.scrollerH - that.wrapperH + that.y - that.minScrollY : 0), that.options.bounce ? that.wrapperH : 0) : momentumY;\n\n\t\t\tnewPosX = that.x + momentumX.dist;\n\t\t\tnewPosY = that.y + momentumY.dist;\n\n\t\t\tif ((that.x > 0 && newPosX > 0) || (that.x < that.maxScrollX && newPosX < that.maxScrollX)) momentumX = { dist:0, time:0 };\n\t\t\tif ((that.y > that.minScrollY && newPosY > that.minScrollY) || (that.y < that.maxScrollY && newPosY < that.maxScrollY)) momentumY = { dist:0, time:0 };\n\t\t}\n\n\t\tif (momentumX.dist || momentumY.dist) {\n\t\t\tnewDuration = m.max(m.max(momentumX.time, momentumY.time), 10);\n\n\t\t\t// Do we need to snap?\n\t\t\tif (that.options.snap) {\n\t\t\t\tdistX = newPosX - that.absStartX;\n\t\t\t\tdistY = newPosY - that.absStartY;\n\t\t\t\tif (m.abs(distX) < that.options.snapThreshold && m.abs(distY) < that.options.snapThreshold) { that.scrollTo(that.absStartX, that.absStartY, 200); }\n\t\t\t\telse {\n\t\t\t\t\tsnap = that._snap(newPosX, newPosY);\n\t\t\t\t\tnewPosX = snap.x;\n\t\t\t\t\tnewPosY = snap.y;\n\t\t\t\t\tnewDuration = m.max(snap.time, newDuration);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthat.scrollTo(m.round(newPosX), m.round(newPosY), newDuration);\n\n\t\t\tif (that.options.onTouchEnd) that.options.onTouchEnd.call(that, e);\n\t\t\treturn;\n\t\t}\n\n\t\t// Do we need to snap?\n\t\tif (that.options.snap) {\n\t\t\tdistX = newPosX - that.absStartX;\n\t\t\tdistY = newPosY - that.absStartY;\n\t\t\tif (m.abs(distX) < that.options.snapThreshold && m.abs(distY) < that.options.snapThreshold) that.scrollTo(that.absStartX, that.absStartY, 200);\n\t\t\telse {\n\t\t\t\tsnap = that._snap(that.x, that.y);\n\t\t\t\tif (snap.x != that.x || snap.y != that.y) that.scrollTo(snap.x, snap.y, snap.time);\n\t\t\t}\n\n\t\t\tif (that.options.onTouchEnd) that.options.onTouchEnd.call(that, e);\n\t\t\treturn;\n\t\t}\n\n\t\tthat._resetPos(200);\n\t\tif (that.options.onTouchEnd) that.options.onTouchEnd.call(that, e);\n\t},\n\t\n\t_resetPos: function (time) {\n\t\tvar that = this,\n\t\t\tresetX = that.x >= 0 ? 0 : that.x < that.maxScrollX ? that.maxScrollX : that.x,\n\t\t\tresetY = that.y >= that.minScrollY || that.maxScrollY > 0 ? that.minScrollY : that.y < that.maxScrollY ? that.maxScrollY : that.y;\n\n\t\tif (resetX == that.x && resetY == that.y) {\n\t\t\tif (that.moved) {\n\t\t\t\tthat.moved = false;\n\t\t\t\tif (that.options.onScrollEnd) that.options.onScrollEnd.call(that);\t\t// Execute custom code on scroll end\n\t\t\t}\n\n\t\t\tif (that.hScrollbar && that.options.hideScrollbar) {\n\t\t\t\tif (vendor == 'webkit') that.hScrollbarWrapper.style[transitionDelay] = '300ms';\n\t\t\t\tthat.hScrollbarWrapper.style.opacity = '0';\n\t\t\t}\n\t\t\tif (that.vScrollbar && that.options.hideScrollbar) {\n\t\t\t\tif (vendor == 'webkit') that.vScrollbarWrapper.style[transitionDelay] = '300ms';\n\t\t\t\tthat.vScrollbarWrapper.style.opacity = '0';\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tthat.scrollTo(resetX, resetY, time || 0);\n\t},\n\n\t_wheel: function (e) {\n\t\tvar that = this,\n\t\t\twheelDeltaX, wheelDeltaY,\n\t\t\tdeltaX, deltaY,\n\t\t\tdeltaScale;\n\n\t\tif ('wheelDeltaX' in e) {\n\t\t\twheelDeltaX = e.wheelDeltaX / 12;\n\t\t\twheelDeltaY = e.wheelDeltaY / 12;\n\t\t} else if('wheelDelta' in e) {\n\t\t\twheelDeltaX = wheelDeltaY = e.wheelDelta / 12;\n\t\t} else if ('detail' in e) {\n\t\t\twheelDeltaX = wheelDeltaY = -e.detail * 3;\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (that.options.wheelAction == 'zoom') {\n\t\t\tdeltaScale = that.scale * Math.pow(2, 1/3 * (wheelDeltaY ? wheelDeltaY / Math.abs(wheelDeltaY) : 0));\n\t\t\tif (deltaScale < that.options.zoomMin) deltaScale = that.options.zoomMin;\n\t\t\tif (deltaScale > that.options.zoomMax) deltaScale = that.options.zoomMax;\n\t\t\t\n\t\t\tif (deltaScale != that.scale) {\n\t\t\t\tif (!that.wheelZoomCount && that.options.onZoomStart) that.options.onZoomStart.call(that, e);\n\t\t\t\tthat.wheelZoomCount++;\n\t\t\t\t\n\t\t\t\tthat.zoom(e.pageX, e.pageY, deltaScale, 400);\n\t\t\t\t\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tthat.wheelZoomCount--;\n\t\t\t\t\tif (!that.wheelZoomCount && that.options.onZoomEnd) that.options.onZoomEnd.call(that, e);\n\t\t\t\t}, 400);\n\t\t\t}\n\t\t\t\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tdeltaX = that.x + wheelDeltaX;\n\t\tdeltaY = that.y + wheelDeltaY;\n\n\t\tif (deltaX > 0) deltaX = 0;\n\t\telse if (deltaX < that.maxScrollX) deltaX = that.maxScrollX;\n\n\t\tif (deltaY > that.minScrollY) deltaY = that.minScrollY;\n\t\telse if (deltaY < that.maxScrollY) deltaY = that.maxScrollY;\n    \n\t\tif (that.maxScrollY < 0) {\n\t\t\tthat.scrollTo(deltaX, deltaY, 0);\n\t\t}\n\t},\n\t\n\t_transitionEnd: function (e) {\n\t\tvar that = this;\n\n\t\tif (e.target != that.scroller) return;\n\n\t\tthat._unbind(TRNEND_EV);\n\t\t\n\t\tthat._startAni();\n\t},\n\n\n\t/**\n\t*\n\t* Utilities\n\t*\n\t*/\n\t_startAni: function () {\n\t\tvar that = this,\n\t\t\tstartX = that.x, startY = that.y,\n\t\t\tstartTime = Date.now(),\n\t\t\tstep, easeOut,\n\t\t\tanimate;\n\n\t\tif (that.animating) return;\n\t\t\n\t\tif (!that.steps.length) {\n\t\t\tthat._resetPos(400);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tstep = that.steps.shift();\n\t\t\n\t\tif (step.x == startX && step.y == startY) step.time = 0;\n\n\t\tthat.animating = true;\n\t\tthat.moved = true;\n\t\t\n\t\tif (that.options.useTransition) {\n\t\t\tthat._transitionTime(step.time);\n\t\t\tthat._pos(step.x, step.y);\n\t\t\tthat.animating = false;\n\t\t\tif (step.time) that._bind(TRNEND_EV);\n\t\t\telse that._resetPos(0);\n\t\t\treturn;\n\t\t}\n\n\t\tanimate = function () {\n\t\t\tvar now = Date.now(),\n\t\t\t\tnewX, newY;\n\n\t\t\tif (now >= startTime + step.time) {\n\t\t\t\tthat._pos(step.x, step.y);\n\t\t\t\tthat.animating = false;\n\t\t\t\tif (that.options.onAnimationEnd) that.options.onAnimationEnd.call(that);\t\t\t// Execute custom code on animation end\n\t\t\t\tthat._startAni();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnow = (now - startTime) / step.time - 1;\n\t\t\teaseOut = m.sqrt(1 - now * now);\n\t\t\tnewX = (step.x - startX) * easeOut + startX;\n\t\t\tnewY = (step.y - startY) * easeOut + startY;\n\t\t\tthat._pos(newX, newY);\n\t\t\tif (that.animating) that.aniTime = nextFrame(animate);\n\t\t};\n\n\t\tanimate();\n\t},\n\n\t_transitionTime: function (time) {\n\t\ttime += 'ms';\n\t\tthis.scroller.style[transitionDuration] = time;\n\t\tif (this.hScrollbar) this.hScrollbarIndicator.style[transitionDuration] = time;\n\t\tif (this.vScrollbar) this.vScrollbarIndicator.style[transitionDuration] = time;\n\t},\n\n\t_momentum: function (dist, time, maxDistUpper, maxDistLower, size) {\n\t\tvar deceleration = 0.0006,\n\t\t\tspeed = m.abs(dist) / time,\n\t\t\tnewDist = (speed * speed) / (2 * deceleration),\n\t\t\tnewTime = 0, outsideDist = 0;\n\n\t\t// Proportinally reduce speed if we are outside of the boundaries\n\t\tif (dist > 0 && newDist > maxDistUpper) {\n\t\t\toutsideDist = size / (6 / (newDist / speed * deceleration));\n\t\t\tmaxDistUpper = maxDistUpper + outsideDist;\n\t\t\tspeed = speed * maxDistUpper / newDist;\n\t\t\tnewDist = maxDistUpper;\n\t\t} else if (dist < 0 && newDist > maxDistLower) {\n\t\t\toutsideDist = size / (6 / (newDist / speed * deceleration));\n\t\t\tmaxDistLower = maxDistLower + outsideDist;\n\t\t\tspeed = speed * maxDistLower / newDist;\n\t\t\tnewDist = maxDistLower;\n\t\t}\n\n\t\tnewDist = newDist * (dist < 0 ? -1 : 1);\n\t\tnewTime = speed / deceleration;\n\n\t\treturn { dist: newDist, time: m.round(newTime) };\n\t},\n\n\t_offset: function (el) {\n\t\tvar left = -el.offsetLeft,\n\t\t\ttop = -el.offsetTop;\n\t\t\t\n\t\twhile (el = el.offsetParent) {\n\t\t\tleft -= el.offsetLeft;\n\t\t\ttop -= el.offsetTop;\n\t\t}\n\t\t\n\t\tif (el != this.wrapper) {\n\t\t\tleft *= this.scale;\n\t\t\ttop *= this.scale;\n\t\t}\n\n\t\treturn { left: left, top: top };\n\t},\n\n\t_snap: function (x, y) {\n\t\tvar that = this,\n\t\t\ti, l,\n\t\t\tpage, time,\n\t\t\tsizeX, sizeY;\n\n\t\t// Check page X\n\t\tpage = that.pagesX.length - 1;\n\t\tfor (i=0, l=that.pagesX.length; i<l; i++) {\n\t\t\tif (x >= that.pagesX[i]) {\n\t\t\t\tpage = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (page == that.currPageX && page > 0 && that.dirX < 0) page--;\n\t\tx = that.pagesX[page];\n\t\tsizeX = m.abs(x - that.pagesX[that.currPageX]);\n\t\tsizeX = sizeX ? m.abs(that.x - x) / sizeX * 500 : 0;\n\t\tthat.currPageX = page;\n\n\t\t// Check page Y\n\t\tpage = that.pagesY.length-1;\n\t\tfor (i=0; i<page; i++) {\n\t\t\tif (y >= that.pagesY[i]) {\n\t\t\t\tpage = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (page == that.currPageY && page > 0 && that.dirY < 0) page--;\n\t\ty = that.pagesY[page];\n\t\tsizeY = m.abs(y - that.pagesY[that.currPageY]);\n\t\tsizeY = sizeY ? m.abs(that.y - y) / sizeY * 500 : 0;\n\t\tthat.currPageY = page;\n\n\t\t// Snap with constant speed (proportional duration)\n\t\ttime = m.round(m.max(sizeX, sizeY)) || 200;\n\n\t\treturn { x: x, y: y, time: time };\n\t},\n\n\t_bind: function (type, el, bubble) {\n\t\t(el || this.scroller).addEventListener(type, this, !!bubble);\n\t},\n\n\t_unbind: function (type, el, bubble) {\n\t\t(el || this.scroller).removeEventListener(type, this, !!bubble);\n\t},\n\n\n\t/**\n\t*\n\t* Public methods\n\t*\n\t*/\n\tdestroy: function () {\n\t\tvar that = this;\n\n\t\tthat.scroller.style[transform] = '';\n\n\t\t// Remove the scrollbars\n\t\tthat.hScrollbar = false;\n\t\tthat.vScrollbar = false;\n\t\tthat._scrollbar('h');\n\t\tthat._scrollbar('v');\n\n\t\t// Remove the event listeners\n\t\tthat._unbind(RESIZE_EV, window);\n\t\tthat._unbind(START_EV);\n\t\tthat._unbind(MOVE_EV, window);\n\t\tthat._unbind(END_EV, window);\n\t\tthat._unbind(CANCEL_EV, window);\n\t\t\n\t\tif (!that.options.hasTouch) {\n\t\t\tthat._unbind('DOMMouseScroll');\n\t\t\tthat._unbind('mousewheel');\n\t\t}\n\t\t\n\t\tif (that.options.useTransition) that._unbind(TRNEND_EV);\n\t\t\n\t\tif (that.options.checkDOMChanges) clearInterval(that.checkDOMTime);\n\t\t\n\t\tif (that.options.onDestroy) that.options.onDestroy.call(that);\n\t},\n\n\trefresh: function () {\n\t\tvar that = this,\n\t\t\toffset,\n\t\t\ti, l,\n\t\t\tels,\n\t\t\tpos = 0,\n\t\t\tpage = 0;\n\n\t\tif (that.scale < that.options.zoomMin) that.scale = that.options.zoomMin;\n\t\tthat.wrapperW = that.wrapper.clientWidth || 1;\n\t\tthat.wrapperH = that.wrapper.clientHeight || 1;\n\n\t\tthat.minScrollY = -that.options.topOffset || 0;\n\t\tthat.scrollerW = m.round(that.scroller.offsetWidth * that.scale);\n\t\tthat.scrollerH = m.round((that.scroller.offsetHeight + that.minScrollY) * that.scale);\n\t\tthat.maxScrollX = that.wrapperW - that.scrollerW;\n\t\tthat.maxScrollY = that.wrapperH - that.scrollerH + that.minScrollY;\n\t\tthat.dirX = 0;\n\t\tthat.dirY = 0;\n\n\t\tif (that.options.onRefresh) that.options.onRefresh.call(that);\n\n\t\tthat.hScroll = that.options.hScroll && that.maxScrollX < 0;\n\t\tthat.vScroll = that.options.vScroll && (!that.options.bounceLock && !that.hScroll || that.scrollerH > that.wrapperH);\n\n\t\tthat.hScrollbar = that.hScroll && that.options.hScrollbar;\n\t\tthat.vScrollbar = that.vScroll && that.options.vScrollbar && that.scrollerH > that.wrapperH;\n\n\t\toffset = that._offset(that.wrapper);\n\t\tthat.wrapperOffsetLeft = -offset.left;\n\t\tthat.wrapperOffsetTop = -offset.top;\n\n\t\t// Prepare snap\n\t\tif (typeof that.options.snap == 'string') {\n\t\t\tthat.pagesX = [];\n\t\t\tthat.pagesY = [];\n\t\t\tels = that.scroller.querySelectorAll(that.options.snap);\n\t\t\tfor (i=0, l=els.length; i<l; i++) {\n\t\t\t\tpos = that._offset(els[i]);\n\t\t\t\tpos.left += that.wrapperOffsetLeft;\n\t\t\t\tpos.top += that.wrapperOffsetTop;\n\t\t\t\tthat.pagesX[i] = pos.left < that.maxScrollX ? that.maxScrollX : pos.left * that.scale;\n\t\t\t\tthat.pagesY[i] = pos.top < that.maxScrollY ? that.maxScrollY : pos.top * that.scale;\n\t\t\t}\n\t\t} else if (that.options.snap) {\n\t\t\tthat.pagesX = [];\n\t\t\twhile (pos >= that.maxScrollX) {\n\t\t\t\tthat.pagesX[page] = pos;\n\t\t\t\tpos = pos - that.wrapperW;\n\t\t\t\tpage++;\n\t\t\t}\n\t\t\tif (that.maxScrollX%that.wrapperW) that.pagesX[that.pagesX.length] = that.maxScrollX - that.pagesX[that.pagesX.length-1] + that.pagesX[that.pagesX.length-1];\n\n\t\t\tpos = 0;\n\t\t\tpage = 0;\n\t\t\tthat.pagesY = [];\n\t\t\twhile (pos >= that.maxScrollY) {\n\t\t\t\tthat.pagesY[page] = pos;\n\t\t\t\tpos = pos - that.wrapperH;\n\t\t\t\tpage++;\n\t\t\t}\n\t\t\tif (that.maxScrollY%that.wrapperH) that.pagesY[that.pagesY.length] = that.maxScrollY - that.pagesY[that.pagesY.length-1] + that.pagesY[that.pagesY.length-1];\n\t\t}\n\n\t\t// Prepare the scrollbars\n\t\tthat._scrollbar('h');\n\t\tthat._scrollbar('v');\n\n\t\tif (!that.zoomed) {\n\t\t\tthat.scroller.style[transitionDuration] = '0';\n\t\t\tthat._resetPos(400);\n\t\t}\n\t},\n\n\tscrollTo: function (x, y, time, relative) {\n\t\tvar that = this,\n\t\t\tstep = x,\n\t\t\ti, l;\n\n\t\tthat.stop();\n\n\t\tif (!step.length) step = [{ x: x, y: y, time: time, relative: relative }];\n\t\t\n\t\tfor (i=0, l=step.length; i<l; i++) {\n\t\t\tif (step[i].relative) { step[i].x = that.x - step[i].x; step[i].y = that.y - step[i].y; }\n\t\t\tthat.steps.push({ x: step[i].x, y: step[i].y, time: step[i].time || 0 });\n\t\t}\n\n\t\tthat._startAni();\n\t},\n\n\tscrollToElement: function (el, time) {\n\t\tvar that = this, pos;\n\t\tel = el.nodeType ? el : that.scroller.querySelector(el);\n\t\tif (!el) return;\n\n\t\tpos = that._offset(el);\n\t\tpos.left += that.wrapperOffsetLeft;\n\t\tpos.top += that.wrapperOffsetTop;\n\n\t\tpos.left = pos.left > 0 ? 0 : pos.left < that.maxScrollX ? that.maxScrollX : pos.left;\n\t\tpos.top = pos.top > that.minScrollY ? that.minScrollY : pos.top < that.maxScrollY ? that.maxScrollY : pos.top;\n\t\ttime = time === undefined ? m.max(m.abs(pos.left)*2, m.abs(pos.top)*2) : time;\n\n\t\tthat.scrollTo(pos.left, pos.top, time);\n\t},\n\n\tscrollToPage: function (pageX, pageY, time) {\n\t\tvar that = this, x, y;\n\t\t\n\t\ttime = time === undefined ? 400 : time;\n\n\t\tif (that.options.onScrollStart) that.options.onScrollStart.call(that);\n\n\t\tif (that.options.snap) {\n\t\t\tpageX = pageX == 'next' ? that.currPageX+1 : pageX == 'prev' ? that.currPageX-1 : pageX;\n\t\t\tpageY = pageY == 'next' ? that.currPageY+1 : pageY == 'prev' ? that.currPageY-1 : pageY;\n\n\t\t\tpageX = pageX < 0 ? 0 : pageX > that.pagesX.length-1 ? that.pagesX.length-1 : pageX;\n\t\t\tpageY = pageY < 0 ? 0 : pageY > that.pagesY.length-1 ? that.pagesY.length-1 : pageY;\n\n\t\t\tthat.currPageX = pageX;\n\t\t\tthat.currPageY = pageY;\n\t\t\tx = that.pagesX[pageX];\n\t\t\ty = that.pagesY[pageY];\n\t\t} else {\n\t\t\tx = -that.wrapperW * pageX;\n\t\t\ty = -that.wrapperH * pageY;\n\t\t\tif (x < that.maxScrollX) x = that.maxScrollX;\n\t\t\tif (y < that.maxScrollY) y = that.maxScrollY;\n\t\t}\n\n\t\tthat.scrollTo(x, y, time);\n\t},\n\n\tdisable: function () {\n\t\tthis.stop();\n\t\tthis._resetPos(0);\n\t\tthis.enabled = false;\n\n\t\t// If disabled after touchstart we make sure that there are no left over events\n\t\tthis._unbind(MOVE_EV, window);\n\t\tthis._unbind(END_EV, window);\n\t\tthis._unbind(CANCEL_EV, window);\n\t},\n\t\n\tenable: function () {\n\t\tthis.enabled = true;\n\t},\n\t\n\tstop: function () {\n\t\tif (this.options.useTransition) this._unbind(TRNEND_EV);\n\t\telse cancelFrame(this.aniTime);\n\t\tthis.steps = [];\n\t\tthis.moved = false;\n\t\tthis.animating = false;\n\t},\n\t\n\tzoom: function (x, y, scale, time) {\n\t\tvar that = this,\n\t\t\trelScale = scale / that.scale;\n\n\t\tif (!that.options.useTransform) return;\n\n\t\tthat.zoomed = true;\n\t\ttime = time === undefined ? 200 : time;\n\t\tx = x - that.wrapperOffsetLeft - that.x;\n\t\ty = y - that.wrapperOffsetTop - that.y;\n\t\tthat.x = x - x * relScale + that.x;\n\t\tthat.y = y - y * relScale + that.y;\n\n\t\tthat.scale = scale;\n\t\tthat.refresh();\n\n\t\tthat.x = that.x > 0 ? 0 : that.x < that.maxScrollX ? that.maxScrollX : that.x;\n\t\tthat.y = that.y > that.minScrollY ? that.minScrollY : that.y < that.maxScrollY ? that.maxScrollY : that.y;\n\n\t\tthat.scroller.style[transitionDuration] = time + 'ms';\n\t\tthat.scroller.style[transform] = 'translate(' + that.x + 'px,' + that.y + 'px) scale(' + scale + ')' + translateZ;\n\t\tthat.zoomed = false;\n\t},\n\t\n\tisReady: function () {\n\t\treturn !this.moved && !this.zoomed && !this.animating;\n\t}\n};\n\nfunction prefixStyle (style) {\n\tif ( vendor === '' ) return style;\n\n\tstyle = style.charAt(0).toUpperCase() + style.substr(1);\n\treturn vendor + style;\n}\n\ndummyStyle = null;\t// for the sake of it\n\nif (true) exports.iScroll = iScroll;\nelse window.iScroll = iScroll;\n\n})(window, document);\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	eval("/*** IMPORTS FROM imports-loader ***/\nvar define = false;\n\n/**\n * Swiper 3.3.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * \n * http://www.idangero.us/swiper/\n * \n * Copyright 2016, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n * \n * Licensed under MIT\n * \n * Released on: February 7, 2016\n */\n! function() {\n\t\"use strict\";\n\n\tfunction e(e) {\n\t\te.fn.swiper = function(a) {\n\t\t\tvar r;\n\t\t\treturn e(this).each(function() {\n\t\t\t\tvar e = new t(this, a);\n\t\t\t\tr || (r = e)\n\t\t\t}), r\n\t\t}\n\t}\n\tvar a, t = function(e, i) {\n\t\tfunction s(e) {\n\t\t\treturn Math.floor(e)\n\t\t}\n\n\t\tfunction n() {\n\t\t\tb.autoplayTimeoutId = setTimeout(function() {\n\t\t\t\tb.params.loop ? (b.fixLoop(), b._slideNext(), b.emit(\"onAutoplay\", b)) : b.isEnd ? i.autoplayStopOnLast ? b.stopAutoplay() : (b._slideTo(0), b.emit(\"onAutoplay\", b)) : (b._slideNext(), b.emit(\"onAutoplay\", b))\n\t\t\t}, b.params.autoplay)\n\t\t}\n\n\t\tfunction o(e, t) {\n\t\t\tvar r = a(e.target);\n\t\t\tif (!r.is(t))\n\t\t\t\tif (\"string\" == typeof t) r = r.parents(t);\n\t\t\t\telse if (t.nodeType) {\n\t\t\t\tvar i;\n\t\t\t\treturn r.parents().each(function(e, a) {\n\t\t\t\t\ta === t && (i = t)\n\t\t\t\t}), i ? t : void 0\n\t\t\t}\n\t\t\tif (0 !== r.length) return r[0]\n\t\t}\n\n\t\tfunction l(e, a) {\n\t\t\ta = a || {};\n\t\t\tvar t = window.MutationObserver || window.WebkitMutationObserver,\n\t\t\t\tr = new t(function(e) {\n\t\t\t\t\te.forEach(function(e) {\n\t\t\t\t\t\tb.onResize(!0), b.emit(\"onObserverUpdate\", b, e)\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\tr.observe(e, {\n\t\t\t\tattributes: \"undefined\" == typeof a.attributes ? !0 : a.attributes,\n\t\t\t\tchildList: \"undefined\" == typeof a.childList ? !0 : a.childList,\n\t\t\t\tcharacterData: \"undefined\" == typeof a.characterData ? !0 : a.characterData\n\t\t\t}), b.observers.push(r)\n\t\t}\n\n\t\tfunction p(e) {\n\t\t\te.originalEvent && (e = e.originalEvent);\n\t\t\tvar a = e.keyCode || e.charCode;\n\t\t\tif (!b.params.allowSwipeToNext && (b.isHorizontal() && 39 === a || !b.isHorizontal() && 40 === a)) return !1;\n\t\t\tif (!b.params.allowSwipeToPrev && (b.isHorizontal() && 37 === a || !b.isHorizontal() && 38 === a)) return !1;\n\t\t\tif (!(e.shiftKey || e.altKey || e.ctrlKey || e.metaKey || document.activeElement && document.activeElement.nodeName && (\"input\" === document.activeElement.nodeName.toLowerCase() || \"textarea\" === document.activeElement.nodeName.toLowerCase()))) {\n\t\t\t\tif (37 === a || 39 === a || 38 === a || 40 === a) {\n\t\t\t\t\tvar t = !1;\n\t\t\t\t\tif (b.container.parents(\".swiper-slide\").length > 0 && 0 === b.container.parents(\".swiper-slide-active\").length) return;\n\t\t\t\t\tvar r = {\n\t\t\t\t\t\t\tleft: window.pageXOffset,\n\t\t\t\t\t\t\ttop: window.pageYOffset\n\t\t\t\t\t\t},\n\t\t\t\t\t\ti = window.innerWidth,\n\t\t\t\t\t\ts = window.innerHeight,\n\t\t\t\t\t\tn = b.container.offset();\n\t\t\t\t\tb.rtl && (n.left = n.left - b.container[0].scrollLeft);\n\t\t\t\t\tfor (var o = [\n\t\t\t\t\t\t\t[n.left, n.top],\n\t\t\t\t\t\t\t[n.left + b.width, n.top],\n\t\t\t\t\t\t\t[n.left, n.top + b.height],\n\t\t\t\t\t\t\t[n.left + b.width, n.top + b.height]\n\t\t\t\t\t\t], l = 0; l < o.length; l++) {\n\t\t\t\t\t\tvar p = o[l];\n\t\t\t\t\t\tp[0] >= r.left && p[0] <= r.left + i && p[1] >= r.top && p[1] <= r.top + s && (t = !0)\n\t\t\t\t\t}\n\t\t\t\t\tif (!t) return\n\t\t\t\t}\n\t\t\t\tb.isHorizontal() ? ((37 === a || 39 === a) && (e.preventDefault ? e.preventDefault() : e.returnValue = !1), (39 === a && !b.rtl || 37 === a && b.rtl) && b.slideNext(), (37 === a && !b.rtl || 39 === a && b.rtl) && b.slidePrev()) : ((38 === a || 40 === a) && (e.preventDefault ? e.preventDefault() : e.returnValue = !1), 40 === a && b.slideNext(), 38 === a && b.slidePrev())\n\t\t\t}\n\t\t}\n\n\t\tfunction d(e) {\n\t\t\te.originalEvent && (e = e.originalEvent);\n\t\t\tvar a = b.mousewheel.event,\n\t\t\t\tt = 0,\n\t\t\t\tr = b.rtl ? -1 : 1;\n\t\t\tif (\"mousewheel\" === a)\n\t\t\t\tif (b.params.mousewheelForceToAxis)\n\t\t\t\t\tif (b.isHorizontal()) {\n\t\t\t\t\t\tif (!(Math.abs(e.wheelDeltaX) > Math.abs(e.wheelDeltaY))) return;\n\t\t\t\t\t\tt = e.wheelDeltaX * r\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!(Math.abs(e.wheelDeltaY) > Math.abs(e.wheelDeltaX))) return;\n\t\t\t\t\t\tt = e.wheelDeltaY\n\t\t\t\t\t}\n\t\t\telse t = Math.abs(e.wheelDeltaX) > Math.abs(e.wheelDeltaY) ? -e.wheelDeltaX * r : -e.wheelDeltaY;\n\t\t\telse if (\"DOMMouseScroll\" === a) t = -e.detail;\n\t\t\telse if (\"wheel\" === a)\n\t\t\t\tif (b.params.mousewheelForceToAxis)\n\t\t\t\t\tif (b.isHorizontal()) {\n\t\t\t\t\t\tif (!(Math.abs(e.deltaX) > Math.abs(e.deltaY))) return;\n\t\t\t\t\t\tt = -e.deltaX * r\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!(Math.abs(e.deltaY) > Math.abs(e.deltaX))) return;\n\t\t\t\t\t\tt = -e.deltaY\n\t\t\t\t\t}\n\t\t\telse t = Math.abs(e.deltaX) > Math.abs(e.deltaY) ? -e.deltaX * r : -e.deltaY;\n\t\t\tif (0 !== t) {\n\t\t\t\tif (b.params.mousewheelInvert && (t = -t), b.params.freeMode) {\n\t\t\t\t\tvar i = b.getWrapperTranslate() + t * b.params.mousewheelSensitivity,\n\t\t\t\t\t\ts = b.isBeginning,\n\t\t\t\t\t\tn = b.isEnd;\n\t\t\t\t\tif (i >= b.minTranslate() && (i = b.minTranslate()), i <= b.maxTranslate() && (i = b.maxTranslate()), b.setWrapperTransition(0), b.setWrapperTranslate(i), b.updateProgress(), b.updateActiveIndex(), (!s && b.isBeginning || !n && b.isEnd) && b.updateClasses(), b.params.freeModeSticky ? (clearTimeout(b.mousewheel.timeout), b.mousewheel.timeout = setTimeout(function() {\n\t\t\t\t\t\t\tb.slideReset()\n\t\t\t\t\t\t}, 300)) : b.params.lazyLoading && b.lazy && b.lazy.load(), 0 === i || i === b.maxTranslate()) return\n\t\t\t\t} else {\n\t\t\t\t\tif ((new window.Date).getTime() - b.mousewheel.lastScrollTime > 60)\n\t\t\t\t\t\tif (0 > t)\n\t\t\t\t\t\t\tif (b.isEnd && !b.params.loop || b.animating) {\n\t\t\t\t\t\t\t\tif (b.params.mousewheelReleaseOnEdges) return !0\n\t\t\t\t\t\t\t} else b.slideNext();\n\t\t\t\t\telse if (b.isBeginning && !b.params.loop || b.animating) {\n\t\t\t\t\t\tif (b.params.mousewheelReleaseOnEdges) return !0\n\t\t\t\t\t} else b.slidePrev();\n\t\t\t\t\tb.mousewheel.lastScrollTime = (new window.Date).getTime()\n\t\t\t\t}\n\t\t\t\treturn b.params.autoplay && b.stopAutoplay(), e.preventDefault ? e.preventDefault() : e.returnValue = !1, !1\n\t\t\t}\n\t\t}\n\n\t\tfunction u(e, t) {\n\t\t\te = a(e);\n\t\t\tvar r, i, s, n = b.rtl ? -1 : 1;\n\t\t\tr = e.attr(\"data-swiper-parallax\") || \"0\", i = e.attr(\"data-swiper-parallax-x\"), s = e.attr(\"data-swiper-parallax-y\"), i || s ? (i = i || \"0\", s = s || \"0\") : b.isHorizontal() ? (i = r, s = \"0\") : (s = r, i = \"0\"), i = i.indexOf(\"%\") >= 0 ? parseInt(i, 10) * t * n + \"%\" : i * t * n + \"px\", s = s.indexOf(\"%\") >= 0 ? parseInt(s, 10) * t + \"%\" : s * t + \"px\", e.transform(\"translate3d(\" + i + \", \" + s + \",0px)\")\n\t\t}\n\n\t\tfunction c(e) {\n\t\t\treturn 0 !== e.indexOf(\"on\") && (e = e[0] !== e[0].toUpperCase() ? \"on\" + e[0].toUpperCase() + e.substring(1) : \"on\" + e), e\n\t\t}\n\t\tif (!(this instanceof t)) return new t(e, i);\n\t\tvar m = {\n\t\t\t\tdirection: \"horizontal\",\n\t\t\t\ttouchEventsTarget: \"container\",\n\t\t\t\tinitialSlide: 0,\n\t\t\t\tspeed: 300,\n\t\t\t\tautoplay: !1,\n\t\t\t\tautoplayDisableOnInteraction: !0,\n\t\t\t\tautoplayStopOnLast: !1,\n\t\t\t\tiOSEdgeSwipeDetection: !1,\n\t\t\t\tiOSEdgeSwipeThreshold: 20,\n\t\t\t\tfreeMode: !1,\n\t\t\t\tfreeModeMomentum: !0,\n\t\t\t\tfreeModeMomentumRatio: 1,\n\t\t\t\tfreeModeMomentumBounce: !0,\n\t\t\t\tfreeModeMomentumBounceRatio: 1,\n\t\t\t\tfreeModeSticky: !1,\n\t\t\t\tfreeModeMinimumVelocity: .02,\n\t\t\t\tautoHeight: !1,\n\t\t\t\tsetWrapperSize: !1,\n\t\t\t\tvirtualTranslate: !1,\n\t\t\t\teffect: \"slide\",\n\t\t\t\tcoverflow: {\n\t\t\t\t\trotate: 50,\n\t\t\t\t\tstretch: 0,\n\t\t\t\t\tdepth: 100,\n\t\t\t\t\tmodifier: 1,\n\t\t\t\t\tslideShadows: !0\n\t\t\t\t},\n\t\t\t\tflip: {\n\t\t\t\t\tslideShadows: !0,\n\t\t\t\t\tlimitRotation: !0\n\t\t\t\t},\n\t\t\t\tcube: {\n\t\t\t\t\tslideShadows: !0,\n\t\t\t\t\tshadow: !0,\n\t\t\t\t\tshadowOffset: 20,\n\t\t\t\t\tshadowScale: .94\n\t\t\t\t},\n\t\t\t\tfade: {\n\t\t\t\t\tcrossFade: !1\n\t\t\t\t},\n\t\t\t\tparallax: !1,\n\t\t\t\tscrollbar: null,\n\t\t\t\tscrollbarHide: !0,\n\t\t\t\tscrollbarDraggable: !1,\n\t\t\t\tscrollbarSnapOnRelease: !1,\n\t\t\t\tkeyboardControl: !1,\n\t\t\t\tmousewheelControl: !1,\n\t\t\t\tmousewheelReleaseOnEdges: !1,\n\t\t\t\tmousewheelInvert: !1,\n\t\t\t\tmousewheelForceToAxis: !1,\n\t\t\t\tmousewheelSensitivity: 1,\n\t\t\t\thashnav: !1,\n\t\t\t\tbreakpoints: void 0,\n\t\t\t\tspaceBetween: 0,\n\t\t\t\tslidesPerView: 1,\n\t\t\t\tslidesPerColumn: 1,\n\t\t\t\tslidesPerColumnFill: \"column\",\n\t\t\t\tslidesPerGroup: 1,\n\t\t\t\tcenteredSlides: !1,\n\t\t\t\tslidesOffsetBefore: 0,\n\t\t\t\tslidesOffsetAfter: 0,\n\t\t\t\troundLengths: !1,\n\t\t\t\ttouchRatio: 1,\n\t\t\t\ttouchAngle: 45,\n\t\t\t\tsimulateTouch: !0,\n\t\t\t\tshortSwipes: !0,\n\t\t\t\tlongSwipes: !0,\n\t\t\t\tlongSwipesRatio: .5,\n\t\t\t\tlongSwipesMs: 300,\n\t\t\t\tfollowFinger: !0,\n\t\t\t\tonlyExternal: !1,\n\t\t\t\tthreshold: 0,\n\t\t\t\ttouchMoveStopPropagation: !0,\n\t\t\t\tuniqueNavElements: !0,\n\t\t\t\tpagination: null,\n\t\t\t\tpaginationElement: \"span\",\n\t\t\t\tpaginationClickable: !1,\n\t\t\t\tpaginationHide: !1,\n\t\t\t\tpaginationBulletRender: null,\n\t\t\t\tpaginationProgressRender: null,\n\t\t\t\tpaginationFractionRender: null,\n\t\t\t\tpaginationCustomRender: null,\n\t\t\t\tpaginationType: \"bullets\",\n\t\t\t\tresistance: !0,\n\t\t\t\tresistanceRatio: .85,\n\t\t\t\tnextButton: null,\n\t\t\t\tprevButton: null,\n\t\t\t\twatchSlidesProgress: !1,\n\t\t\t\twatchSlidesVisibility: !1,\n\t\t\t\tgrabCursor: !1,\n\t\t\t\tpreventClicks: !0,\n\t\t\t\tpreventClicksPropagation: !0,\n\t\t\t\tslideToClickedSlide: !1,\n\t\t\t\tlazyLoading: !1,\n\t\t\t\tlazyLoadingInPrevNext: !1,\n\t\t\t\tlazyLoadingInPrevNextAmount: 1,\n\t\t\t\tlazyLoadingOnTransitionStart: !1,\n\t\t\t\tpreloadImages: !0,\n\t\t\t\tupdateOnImagesReady: !0,\n\t\t\t\tloop: !1,\n\t\t\t\tloopAdditionalSlides: 0,\n\t\t\t\tloopedSlides: null,\n\t\t\t\tcontrol: void 0,\n\t\t\t\tcontrolInverse: !1,\n\t\t\t\tcontrolBy: \"slide\",\n\t\t\t\tallowSwipeToPrev: !0,\n\t\t\t\tallowSwipeToNext: !0,\n\t\t\t\tswipeHandler: null,\n\t\t\t\tnoSwiping: !0,\n\t\t\t\tnoSwipingClass: \"swiper-no-swiping\",\n\t\t\t\tslideClass: \"swiper-slide\",\n\t\t\t\tslideActiveClass: \"swiper-slide-active\",\n\t\t\t\tslideVisibleClass: \"swiper-slide-visible\",\n\t\t\t\tslideDuplicateClass: \"swiper-slide-duplicate\",\n\t\t\t\tslideNextClass: \"swiper-slide-next\",\n\t\t\t\tslidePrevClass: \"swiper-slide-prev\",\n\t\t\t\twrapperClass: \"swiper-wrapper\",\n\t\t\t\tbulletClass: \"swiper-pagination-bullet\",\n\t\t\t\tbulletActiveClass: \"swiper-pagination-bullet-active\",\n\t\t\t\tbuttonDisabledClass: \"swiper-button-disabled\",\n\t\t\t\tpaginationCurrentClass: \"swiper-pagination-current\",\n\t\t\t\tpaginationTotalClass: \"swiper-pagination-total\",\n\t\t\t\tpaginationHiddenClass: \"swiper-pagination-hidden\",\n\t\t\t\tpaginationProgressbarClass: \"swiper-pagination-progressbar\",\n\t\t\t\tobserver: !1,\n\t\t\t\tobserveParents: !1,\n\t\t\t\ta11y: !1,\n\t\t\t\tprevSlideMessage: \"Previous slide\",\n\t\t\t\tnextSlideMessage: \"Next slide\",\n\t\t\t\tfirstSlideMessage: \"This is the first slide\",\n\t\t\t\tlastSlideMessage: \"This is the last slide\",\n\t\t\t\tpaginationBulletMessage: \"Go to slide {{index}}\",\n\t\t\t\trunCallbacksOnInit: !0\n\t\t\t},\n\t\t\th = i && i.virtualTranslate;\n\t\ti = i || {};\n\t\tvar f = {};\n\t\tfor (var g in i)\n\t\t\tif (\"object\" != typeof i[g] || null === i[g] || (i[g].nodeType || i[g] === window || i[g] === document || \"undefined\" != typeof r && i[g] instanceof r || \"undefined\" != typeof jQuery && i[g] instanceof jQuery)) f[g] = i[g];\n\t\t\telse {\n\t\t\t\tf[g] = {};\n\t\t\t\tfor (var v in i[g]) f[g][v] = i[g][v]\n\t\t\t}\n\t\tfor (var w in m)\n\t\t\tif (\"undefined\" == typeof i[w]) i[w] = m[w];\n\t\t\telse if (\"object\" == typeof i[w])\n\t\t\tfor (var y in m[w]) \"undefined\" == typeof i[w][y] && (i[w][y] = m[w][y]);\n\t\tvar b = this;\n\t\tif (b.params = i, b.originalParams = f, b.classNames = [], \"undefined\" != typeof a && \"undefined\" != typeof r && (a = r), (\"undefined\" != typeof a || (a = \"undefined\" == typeof r ? window.Dom7 || window.Zepto || window.jQuery : r)) && (b.$ = a, b.currentBreakpoint = void 0, b.getActiveBreakpoint = function() {\n\t\t\t\tif (!b.params.breakpoints) return !1;\n\t\t\t\tvar e, a = !1,\n\t\t\t\t\tt = [];\n\t\t\t\tfor (e in b.params.breakpoints) b.params.breakpoints.hasOwnProperty(e) && t.push(e);\n\t\t\t\tt.sort(function(e, a) {\n\t\t\t\t\treturn parseInt(e, 10) > parseInt(a, 10)\n\t\t\t\t});\n\t\t\t\tfor (var r = 0; r < t.length; r++) e = t[r], e >= window.innerWidth && !a && (a = e);\n\t\t\t\treturn a || \"max\"\n\t\t\t}, b.setBreakpoint = function() {\n\t\t\t\tvar e = b.getActiveBreakpoint();\n\t\t\t\tif (e && b.currentBreakpoint !== e) {\n\t\t\t\t\tvar a = e in b.params.breakpoints ? b.params.breakpoints[e] : b.originalParams,\n\t\t\t\t\t\tt = b.params.loop && a.slidesPerView !== b.params.slidesPerView;\n\t\t\t\t\tfor (var r in a) b.params[r] = a[r];\n\t\t\t\t\tb.currentBreakpoint = e, t && b.destroyLoop && b.reLoop(!0)\n\t\t\t\t}\n\t\t\t}, b.params.breakpoints && b.setBreakpoint(), b.container = a(e), 0 !== b.container.length)) {\n\t\t\tif (b.container.length > 1) {\n\t\t\t\tvar x = [];\n\t\t\t\treturn b.container.each(function() {\n\t\t\t\t\tx.push(new t(this, i))\n\t\t\t\t}), x\n\t\t\t}\n\t\t\tb.container[0].swiper = b, b.container.data(\"swiper\", b), b.classNames.push(\"swiper-container-\" + b.params.direction), b.params.freeMode && b.classNames.push(\"swiper-container-free-mode\"), b.support.flexbox || (b.classNames.push(\"swiper-container-no-flexbox\"), b.params.slidesPerColumn = 1), b.params.autoHeight && b.classNames.push(\"swiper-container-autoheight\"), (b.params.parallax || b.params.watchSlidesVisibility) && (b.params.watchSlidesProgress = !0), [\"cube\", \"coverflow\", \"flip\"].indexOf(b.params.effect) >= 0 && (b.support.transforms3d ? (b.params.watchSlidesProgress = !0, b.classNames.push(\"swiper-container-3d\")) : b.params.effect = \"slide\"), \"slide\" !== b.params.effect && b.classNames.push(\"swiper-container-\" + b.params.effect), \"cube\" === b.params.effect && (b.params.resistanceRatio = 0, b.params.slidesPerView = 1, b.params.slidesPerColumn = 1, b.params.slidesPerGroup = 1, b.params.centeredSlides = !1, b.params.spaceBetween = 0, b.params.virtualTranslate = !0, b.params.setWrapperSize = !1), (\"fade\" === b.params.effect || \"flip\" === b.params.effect) && (b.params.slidesPerView = 1, b.params.slidesPerColumn = 1, b.params.slidesPerGroup = 1, b.params.watchSlidesProgress = !0, b.params.spaceBetween = 0, b.params.setWrapperSize = !1, \"undefined\" == typeof h && (b.params.virtualTranslate = !0)), b.params.grabCursor && b.support.touch && (b.params.grabCursor = !1), b.wrapper = b.container.children(\".\" + b.params.wrapperClass), b.params.pagination && (b.paginationContainer = a(b.params.pagination), b.params.uniqueNavElements && \"string\" == typeof b.params.pagination && b.paginationContainer.length > 1 && 1 === b.container.find(b.params.pagination).length && (b.paginationContainer = b.container.find(b.params.pagination)), \"bullets\" === b.params.paginationType && b.params.paginationClickable ? b.paginationContainer.addClass(\"swiper-pagination-clickable\") : b.params.paginationClickable = !1, b.paginationContainer.addClass(\"swiper-pagination-\" + b.params.paginationType)), (b.params.nextButton || b.params.prevButton) && (b.params.nextButton && (b.nextButton = a(b.params.nextButton), b.params.uniqueNavElements && \"string\" == typeof b.params.nextButton && b.nextButton.length > 1 && 1 === b.container.find(b.params.nextButton).length && (b.nextButton = b.container.find(b.params.nextButton))), b.params.prevButton && (b.prevButton = a(b.params.prevButton), b.params.uniqueNavElements && \"string\" == typeof b.params.prevButton && b.prevButton.length > 1 && 1 === b.container.find(b.params.prevButton).length && (b.prevButton = b.container.find(b.params.prevButton)))), b.isHorizontal = function() {\n\t\t\t\treturn \"horizontal\" === b.params.direction\n\t\t\t}, b.rtl = b.isHorizontal() && (\"rtl\" === b.container[0].dir.toLowerCase() || \"rtl\" === b.container.css(\"direction\")), b.rtl && b.classNames.push(\"swiper-container-rtl\"), b.rtl && (b.wrongRTL = \"-webkit-box\" === b.wrapper.css(\"display\")), b.params.slidesPerColumn > 1 && b.classNames.push(\"swiper-container-multirow\"), b.device.android && b.classNames.push(\"swiper-container-android\"), b.container.addClass(b.classNames.join(\" \")), b.translate = 0, b.progress = 0, b.velocity = 0, b.lockSwipeToNext = function() {\n\t\t\t\tb.params.allowSwipeToNext = !1\n\t\t\t}, b.lockSwipeToPrev = function() {\n\t\t\t\tb.params.allowSwipeToPrev = !1\n\t\t\t}, b.lockSwipes = function() {\n\t\t\t\tb.params.allowSwipeToNext = b.params.allowSwipeToPrev = !1\n\t\t\t}, b.unlockSwipeToNext = function() {\n\t\t\t\tb.params.allowSwipeToNext = !0\n\t\t\t}, b.unlockSwipeToPrev = function() {\n\t\t\t\tb.params.allowSwipeToPrev = !0\n\t\t\t}, b.unlockSwipes = function() {\n\t\t\t\tb.params.allowSwipeToNext = b.params.allowSwipeToPrev = !0\n\t\t\t}, b.params.grabCursor && (b.container[0].style.cursor = \"move\", b.container[0].style.cursor = \"-webkit-grab\", b.container[0].style.cursor = \"-moz-grab\", b.container[0].style.cursor = \"grab\"), b.imagesToLoad = [], b.imagesLoaded = 0, b.loadImage = function(e, a, t, r, i) {\n\t\t\t\tfunction s() {\n\t\t\t\t\ti && i()\n\t\t\t\t}\n\t\t\t\tvar n;\n\t\t\t\te.complete && r ? s() : a ? (n = new window.Image, n.onload = s, n.onerror = s, t && (n.srcset = t), a && (n.src = a)) : s()\n\t\t\t}, b.preloadImages = function() {\n\t\t\t\tfunction e() {\n\t\t\t\t\t\"undefined\" != typeof b && null !== b && (void 0 !== b.imagesLoaded && b.imagesLoaded++, b.imagesLoaded === b.imagesToLoad.length && (b.params.updateOnImagesReady && b.update(), b.emit(\"onImagesReady\", b)))\n\t\t\t\t}\n\t\t\t\tb.imagesToLoad = b.container.find(\"img\");\n\t\t\t\tfor (var a = 0; a < b.imagesToLoad.length; a++) b.loadImage(b.imagesToLoad[a], b.imagesToLoad[a].currentSrc || b.imagesToLoad[a].getAttribute(\"src\"), b.imagesToLoad[a].srcset || b.imagesToLoad[a].getAttribute(\"srcset\"), !0, e)\n\t\t\t}, b.autoplayTimeoutId = void 0, b.autoplaying = !1, b.autoplayPaused = !1, b.startAutoplay = function() {\n\t\t\t\treturn \"undefined\" != typeof b.autoplayTimeoutId ? !1 : b.params.autoplay ? b.autoplaying ? !1 : (b.autoplaying = !0, b.emit(\"onAutoplayStart\", b), void n()) : !1\n\t\t\t}, b.stopAutoplay = function(e) {\n\t\t\t\tb.autoplayTimeoutId && (b.autoplayTimeoutId && clearTimeout(b.autoplayTimeoutId), b.autoplaying = !1, b.autoplayTimeoutId = void 0, b.emit(\"onAutoplayStop\", b))\n\t\t\t}, b.pauseAutoplay = function(e) {\n\t\t\t\tb.autoplayPaused || (b.autoplayTimeoutId && clearTimeout(b.autoplayTimeoutId), b.autoplayPaused = !0, 0 === e ? (b.autoplayPaused = !1, n()) : b.wrapper.transitionEnd(function() {\n\t\t\t\t\tb && (b.autoplayPaused = !1, b.autoplaying ? n() : b.stopAutoplay())\n\t\t\t\t}))\n\t\t\t}, b.minTranslate = function() {\n\t\t\t\treturn -b.snapGrid[0]\n\t\t\t}, b.maxTranslate = function() {\n\t\t\t\treturn -b.snapGrid[b.snapGrid.length - 1]\n\t\t\t}, b.updateAutoHeight = function() {\n\t\t\t\tvar e = b.slides.eq(b.activeIndex)[0];\n\t\t\t\tif (\"undefined\" != typeof e) {\n\t\t\t\t\tvar a = e.offsetHeight;\n\t\t\t\t\ta && b.wrapper.css(\"height\", a + \"px\")\n\t\t\t\t}\n\t\t\t}, b.updateContainerSize = function() {\n\t\t\t\tvar e, a;\n\t\t\t\te = \"undefined\" != typeof b.params.width ? b.params.width : b.container[0].clientWidth, a = \"undefined\" != typeof b.params.height ? b.params.height : b.container[0].clientHeight, 0 === e && b.isHorizontal() || 0 === a && !b.isHorizontal() || (e = e - parseInt(b.container.css(\"padding-left\"), 10) - parseInt(b.container.css(\"padding-right\"), 10), a = a - parseInt(b.container.css(\"padding-top\"), 10) - parseInt(b.container.css(\"padding-bottom\"), 10), b.width = e, b.height = a, b.size = b.isHorizontal() ? b.width : b.height)\n\t\t\t}, b.updateSlidesSize = function() {\n\t\t\t\tb.slides = b.wrapper.children(\".\" + b.params.slideClass), b.snapGrid = [], b.slidesGrid = [], b.slidesSizesGrid = [];\n\t\t\t\tvar e, a = b.params.spaceBetween,\n\t\t\t\t\tt = -b.params.slidesOffsetBefore,\n\t\t\t\t\tr = 0,\n\t\t\t\t\ti = 0;\n\t\t\t\tif (\"undefined\" != typeof b.size) {\n\t\t\t\t\t\"string\" == typeof a && a.indexOf(\"%\") >= 0 && (a = parseFloat(a.replace(\"%\", \"\")) / 100 * b.size), b.virtualSize = -a, b.rtl ? b.slides.css({\n\t\t\t\t\t\tmarginLeft: \"\",\n\t\t\t\t\t\tmarginTop: \"\"\n\t\t\t\t\t}) : b.slides.css({\n\t\t\t\t\t\tmarginRight: \"\",\n\t\t\t\t\t\tmarginBottom: \"\"\n\t\t\t\t\t});\n\t\t\t\t\tvar n;\n\t\t\t\t\tb.params.slidesPerColumn > 1 && (n = Math.floor(b.slides.length / b.params.slidesPerColumn) === b.slides.length / b.params.slidesPerColumn ? b.slides.length : Math.ceil(b.slides.length / b.params.slidesPerColumn) * b.params.slidesPerColumn, \"auto\" !== b.params.slidesPerView && \"row\" === b.params.slidesPerColumnFill && (n = Math.max(n, b.params.slidesPerView * b.params.slidesPerColumn)));\n\t\t\t\t\tvar o, l = b.params.slidesPerColumn,\n\t\t\t\t\t\tp = n / l,\n\t\t\t\t\t\td = p - (b.params.slidesPerColumn * p - b.slides.length);\n\t\t\t\t\tfor (e = 0; e < b.slides.length; e++) {\n\t\t\t\t\t\to = 0;\n\t\t\t\t\t\tvar u = b.slides.eq(e);\n\t\t\t\t\t\tif (b.params.slidesPerColumn > 1) {\n\t\t\t\t\t\t\tvar c, m, h;\n\t\t\t\t\t\t\t\"column\" === b.params.slidesPerColumnFill ? (m = Math.floor(e / l), h = e - m * l, (m > d || m === d && h === l - 1) && ++h >= l && (h = 0, m++), c = m + h * n / l, u.css({\n\t\t\t\t\t\t\t\t\"-webkit-box-ordinal-group\": c,\n\t\t\t\t\t\t\t\t\"-moz-box-ordinal-group\": c,\n\t\t\t\t\t\t\t\t\"-ms-flex-order\": c,\n\t\t\t\t\t\t\t\t\"-webkit-order\": c,\n\t\t\t\t\t\t\t\torder: c\n\t\t\t\t\t\t\t})) : (h = Math.floor(e / p), m = e - h * p), u.css({\n\t\t\t\t\t\t\t\t\"margin-top\": 0 !== h && b.params.spaceBetween && b.params.spaceBetween + \"px\"\n\t\t\t\t\t\t\t}).attr(\"data-swiper-column\", m).attr(\"data-swiper-row\", h)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\"none\" !== u.css(\"display\") && (\"auto\" === b.params.slidesPerView ? (o = b.isHorizontal() ? u.outerWidth(!0) : u.outerHeight(!0), b.params.roundLengths && (o = s(o))) : (o = (b.size - (b.params.slidesPerView - 1) * a) / b.params.slidesPerView, b.params.roundLengths && (o = s(o)), b.isHorizontal() ? b.slides[e].style.width = o + \"px\" : b.slides[e].style.height = o + \"px\"), b.slides[e].swiperSlideSize = o, b.slidesSizesGrid.push(o), b.params.centeredSlides ? (t = t + o / 2 + r / 2 + a, 0 === e && (t = t - b.size / 2 - a), Math.abs(t) < .001 && (t = 0), i % b.params.slidesPerGroup === 0 && b.snapGrid.push(t), b.slidesGrid.push(t)) : (i % b.params.slidesPerGroup === 0 && b.snapGrid.push(t), b.slidesGrid.push(t), t = t + o + a), b.virtualSize += o + a, r = o, i++)\n\t\t\t\t\t}\n\t\t\t\t\tb.virtualSize = Math.max(b.virtualSize, b.size) + b.params.slidesOffsetAfter;\n\t\t\t\t\tvar f;\n\t\t\t\t\tif (b.rtl && b.wrongRTL && (\"slide\" === b.params.effect || \"coverflow\" === b.params.effect) && b.wrapper.css({\n\t\t\t\t\t\t\twidth: b.virtualSize + b.params.spaceBetween + \"px\"\n\t\t\t\t\t\t}), (!b.support.flexbox || b.params.setWrapperSize) && (b.isHorizontal() ? b.wrapper.css({\n\t\t\t\t\t\t\twidth: b.virtualSize + b.params.spaceBetween + \"px\"\n\t\t\t\t\t\t}) : b.wrapper.css({\n\t\t\t\t\t\t\theight: b.virtualSize + b.params.spaceBetween + \"px\"\n\t\t\t\t\t\t})), b.params.slidesPerColumn > 1 && (b.virtualSize = (o + b.params.spaceBetween) * n, b.virtualSize = Math.ceil(b.virtualSize / b.params.slidesPerColumn) - b.params.spaceBetween, b.wrapper.css({\n\t\t\t\t\t\t\twidth: b.virtualSize + b.params.spaceBetween + \"px\"\n\t\t\t\t\t\t}), b.params.centeredSlides)) {\n\t\t\t\t\t\tfor (f = [], e = 0; e < b.snapGrid.length; e++) b.snapGrid[e] < b.virtualSize + b.snapGrid[0] && f.push(b.snapGrid[e]);\n\t\t\t\t\t\tb.snapGrid = f\n\t\t\t\t\t}\n\t\t\t\t\tif (!b.params.centeredSlides) {\n\t\t\t\t\t\tfor (f = [], e = 0; e < b.snapGrid.length; e++) b.snapGrid[e] <= b.virtualSize - b.size && f.push(b.snapGrid[e]);\n\t\t\t\t\t\tb.snapGrid = f, Math.floor(b.virtualSize - b.size) - Math.floor(b.snapGrid[b.snapGrid.length - 1]) > 1 && b.snapGrid.push(b.virtualSize - b.size)\n\t\t\t\t\t}\n\t\t\t\t\t0 === b.snapGrid.length && (b.snapGrid = [0]), 0 !== b.params.spaceBetween && (b.isHorizontal() ? b.rtl ? b.slides.css({\n\t\t\t\t\t\tmarginLeft: a + \"px\"\n\t\t\t\t\t}) : b.slides.css({\n\t\t\t\t\t\tmarginRight: a + \"px\"\n\t\t\t\t\t}) : b.slides.css({\n\t\t\t\t\t\tmarginBottom: a + \"px\"\n\t\t\t\t\t})), b.params.watchSlidesProgress && b.updateSlidesOffset()\n\t\t\t\t}\n\t\t\t}, b.updateSlidesOffset = function() {\n\t\t\t\tfor (var e = 0; e < b.slides.length; e++) b.slides[e].swiperSlideOffset = b.isHorizontal() ? b.slides[e].offsetLeft : b.slides[e].offsetTop\n\t\t\t}, b.updateSlidesProgress = function(e) {\n\t\t\t\tif (\"undefined\" == typeof e && (e = b.translate || 0), 0 !== b.slides.length) {\n\t\t\t\t\t\"undefined\" == typeof b.slides[0].swiperSlideOffset && b.updateSlidesOffset();\n\t\t\t\t\tvar a = -e;\n\t\t\t\t\tb.rtl && (a = e), b.slides.removeClass(b.params.slideVisibleClass);\n\t\t\t\t\tfor (var t = 0; t < b.slides.length; t++) {\n\t\t\t\t\t\tvar r = b.slides[t],\n\t\t\t\t\t\t\ti = (a - r.swiperSlideOffset) / (r.swiperSlideSize + b.params.spaceBetween);\n\t\t\t\t\t\tif (b.params.watchSlidesVisibility) {\n\t\t\t\t\t\t\tvar s = -(a - r.swiperSlideOffset),\n\t\t\t\t\t\t\t\tn = s + b.slidesSizesGrid[t],\n\t\t\t\t\t\t\t\to = s >= 0 && s < b.size || n > 0 && n <= b.size || 0 >= s && n >= b.size;\n\t\t\t\t\t\t\to && b.slides.eq(t).addClass(b.params.slideVisibleClass)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tr.progress = b.rtl ? -i : i\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, b.updateProgress = function(e) {\n\t\t\t\t\"undefined\" == typeof e && (e = b.translate || 0);\n\t\t\t\tvar a = b.maxTranslate() - b.minTranslate(),\n\t\t\t\t\tt = b.isBeginning,\n\t\t\t\t\tr = b.isEnd;\n\t\t\t\t0 === a ? (b.progress = 0, b.isBeginning = b.isEnd = !0) : (b.progress = (e - b.minTranslate()) / a, b.isBeginning = b.progress <= 0, b.isEnd = b.progress >= 1), b.isBeginning && !t && b.emit(\"onReachBeginning\", b), b.isEnd && !r && b.emit(\"onReachEnd\", b), b.params.watchSlidesProgress && b.updateSlidesProgress(e), b.emit(\"onProgress\", b, b.progress)\n\t\t\t}, b.updateActiveIndex = function() {\n\t\t\t\tvar e, a, t, r = b.rtl ? b.translate : -b.translate;\n\t\t\t\tfor (a = 0; a < b.slidesGrid.length; a++) \"undefined\" != typeof b.slidesGrid[a + 1] ? r >= b.slidesGrid[a] && r < b.slidesGrid[a + 1] - (b.slidesGrid[a + 1] - b.slidesGrid[a]) / 2 ? e = a : r >= b.slidesGrid[a] && r < b.slidesGrid[a + 1] && (e = a + 1) : r >= b.slidesGrid[a] && (e = a);\n\t\t\t\t(0 > e || \"undefined\" == typeof e) && (e = 0), t = Math.floor(e / b.params.slidesPerGroup), t >= b.snapGrid.length && (t = b.snapGrid.length - 1), e !== b.activeIndex && (b.snapIndex = t, b.previousIndex = b.activeIndex, b.activeIndex = e, b.updateClasses())\n\t\t\t}, b.updateClasses = function() {\n\t\t\t\tb.slides.removeClass(b.params.slideActiveClass + \" \" + b.params.slideNextClass + \" \" + b.params.slidePrevClass);\n\t\t\t\tvar e = b.slides.eq(b.activeIndex);\n\t\t\t\te.addClass(b.params.slideActiveClass);\n\t\t\t\tvar t = e.next(\".\" + b.params.slideClass).addClass(b.params.slideNextClass);\n\t\t\t\tb.params.loop && 0 === t.length && b.slides.eq(0).addClass(b.params.slideNextClass);\n\t\t\t\tvar r = e.prev(\".\" + b.params.slideClass).addClass(b.params.slidePrevClass);\n\t\t\t\tif (b.params.loop && 0 === r.length && b.slides.eq(-1).addClass(b.params.slidePrevClass), b.paginationContainer && b.paginationContainer.length > 0) {\n\t\t\t\t\tvar i, s = b.params.loop ? Math.ceil((b.slides.length - 2 * b.loopedSlides) / b.params.slidesPerGroup) : b.snapGrid.length;\n\t\t\t\t\tif (b.params.loop ? (i = Math.ceil((b.activeIndex - b.loopedSlides) / b.params.slidesPerGroup), i > b.slides.length - 1 - 2 * b.loopedSlides && (i -= b.slides.length - 2 * b.loopedSlides), i > s - 1 && (i -= s), 0 > i && \"bullets\" !== b.params.paginationType && (i = s + i)) : i = \"undefined\" != typeof b.snapIndex ? b.snapIndex : b.activeIndex || 0, \"bullets\" === b.params.paginationType && b.bullets && b.bullets.length > 0 && (b.bullets.removeClass(b.params.bulletActiveClass), b.paginationContainer.length > 1 ? b.bullets.each(function() {\n\t\t\t\t\t\t\ta(this).index() === i && a(this).addClass(b.params.bulletActiveClass)\n\t\t\t\t\t\t}) : b.bullets.eq(i).addClass(b.params.bulletActiveClass)), \"fraction\" === b.params.paginationType && (b.paginationContainer.find(\".\" + b.params.paginationCurrentClass).text(i + 1), b.paginationContainer.find(\".\" + b.params.paginationTotalClass).text(s)), \"progress\" === b.params.paginationType) {\n\t\t\t\t\t\tvar n = (i + 1) / s,\n\t\t\t\t\t\t\to = n,\n\t\t\t\t\t\t\tl = 1;\n\t\t\t\t\t\tb.isHorizontal() || (l = n, o = 1), b.paginationContainer.find(\".\" + b.params.paginationProgressbarClass).transform(\"translate3d(0,0,0) scaleX(\" + o + \") scaleY(\" + l + \")\").transition(b.params.speed)\n\t\t\t\t\t}\n\t\t\t\t\t\"custom\" === b.params.paginationType && b.params.paginationCustomRender && (b.paginationContainer.html(b.params.paginationCustomRender(b, i + 1, s)), b.emit(\"onPaginationRendered\", b, b.paginationContainer[0]))\n\t\t\t\t}\n\t\t\t\tb.params.loop || (b.params.prevButton && b.prevButton && b.prevButton.length > 0 && (b.isBeginning ? (b.prevButton.addClass(b.params.buttonDisabledClass), b.params.a11y && b.a11y && b.a11y.disable(b.prevButton)) : (b.prevButton.removeClass(b.params.buttonDisabledClass), b.params.a11y && b.a11y && b.a11y.enable(b.prevButton))), b.params.nextButton && b.nextButton && b.nextButton.length > 0 && (b.isEnd ? (b.nextButton.addClass(b.params.buttonDisabledClass), b.params.a11y && b.a11y && b.a11y.disable(b.nextButton)) : (b.nextButton.removeClass(b.params.buttonDisabledClass), b.params.a11y && b.a11y && b.a11y.enable(b.nextButton))))\n\t\t\t}, b.updatePagination = function() {\n\t\t\t\tif (b.params.pagination && b.paginationContainer && b.paginationContainer.length > 0) {\n\t\t\t\t\tvar e = \"\";\n\t\t\t\t\tif (\"bullets\" === b.params.paginationType) {\n\t\t\t\t\t\tfor (var a = b.params.loop ? Math.ceil((b.slides.length - 2 * b.loopedSlides) / b.params.slidesPerGroup) : b.snapGrid.length, t = 0; a > t; t++) e += b.params.paginationBulletRender ? b.params.paginationBulletRender(t, b.params.bulletClass) : \"<\" + b.params.paginationElement + ' class=\"' + b.params.bulletClass + '\"></' + b.params.paginationElement + \">\";\n\t\t\t\t\t\tb.paginationContainer.html(e), b.bullets = b.paginationContainer.find(\".\" + b.params.bulletClass), b.params.paginationClickable && b.params.a11y && b.a11y && b.a11y.initPagination()\n\t\t\t\t\t}\n\t\t\t\t\t\"fraction\" === b.params.paginationType && (e = b.params.paginationFractionRender ? b.params.paginationFractionRender(b, b.params.paginationCurrentClass, b.params.paginationTotalClass) : '<span class=\"' + b.params.paginationCurrentClass + '\"></span> / <span class=\"' + b.params.paginationTotalClass + '\"></span>', b.paginationContainer.html(e)), \"progress\" === b.params.paginationType && (e = b.params.paginationProgressRender ? b.params.paginationProgressRender(b, b.params.paginationProgressbarClass) : '<span class=\"' + b.params.paginationProgressbarClass + '\"></span>', b.paginationContainer.html(e)), \"custom\" !== b.params.paginationType && b.emit(\"onPaginationRendered\", b, b.paginationContainer[0])\n\t\t\t\t}\n\t\t\t}, b.update = function(e) {\n\t\t\t\tfunction a() {\n\t\t\t\t\tr = Math.min(Math.max(b.translate, b.maxTranslate()), b.minTranslate()), b.setWrapperTranslate(r), b.updateActiveIndex(), b.updateClasses()\n\t\t\t\t}\n\t\t\t\tif (b.updateContainerSize(), b.updateSlidesSize(), b.updateProgress(), b.updatePagination(), b.updateClasses(), b.params.scrollbar && b.scrollbar && b.scrollbar.set(), e) {\n\t\t\t\t\tvar t, r;\n\t\t\t\t\tb.controller && b.controller.spline && (b.controller.spline = void 0), b.params.freeMode ? (a(), b.params.autoHeight && b.updateAutoHeight()) : (t = (\"auto\" === b.params.slidesPerView || b.params.slidesPerView > 1) && b.isEnd && !b.params.centeredSlides ? b.slideTo(b.slides.length - 1, 0, !1, !0) : b.slideTo(b.activeIndex, 0, !1, !0), t || a())\n\t\t\t\t} else b.params.autoHeight && b.updateAutoHeight()\n\t\t\t}, b.onResize = function(e) {\n\t\t\t\tb.params.breakpoints && b.setBreakpoint();\n\t\t\t\tvar a = b.params.allowSwipeToPrev,\n\t\t\t\t\tt = b.params.allowSwipeToNext;\n\t\t\t\tb.params.allowSwipeToPrev = b.params.allowSwipeToNext = !0, b.updateContainerSize(), b.updateSlidesSize(), (\"auto\" === b.params.slidesPerView || b.params.freeMode || e) && b.updatePagination(), b.params.scrollbar && b.scrollbar && b.scrollbar.set(), b.controller && b.controller.spline && (b.controller.spline = void 0);\n\t\t\t\tvar r = !1;\n\t\t\t\tif (b.params.freeMode) {\n\t\t\t\t\tvar i = Math.min(Math.max(b.translate, b.maxTranslate()), b.minTranslate());\n\t\t\t\t\tb.setWrapperTranslate(i), b.updateActiveIndex(), b.updateClasses(), b.params.autoHeight && b.updateAutoHeight()\n\t\t\t\t} else b.updateClasses(), r = (\"auto\" === b.params.slidesPerView || b.params.slidesPerView > 1) && b.isEnd && !b.params.centeredSlides ? b.slideTo(b.slides.length - 1, 0, !1, !0) : b.slideTo(b.activeIndex, 0, !1, !0);\n\t\t\t\tb.params.lazyLoading && !r && b.lazy && b.lazy.load(), b.params.allowSwipeToPrev = a, b.params.allowSwipeToNext = t\n\t\t\t};\n\t\t\tvar T = [\"mousedown\", \"mousemove\", \"mouseup\"];\n\t\t\twindow.navigator.pointerEnabled ? T = [\"pointerdown\", \"pointermove\", \"pointerup\"] : window.navigator.msPointerEnabled && (T = [\"MSPointerDown\", \"MSPointerMove\", \"MSPointerUp\"]), b.touchEvents = {\n\t\t\t\tstart: b.support.touch || !b.params.simulateTouch ? \"touchstart\" : T[0],\n\t\t\t\tmove: b.support.touch || !b.params.simulateTouch ? \"touchmove\" : T[1],\n\t\t\t\tend: b.support.touch || !b.params.simulateTouch ? \"touchend\" : T[2]\n\t\t\t}, (window.navigator.pointerEnabled || window.navigator.msPointerEnabled) && (\"container\" === b.params.touchEventsTarget ? b.container : b.wrapper).addClass(\"swiper-wp8-\" + b.params.direction), b.initEvents = function(e) {\n\t\t\t\tvar a = e ? \"off\" : \"on\",\n\t\t\t\t\tt = e ? \"removeEventListener\" : \"addEventListener\",\n\t\t\t\t\tr = \"container\" === b.params.touchEventsTarget ? b.container[0] : b.wrapper[0],\n\t\t\t\t\ts = b.support.touch ? r : document,\n\t\t\t\t\tn = b.params.nested ? !0 : !1;\n\t\t\t\tb.browser.ie ? (r[t](b.touchEvents.start, b.onTouchStart, !1), s[t](b.touchEvents.move, b.onTouchMove, n), s[t](b.touchEvents.end, b.onTouchEnd, !1)) : (b.support.touch && (r[t](b.touchEvents.start, b.onTouchStart, !1), r[t](b.touchEvents.move, b.onTouchMove, n), r[t](b.touchEvents.end, b.onTouchEnd, !1)), !i.simulateTouch || b.device.ios || b.device.android || (r[t](\"mousedown\", b.onTouchStart, !1), document[t](\"mousemove\", b.onTouchMove, n), document[t](\"mouseup\", b.onTouchEnd, !1))), window[t](\"resize\", b.onResize), b.params.nextButton && b.nextButton && b.nextButton.length > 0 && (b.nextButton[a](\"click\", b.onClickNext), b.params.a11y && b.a11y && b.nextButton[a](\"keydown\", b.a11y.onEnterKey)), b.params.prevButton && b.prevButton && b.prevButton.length > 0 && (b.prevButton[a](\"click\", b.onClickPrev), b.params.a11y && b.a11y && b.prevButton[a](\"keydown\", b.a11y.onEnterKey)), b.params.pagination && b.params.paginationClickable && (b.paginationContainer[a](\"click\", \".\" + b.params.bulletClass, b.onClickIndex), b.params.a11y && b.a11y && b.paginationContainer[a](\"keydown\", \".\" + b.params.bulletClass, b.a11y.onEnterKey)), (b.params.preventClicks || b.params.preventClicksPropagation) && r[t](\"click\", b.preventClicks, !0)\n\t\t\t}, b.attachEvents = function() {\n\t\t\t\tb.initEvents()\n\t\t\t}, b.detachEvents = function() {\n\t\t\t\tb.initEvents(!0)\n\t\t\t}, b.allowClick = !0, b.preventClicks = function(e) {\n\t\t\t\tb.allowClick || (b.params.preventClicks && e.preventDefault(), b.params.preventClicksPropagation && b.animating && (e.stopPropagation(), e.stopImmediatePropagation()))\n\t\t\t}, b.onClickNext = function(e) {\n\t\t\t\te.preventDefault(), (!b.isEnd || b.params.loop) && b.slideNext()\n\t\t\t}, b.onClickPrev = function(e) {\n\t\t\t\te.preventDefault(), (!b.isBeginning || b.params.loop) && b.slidePrev()\n\t\t\t}, b.onClickIndex = function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\tvar t = a(this).index() * b.params.slidesPerGroup;\n\t\t\t\tb.params.loop && (t += b.loopedSlides), b.slideTo(t)\n\t\t\t}, b.updateClickedSlide = function(e) {\n\t\t\t\tvar t = o(e, \".\" + b.params.slideClass),\n\t\t\t\t\tr = !1;\n\t\t\t\tif (t)\n\t\t\t\t\tfor (var i = 0; i < b.slides.length; i++) b.slides[i] === t && (r = !0);\n\t\t\t\tif (!t || !r) return b.clickedSlide = void 0, void(b.clickedIndex = void 0);\n\t\t\t\tif (b.clickedSlide = t, b.clickedIndex = a(t).index(), b.params.slideToClickedSlide && void 0 !== b.clickedIndex && b.clickedIndex !== b.activeIndex) {\n\t\t\t\t\tvar s, n = b.clickedIndex;\n\t\t\t\t\tif (b.params.loop) {\n\t\t\t\t\t\tif (b.animating) return;\n\t\t\t\t\t\ts = a(b.clickedSlide).attr(\"data-swiper-slide-index\"), b.params.centeredSlides ? n < b.loopedSlides - b.params.slidesPerView / 2 || n > b.slides.length - b.loopedSlides + b.params.slidesPerView / 2 ? (b.fixLoop(), n = b.wrapper.children(\".\" + b.params.slideClass + '[data-swiper-slide-index=\"' + s + '\"]:not(.swiper-slide-duplicate)').eq(0).index(), setTimeout(function() {\n\t\t\t\t\t\t\tb.slideTo(n)\n\t\t\t\t\t\t}, 0)) : b.slideTo(n) : n > b.slides.length - b.params.slidesPerView ? (b.fixLoop(), n = b.wrapper.children(\".\" + b.params.slideClass + '[data-swiper-slide-index=\"' + s + '\"]:not(.swiper-slide-duplicate)').eq(0).index(), setTimeout(function() {\n\t\t\t\t\t\t\tb.slideTo(n)\n\t\t\t\t\t\t}, 0)) : b.slideTo(n)\n\t\t\t\t\t} else b.slideTo(n)\n\t\t\t\t}\n\t\t\t};\n\t\t\tvar S, C, z, M, E, P, k, I, L, B, D = \"input, select, textarea, button\",\n\t\t\t\tH = Date.now(),\n\t\t\t\tA = [];\n\t\t\tb.animating = !1, b.touches = {\n\t\t\t\tstartX: 0,\n\t\t\t\tstartY: 0,\n\t\t\t\tcurrentX: 0,\n\t\t\t\tcurrentY: 0,\n\t\t\t\tdiff: 0\n\t\t\t};\n\t\t\tvar G, O;\n\t\t\tif (b.onTouchStart = function(e) {\n\t\t\t\t\tif (e.originalEvent && (e = e.originalEvent), G = \"touchstart\" === e.type, G || !(\"which\" in e) || 3 !== e.which) {\n\t\t\t\t\t\tif (b.params.noSwiping && o(e, \".\" + b.params.noSwipingClass)) return void(b.allowClick = !0);\n\t\t\t\t\t\tif (!b.params.swipeHandler || o(e, b.params.swipeHandler)) {\n\t\t\t\t\t\t\tvar t = b.touches.currentX = \"touchstart\" === e.type ? e.targetTouches[0].pageX : e.pageX,\n\t\t\t\t\t\t\t\tr = b.touches.currentY = \"touchstart\" === e.type ? e.targetTouches[0].pageY : e.pageY;\n\t\t\t\t\t\t\tif (!(b.device.ios && b.params.iOSEdgeSwipeDetection && t <= b.params.iOSEdgeSwipeThreshold)) {\n\t\t\t\t\t\t\t\tif (S = !0, C = !1, z = !0, E = void 0, O = void 0, b.touches.startX = t, b.touches.startY = r, M = Date.now(), b.allowClick = !0, b.updateContainerSize(), b.swipeDirection = void 0, b.params.threshold > 0 && (I = !1), \"touchstart\" !== e.type) {\n\t\t\t\t\t\t\t\t\tvar i = !0;\n\t\t\t\t\t\t\t\t\ta(e.target).is(D) && (i = !1), document.activeElement && a(document.activeElement).is(D) && document.activeElement.blur(), i && e.preventDefault()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tb.emit(\"onTouchStart\", b, e)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, b.onTouchMove = function(e) {\n\t\t\t\t\tif (e.originalEvent && (e = e.originalEvent), !G || \"mousemove\" !== e.type) {\n\t\t\t\t\t\tif (e.preventedByNestedSwiper) return b.touches.startX = \"touchmove\" === e.type ? e.targetTouches[0].pageX : e.pageX, void(b.touches.startY = \"touchmove\" === e.type ? e.targetTouches[0].pageY : e.pageY);\n\t\t\t\t\t\tif (b.params.onlyExternal) return b.allowClick = !1, void(S && (b.touches.startX = b.touches.currentX = \"touchmove\" === e.type ? e.targetTouches[0].pageX : e.pageX, b.touches.startY = b.touches.currentY = \"touchmove\" === e.type ? e.targetTouches[0].pageY : e.pageY, M = Date.now()));\n\t\t\t\t\t\tif (G && document.activeElement && e.target === document.activeElement && a(e.target).is(D)) return C = !0, void(b.allowClick = !1);\n\t\t\t\t\t\tif (z && b.emit(\"onTouchMove\", b, e), !(e.targetTouches && e.targetTouches.length > 1)) {\n\t\t\t\t\t\t\tif (b.touches.currentX = \"touchmove\" === e.type ? e.targetTouches[0].pageX : e.pageX, b.touches.currentY = \"touchmove\" === e.type ? e.targetTouches[0].pageY : e.pageY, \"undefined\" == typeof E) {\n\t\t\t\t\t\t\t\tvar t = 180 * Math.atan2(Math.abs(b.touches.currentY - b.touches.startY), Math.abs(b.touches.currentX - b.touches.startX)) / Math.PI;\n\t\t\t\t\t\t\t\tE = b.isHorizontal() ? t > b.params.touchAngle : 90 - t > b.params.touchAngle\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (E && b.emit(\"onTouchMoveOpposite\", b, e), \"undefined\" == typeof O && b.browser.ieTouch && (b.touches.currentX !== b.touches.startX || b.touches.currentY !== b.touches.startY) && (O = !0), S) {\n\t\t\t\t\t\t\t\tif (E) return void(S = !1);\n\t\t\t\t\t\t\t\tif (O || !b.browser.ieTouch) {\n\t\t\t\t\t\t\t\t\tb.allowClick = !1, b.emit(\"onSliderMove\", b, e), e.preventDefault(), b.params.touchMoveStopPropagation && !b.params.nested && e.stopPropagation(), C || (i.loop && b.fixLoop(), k = b.getWrapperTranslate(), b.setWrapperTransition(0), b.animating && b.wrapper.trigger(\"webkitTransitionEnd transitionend oTransitionEnd MSTransitionEnd msTransitionEnd\"), b.params.autoplay && b.autoplaying && (b.params.autoplayDisableOnInteraction ? b.stopAutoplay() : b.pauseAutoplay()), B = !1, b.params.grabCursor && (b.container[0].style.cursor = \"move\", b.container[0].style.cursor = \"-webkit-grabbing\", b.container[0].style.cursor = \"-moz-grabbin\", b.container[0].style.cursor = \"grabbing\")), C = !0;\n\t\t\t\t\t\t\t\t\tvar r = b.touches.diff = b.isHorizontal() ? b.touches.currentX - b.touches.startX : b.touches.currentY - b.touches.startY;\n\t\t\t\t\t\t\t\t\tr *= b.params.touchRatio, b.rtl && (r = -r), b.swipeDirection = r > 0 ? \"prev\" : \"next\", P = r + k;\n\t\t\t\t\t\t\t\t\tvar s = !0;\n\t\t\t\t\t\t\t\t\tif (r > 0 && P > b.minTranslate() ? (s = !1, b.params.resistance && (P = b.minTranslate() - 1 + Math.pow(-b.minTranslate() + k + r, b.params.resistanceRatio))) : 0 > r && P < b.maxTranslate() && (s = !1, b.params.resistance && (P = b.maxTranslate() + 1 - Math.pow(b.maxTranslate() - k - r, b.params.resistanceRatio))),\n\t\t\t\t\t\t\t\t\t\ts && (e.preventedByNestedSwiper = !0), !b.params.allowSwipeToNext && \"next\" === b.swipeDirection && k > P && (P = k), !b.params.allowSwipeToPrev && \"prev\" === b.swipeDirection && P > k && (P = k), b.params.followFinger) {\n\t\t\t\t\t\t\t\t\t\tif (b.params.threshold > 0) {\n\t\t\t\t\t\t\t\t\t\t\tif (!(Math.abs(r) > b.params.threshold || I)) return void(P = k);\n\t\t\t\t\t\t\t\t\t\t\tif (!I) return I = !0, b.touches.startX = b.touches.currentX, b.touches.startY = b.touches.currentY, P = k, void(b.touches.diff = b.isHorizontal() ? b.touches.currentX - b.touches.startX : b.touches.currentY - b.touches.startY)\n\t\t\t\t\t\t\t\t\t\t}(b.params.freeMode || b.params.watchSlidesProgress) && b.updateActiveIndex(), b.params.freeMode && (0 === A.length && A.push({\n\t\t\t\t\t\t\t\t\t\t\tposition: b.touches[b.isHorizontal() ? \"startX\" : \"startY\"],\n\t\t\t\t\t\t\t\t\t\t\ttime: M\n\t\t\t\t\t\t\t\t\t\t}), A.push({\n\t\t\t\t\t\t\t\t\t\t\tposition: b.touches[b.isHorizontal() ? \"currentX\" : \"currentY\"],\n\t\t\t\t\t\t\t\t\t\t\ttime: (new window.Date).getTime()\n\t\t\t\t\t\t\t\t\t\t})), b.updateProgress(P), b.setWrapperTranslate(P)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, b.onTouchEnd = function(e) {\n\t\t\t\t\tif (e.originalEvent && (e = e.originalEvent), z && b.emit(\"onTouchEnd\", b, e), z = !1, S) {\n\t\t\t\t\t\tb.params.grabCursor && C && S && (b.container[0].style.cursor = \"move\", b.container[0].style.cursor = \"-webkit-grab\", b.container[0].style.cursor = \"-moz-grab\", b.container[0].style.cursor = \"grab\");\n\t\t\t\t\t\tvar t = Date.now(),\n\t\t\t\t\t\t\tr = t - M;\n\t\t\t\t\t\tif (b.allowClick && (b.updateClickedSlide(e), b.emit(\"onTap\", b, e), 300 > r && t - H > 300 && (L && clearTimeout(L), L = setTimeout(function() {\n\t\t\t\t\t\t\t\tb && (b.params.paginationHide && b.paginationContainer.length > 0 && !a(e.target).hasClass(b.params.bulletClass) && b.paginationContainer.toggleClass(b.params.paginationHiddenClass), b.emit(\"onClick\", b, e))\n\t\t\t\t\t\t\t}, 300)), 300 > r && 300 > t - H && (L && clearTimeout(L), b.emit(\"onDoubleTap\", b, e))), H = Date.now(), setTimeout(function() {\n\t\t\t\t\t\t\t\tb && (b.allowClick = !0)\n\t\t\t\t\t\t\t}, 0), !S || !C || !b.swipeDirection || 0 === b.touches.diff || P === k) return void(S = C = !1);\n\t\t\t\t\t\tS = C = !1;\n\t\t\t\t\t\tvar i;\n\t\t\t\t\t\tif (i = b.params.followFinger ? b.rtl ? b.translate : -b.translate : -P, b.params.freeMode) {\n\t\t\t\t\t\t\tif (i < -b.minTranslate()) return void b.slideTo(b.activeIndex);\n\t\t\t\t\t\t\tif (i > -b.maxTranslate()) return void(b.slides.length < b.snapGrid.length ? b.slideTo(b.snapGrid.length - 1) : b.slideTo(b.slides.length - 1));\n\t\t\t\t\t\t\tif (b.params.freeModeMomentum) {\n\t\t\t\t\t\t\t\tif (A.length > 1) {\n\t\t\t\t\t\t\t\t\tvar s = A.pop(),\n\t\t\t\t\t\t\t\t\t\tn = A.pop(),\n\t\t\t\t\t\t\t\t\t\to = s.position - n.position,\n\t\t\t\t\t\t\t\t\t\tl = s.time - n.time;\n\t\t\t\t\t\t\t\t\tb.velocity = o / l, b.velocity = b.velocity / 2, Math.abs(b.velocity) < b.params.freeModeMinimumVelocity && (b.velocity = 0), (l > 150 || (new window.Date).getTime() - s.time > 300) && (b.velocity = 0)\n\t\t\t\t\t\t\t\t} else b.velocity = 0;\n\t\t\t\t\t\t\t\tA.length = 0;\n\t\t\t\t\t\t\t\tvar p = 1e3 * b.params.freeModeMomentumRatio,\n\t\t\t\t\t\t\t\t\td = b.velocity * p,\n\t\t\t\t\t\t\t\t\tu = b.translate + d;\n\t\t\t\t\t\t\t\tb.rtl && (u = -u);\n\t\t\t\t\t\t\t\tvar c, m = !1,\n\t\t\t\t\t\t\t\t\th = 20 * Math.abs(b.velocity) * b.params.freeModeMomentumBounceRatio;\n\t\t\t\t\t\t\t\tif (u < b.maxTranslate()) b.params.freeModeMomentumBounce ? (u + b.maxTranslate() < -h && (u = b.maxTranslate() - h), c = b.maxTranslate(), m = !0, B = !0) : u = b.maxTranslate();\n\t\t\t\t\t\t\t\telse if (u > b.minTranslate()) b.params.freeModeMomentumBounce ? (u - b.minTranslate() > h && (u = b.minTranslate() + h), c = b.minTranslate(), m = !0, B = !0) : u = b.minTranslate();\n\t\t\t\t\t\t\t\telse if (b.params.freeModeSticky) {\n\t\t\t\t\t\t\t\t\tvar f, g = 0;\n\t\t\t\t\t\t\t\t\tfor (g = 0; g < b.snapGrid.length; g += 1)\n\t\t\t\t\t\t\t\t\t\tif (b.snapGrid[g] > -u) {\n\t\t\t\t\t\t\t\t\t\t\tf = g;\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tu = Math.abs(b.snapGrid[f] - u) < Math.abs(b.snapGrid[f - 1] - u) || \"next\" === b.swipeDirection ? b.snapGrid[f] : b.snapGrid[f - 1], b.rtl || (u = -u)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (0 !== b.velocity) p = b.rtl ? Math.abs((-u - b.translate) / b.velocity) : Math.abs((u - b.translate) / b.velocity);\n\t\t\t\t\t\t\t\telse if (b.params.freeModeSticky) return void b.slideReset();\n\t\t\t\t\t\t\t\tb.params.freeModeMomentumBounce && m ? (b.updateProgress(c), b.setWrapperTransition(p), b.setWrapperTranslate(u), b.onTransitionStart(), b.animating = !0, b.wrapper.transitionEnd(function() {\n\t\t\t\t\t\t\t\t\tb && B && (b.emit(\"onMomentumBounce\", b), b.setWrapperTransition(b.params.speed), b.setWrapperTranslate(c), b.wrapper.transitionEnd(function() {\n\t\t\t\t\t\t\t\t\t\tb && b.onTransitionEnd()\n\t\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t\t})) : b.velocity ? (b.updateProgress(u), b.setWrapperTransition(p), b.setWrapperTranslate(u), b.onTransitionStart(), b.animating || (b.animating = !0, b.wrapper.transitionEnd(function() {\n\t\t\t\t\t\t\t\t\tb && b.onTransitionEnd()\n\t\t\t\t\t\t\t\t}))) : b.updateProgress(u), b.updateActiveIndex()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn void((!b.params.freeModeMomentum || r >= b.params.longSwipesMs) && (b.updateProgress(), b.updateActiveIndex()))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar v, w = 0,\n\t\t\t\t\t\t\ty = b.slidesSizesGrid[0];\n\t\t\t\t\t\tfor (v = 0; v < b.slidesGrid.length; v += b.params.slidesPerGroup) \"undefined\" != typeof b.slidesGrid[v + b.params.slidesPerGroup] ? i >= b.slidesGrid[v] && i < b.slidesGrid[v + b.params.slidesPerGroup] && (w = v, y = b.slidesGrid[v + b.params.slidesPerGroup] - b.slidesGrid[v]) : i >= b.slidesGrid[v] && (w = v, y = b.slidesGrid[b.slidesGrid.length - 1] - b.slidesGrid[b.slidesGrid.length - 2]);\n\t\t\t\t\t\tvar x = (i - b.slidesGrid[w]) / y;\n\t\t\t\t\t\tif (r > b.params.longSwipesMs) {\n\t\t\t\t\t\t\tif (!b.params.longSwipes) return void b.slideTo(b.activeIndex);\n\t\t\t\t\t\t\t\"next\" === b.swipeDirection && (x >= b.params.longSwipesRatio ? b.slideTo(w + b.params.slidesPerGroup) : b.slideTo(w)), \"prev\" === b.swipeDirection && (x > 1 - b.params.longSwipesRatio ? b.slideTo(w + b.params.slidesPerGroup) : b.slideTo(w))\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (!b.params.shortSwipes) return void b.slideTo(b.activeIndex);\n\t\t\t\t\t\t\t\"next\" === b.swipeDirection && b.slideTo(w + b.params.slidesPerGroup), \"prev\" === b.swipeDirection && b.slideTo(w)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, b._slideTo = function(e, a) {\n\t\t\t\t\treturn b.slideTo(e, a, !0, !0)\n\t\t\t\t}, b.slideTo = function(e, a, t, r) {\n\t\t\t\t\t\"undefined\" == typeof t && (t = !0), \"undefined\" == typeof e && (e = 0), 0 > e && (e = 0), b.snapIndex = Math.floor(e / b.params.slidesPerGroup), b.snapIndex >= b.snapGrid.length && (b.snapIndex = b.snapGrid.length - 1);\n\t\t\t\t\tvar i = -b.snapGrid[b.snapIndex];\n\t\t\t\t\tb.params.autoplay && b.autoplaying && (r || !b.params.autoplayDisableOnInteraction ? b.pauseAutoplay(a) : b.stopAutoplay()), b.updateProgress(i);\n\t\t\t\t\tfor (var s = 0; s < b.slidesGrid.length; s++) - Math.floor(100 * i) >= Math.floor(100 * b.slidesGrid[s]) && (e = s);\n\t\t\t\t\treturn !b.params.allowSwipeToNext && i < b.translate && i < b.minTranslate() ? !1 : !b.params.allowSwipeToPrev && i > b.translate && i > b.maxTranslate() && (b.activeIndex || 0) !== e ? !1 : (\"undefined\" == typeof a && (a = b.params.speed), b.previousIndex = b.activeIndex || 0, b.activeIndex = e, b.rtl && -i === b.translate || !b.rtl && i === b.translate ? (b.params.autoHeight && b.updateAutoHeight(), b.updateClasses(), \"slide\" !== b.params.effect && b.setWrapperTranslate(i), !1) : (b.updateClasses(), b.onTransitionStart(t), 0 === a ? (b.setWrapperTranslate(i), b.setWrapperTransition(0), b.onTransitionEnd(t)) : (b.setWrapperTranslate(i), b.setWrapperTransition(a), b.animating || (b.animating = !0, b.wrapper.transitionEnd(function() {\n\t\t\t\t\t\tb && b.onTransitionEnd(t)\n\t\t\t\t\t}))), !0))\n\t\t\t\t}, b.onTransitionStart = function(e) {\n\t\t\t\t\t\"undefined\" == typeof e && (e = !0), b.params.autoHeight && b.updateAutoHeight(), b.lazy && b.lazy.onTransitionStart(), e && (b.emit(\"onTransitionStart\", b), b.activeIndex !== b.previousIndex && (b.emit(\"onSlideChangeStart\", b), b.activeIndex > b.previousIndex ? b.emit(\"onSlideNextStart\", b) : b.emit(\"onSlidePrevStart\", b)))\n\t\t\t\t}, b.onTransitionEnd = function(e) {\n\t\t\t\t\tb.animating = !1, b.setWrapperTransition(0), \"undefined\" == typeof e && (e = !0), b.lazy && b.lazy.onTransitionEnd(), e && (b.emit(\"onTransitionEnd\", b), b.activeIndex !== b.previousIndex && (b.emit(\"onSlideChangeEnd\", b), b.activeIndex > b.previousIndex ? b.emit(\"onSlideNextEnd\", b) : b.emit(\"onSlidePrevEnd\", b))), b.params.hashnav && b.hashnav && b.hashnav.setHash()\n\t\t\t\t}, b.slideNext = function(e, a, t) {\n\t\t\t\t\tif (b.params.loop) {\n\t\t\t\t\t\tif (b.animating) return !1;\n\t\t\t\t\t\tb.fixLoop();\n\t\t\t\t\t\tb.container[0].clientLeft;\n\t\t\t\t\t\treturn b.slideTo(b.activeIndex + b.params.slidesPerGroup, a, e, t)\n\t\t\t\t\t}\n\t\t\t\t\treturn b.slideTo(b.activeIndex + b.params.slidesPerGroup, a, e, t)\n\t\t\t\t}, b._slideNext = function(e) {\n\t\t\t\t\treturn b.slideNext(!0, e, !0)\n\t\t\t\t}, b.slidePrev = function(e, a, t) {\n\t\t\t\t\tif (b.params.loop) {\n\t\t\t\t\t\tif (b.animating) return !1;\n\t\t\t\t\t\tb.fixLoop();\n\t\t\t\t\t\tb.container[0].clientLeft;\n\t\t\t\t\t\treturn b.slideTo(b.activeIndex - 1, a, e, t)\n\t\t\t\t\t}\n\t\t\t\t\treturn b.slideTo(b.activeIndex - 1, a, e, t)\n\t\t\t\t}, b._slidePrev = function(e) {\n\t\t\t\t\treturn b.slidePrev(!0, e, !0)\n\t\t\t\t}, b.slideReset = function(e, a, t) {\n\t\t\t\t\treturn b.slideTo(b.activeIndex, a, e)\n\t\t\t\t}, b.setWrapperTransition = function(e, a) {\n\t\t\t\t\tb.wrapper.transition(e), \"slide\" !== b.params.effect && b.effects[b.params.effect] && b.effects[b.params.effect].setTransition(e), b.params.parallax && b.parallax && b.parallax.setTransition(e), b.params.scrollbar && b.scrollbar && b.scrollbar.setTransition(e), b.params.control && b.controller && b.controller.setTransition(e, a), b.emit(\"onSetTransition\", b, e)\n\t\t\t\t}, b.setWrapperTranslate = function(e, a, t) {\n\t\t\t\t\tvar r = 0,\n\t\t\t\t\t\ti = 0,\n\t\t\t\t\t\tn = 0;\n\t\t\t\t\tb.isHorizontal() ? r = b.rtl ? -e : e : i = e, b.params.roundLengths && (r = s(r), i = s(i)), b.params.virtualTranslate || (b.support.transforms3d ? b.wrapper.transform(\"translate3d(\" + r + \"px, \" + i + \"px, \" + n + \"px)\") : b.wrapper.transform(\"translate(\" + r + \"px, \" + i + \"px)\")), b.translate = b.isHorizontal() ? r : i;\n\t\t\t\t\tvar o, l = b.maxTranslate() - b.minTranslate();\n\t\t\t\t\to = 0 === l ? 0 : (e - b.minTranslate()) / l, o !== b.progress && b.updateProgress(e), a && b.updateActiveIndex(), \"slide\" !== b.params.effect && b.effects[b.params.effect] && b.effects[b.params.effect].setTranslate(b.translate), b.params.parallax && b.parallax && b.parallax.setTranslate(b.translate), b.params.scrollbar && b.scrollbar && b.scrollbar.setTranslate(b.translate), b.params.control && b.controller && b.controller.setTranslate(b.translate, t), b.emit(\"onSetTranslate\", b, b.translate)\n\t\t\t\t}, b.getTranslate = function(e, a) {\n\t\t\t\t\tvar t, r, i, s;\n\t\t\t\t\treturn \"undefined\" == typeof a && (a = \"x\"), b.params.virtualTranslate ? b.rtl ? -b.translate : b.translate : (i = window.getComputedStyle(e, null), window.WebKitCSSMatrix ? (r = i.transform || i.webkitTransform, r.split(\",\").length > 6 && (r = r.split(\", \").map(function(e) {\n\t\t\t\t\t\treturn e.replace(\",\", \".\")\n\t\t\t\t\t}).join(\", \")), s = new window.WebKitCSSMatrix(\"none\" === r ? \"\" : r)) : (s = i.MozTransform || i.OTransform || i.MsTransform || i.msTransform || i.transform || i.getPropertyValue(\"transform\").replace(\"translate(\", \"matrix(1, 0, 0, 1,\"), t = s.toString().split(\",\")), \"x\" === a && (r = window.WebKitCSSMatrix ? s.m41 : 16 === t.length ? parseFloat(t[12]) : parseFloat(t[4])), \"y\" === a && (r = window.WebKitCSSMatrix ? s.m42 : 16 === t.length ? parseFloat(t[13]) : parseFloat(t[5])), b.rtl && r && (r = -r), r || 0)\n\t\t\t\t}, b.getWrapperTranslate = function(e) {\n\t\t\t\t\treturn \"undefined\" == typeof e && (e = b.isHorizontal() ? \"x\" : \"y\"), b.getTranslate(b.wrapper[0], e)\n\t\t\t\t}, b.observers = [], b.initObservers = function() {\n\t\t\t\t\tif (b.params.observeParents)\n\t\t\t\t\t\tfor (var e = b.container.parents(), a = 0; a < e.length; a++) l(e[a]);\n\t\t\t\t\tl(b.container[0], {\n\t\t\t\t\t\tchildList: !1\n\t\t\t\t\t}), l(b.wrapper[0], {\n\t\t\t\t\t\tattributes: !1\n\t\t\t\t\t})\n\t\t\t\t}, b.disconnectObservers = function() {\n\t\t\t\t\tfor (var e = 0; e < b.observers.length; e++) b.observers[e].disconnect();\n\t\t\t\t\tb.observers = []\n\t\t\t\t}, b.createLoop = function() {\n\t\t\t\t\tb.wrapper.children(\".\" + b.params.slideClass + \".\" + b.params.slideDuplicateClass).remove();\n\t\t\t\t\tvar e = b.wrapper.children(\".\" + b.params.slideClass);\n\t\t\t\t\t\"auto\" !== b.params.slidesPerView || b.params.loopedSlides || (b.params.loopedSlides = e.length), b.loopedSlides = parseInt(b.params.loopedSlides || b.params.slidesPerView, 10), b.loopedSlides = b.loopedSlides + b.params.loopAdditionalSlides, b.loopedSlides > e.length && (b.loopedSlides = e.length);\n\t\t\t\t\tvar t, r = [],\n\t\t\t\t\t\ti = [];\n\t\t\t\t\tfor (e.each(function(t, s) {\n\t\t\t\t\t\t\tvar n = a(this);\n\t\t\t\t\t\t\tt < b.loopedSlides && i.push(s), t < e.length && t >= e.length - b.loopedSlides && r.push(s), n.attr(\"data-swiper-slide-index\", t)\n\t\t\t\t\t\t}), t = 0; t < i.length; t++) b.wrapper.append(a(i[t].cloneNode(!0)).addClass(b.params.slideDuplicateClass));\n\t\t\t\t\tfor (t = r.length - 1; t >= 0; t--) b.wrapper.prepend(a(r[t].cloneNode(!0)).addClass(b.params.slideDuplicateClass))\n\t\t\t\t}, b.destroyLoop = function() {\n\t\t\t\t\tb.wrapper.children(\".\" + b.params.slideClass + \".\" + b.params.slideDuplicateClass).remove(), b.slides.removeAttr(\"data-swiper-slide-index\")\n\t\t\t\t}, b.reLoop = function(e) {\n\t\t\t\t\tvar a = b.activeIndex - b.loopedSlides;\n\t\t\t\t\tb.destroyLoop(), b.createLoop(), b.updateSlidesSize(), e && b.slideTo(a + b.loopedSlides, 0, !1)\n\t\t\t\t}, b.fixLoop = function() {\n\t\t\t\t\tvar e;\n\t\t\t\t\tb.activeIndex < b.loopedSlides ? (e = b.slides.length - 3 * b.loopedSlides + b.activeIndex, e += b.loopedSlides, b.slideTo(e, 0, !1, !0)) : (\"auto\" === b.params.slidesPerView && b.activeIndex >= 2 * b.loopedSlides || b.activeIndex > b.slides.length - 2 * b.params.slidesPerView) && (e = -b.slides.length + b.activeIndex + b.loopedSlides, e += b.loopedSlides, b.slideTo(e, 0, !1, !0))\n\t\t\t\t}, b.appendSlide = function(e) {\n\t\t\t\t\tif (b.params.loop && b.destroyLoop(), \"object\" == typeof e && e.length)\n\t\t\t\t\t\tfor (var a = 0; a < e.length; a++) e[a] && b.wrapper.append(e[a]);\n\t\t\t\t\telse b.wrapper.append(e);\n\t\t\t\t\tb.params.loop && b.createLoop(), b.params.observer && b.support.observer || b.update(!0)\n\t\t\t\t}, b.prependSlide = function(e) {\n\t\t\t\t\tb.params.loop && b.destroyLoop();\n\t\t\t\t\tvar a = b.activeIndex + 1;\n\t\t\t\t\tif (\"object\" == typeof e && e.length) {\n\t\t\t\t\t\tfor (var t = 0; t < e.length; t++) e[t] && b.wrapper.prepend(e[t]);\n\t\t\t\t\t\ta = b.activeIndex + e.length\n\t\t\t\t\t} else b.wrapper.prepend(e);\n\t\t\t\t\tb.params.loop && b.createLoop(), b.params.observer && b.support.observer || b.update(!0), b.slideTo(a, 0, !1)\n\t\t\t\t}, b.removeSlide = function(e) {\n\t\t\t\t\tb.params.loop && (b.destroyLoop(), b.slides = b.wrapper.children(\".\" + b.params.slideClass));\n\t\t\t\t\tvar a, t = b.activeIndex;\n\t\t\t\t\tif (\"object\" == typeof e && e.length) {\n\t\t\t\t\t\tfor (var r = 0; r < e.length; r++) a = e[r], b.slides[a] && b.slides.eq(a).remove(), t > a && t--;\n\t\t\t\t\t\tt = Math.max(t, 0)\n\t\t\t\t\t} else a = e, b.slides[a] && b.slides.eq(a).remove(), t > a && t--, t = Math.max(t, 0);\n\t\t\t\t\tb.params.loop && b.createLoop(), b.params.observer && b.support.observer || b.update(!0), b.params.loop ? b.slideTo(t + b.loopedSlides, 0, !1) : b.slideTo(t, 0, !1)\n\t\t\t\t}, b.removeAllSlides = function() {\n\t\t\t\t\tfor (var e = [], a = 0; a < b.slides.length; a++) e.push(a);\n\t\t\t\t\tb.removeSlide(e)\n\t\t\t\t}, b.effects = {\n\t\t\t\t\tfade: {\n\t\t\t\t\t\tsetTranslate: function() {\n\t\t\t\t\t\t\tfor (var e = 0; e < b.slides.length; e++) {\n\t\t\t\t\t\t\t\tvar a = b.slides.eq(e),\n\t\t\t\t\t\t\t\t\tt = a[0].swiperSlideOffset,\n\t\t\t\t\t\t\t\t\tr = -t;\n\t\t\t\t\t\t\t\tb.params.virtualTranslate || (r -= b.translate);\n\t\t\t\t\t\t\t\tvar i = 0;\n\t\t\t\t\t\t\t\tb.isHorizontal() || (i = r, r = 0);\n\t\t\t\t\t\t\t\tvar s = b.params.fade.crossFade ? Math.max(1 - Math.abs(a[0].progress), 0) : 1 + Math.min(Math.max(a[0].progress, -1), 0);\n\t\t\t\t\t\t\t\ta.css({\n\t\t\t\t\t\t\t\t\topacity: s\n\t\t\t\t\t\t\t\t}).transform(\"translate3d(\" + r + \"px, \" + i + \"px, 0px)\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsetTransition: function(e) {\n\t\t\t\t\t\t\tif (b.slides.transition(e), b.params.virtualTranslate && 0 !== e) {\n\t\t\t\t\t\t\t\tvar a = !1;\n\t\t\t\t\t\t\t\tb.slides.transitionEnd(function() {\n\t\t\t\t\t\t\t\t\tif (!a && b) {\n\t\t\t\t\t\t\t\t\t\ta = !0, b.animating = !1;\n\t\t\t\t\t\t\t\t\t\tfor (var e = [\"webkitTransitionEnd\", \"transitionend\", \"oTransitionEnd\", \"MSTransitionEnd\", \"msTransitionEnd\"], t = 0; t < e.length; t++) b.wrapper.trigger(e[t])\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tflip: {\n\t\t\t\t\t\tsetTranslate: function() {\n\t\t\t\t\t\t\tfor (var e = 0; e < b.slides.length; e++) {\n\t\t\t\t\t\t\t\tvar t = b.slides.eq(e),\n\t\t\t\t\t\t\t\t\tr = t[0].progress;\n\t\t\t\t\t\t\t\tb.params.flip.limitRotation && (r = Math.max(Math.min(t[0].progress, 1), -1));\n\t\t\t\t\t\t\t\tvar i = t[0].swiperSlideOffset,\n\t\t\t\t\t\t\t\t\ts = -180 * r,\n\t\t\t\t\t\t\t\t\tn = s,\n\t\t\t\t\t\t\t\t\to = 0,\n\t\t\t\t\t\t\t\t\tl = -i,\n\t\t\t\t\t\t\t\t\tp = 0;\n\t\t\t\t\t\t\t\tif (b.isHorizontal() ? b.rtl && (n = -n) : (p = l, l = 0, o = -n, n = 0), t[0].style.zIndex = -Math.abs(Math.round(r)) + b.slides.length, b.params.flip.slideShadows) {\n\t\t\t\t\t\t\t\t\tvar d = b.isHorizontal() ? t.find(\".swiper-slide-shadow-left\") : t.find(\".swiper-slide-shadow-top\"),\n\t\t\t\t\t\t\t\t\t\tu = b.isHorizontal() ? t.find(\".swiper-slide-shadow-right\") : t.find(\".swiper-slide-shadow-bottom\");\n\t\t\t\t\t\t\t\t\t0 === d.length && (d = a('<div class=\"swiper-slide-shadow-' + (b.isHorizontal() ? \"left\" : \"top\") + '\"></div>'), t.append(d)), 0 === u.length && (u = a('<div class=\"swiper-slide-shadow-' + (b.isHorizontal() ? \"right\" : \"bottom\") + '\"></div>'), t.append(u)), d.length && (d[0].style.opacity = Math.max(-r, 0)), u.length && (u[0].style.opacity = Math.max(r, 0))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tt.transform(\"translate3d(\" + l + \"px, \" + p + \"px, 0px) rotateX(\" + o + \"deg) rotateY(\" + n + \"deg)\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsetTransition: function(e) {\n\t\t\t\t\t\t\tif (b.slides.transition(e).find(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").transition(e), b.params.virtualTranslate && 0 !== e) {\n\t\t\t\t\t\t\t\tvar t = !1;\n\t\t\t\t\t\t\t\tb.slides.eq(b.activeIndex).transitionEnd(function() {\n\t\t\t\t\t\t\t\t\tif (!t && b && a(this).hasClass(b.params.slideActiveClass)) {\n\t\t\t\t\t\t\t\t\t\tt = !0, b.animating = !1;\n\t\t\t\t\t\t\t\t\t\tfor (var e = [\"webkitTransitionEnd\", \"transitionend\", \"oTransitionEnd\", \"MSTransitionEnd\", \"msTransitionEnd\"], r = 0; r < e.length; r++) b.wrapper.trigger(e[r])\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tcube: {\n\t\t\t\t\t\tsetTranslate: function() {\n\t\t\t\t\t\t\tvar e, t = 0;\n\t\t\t\t\t\t\tb.params.cube.shadow && (b.isHorizontal() ? (e = b.wrapper.find(\".swiper-cube-shadow\"), 0 === e.length && (e = a('<div class=\"swiper-cube-shadow\"></div>'), b.wrapper.append(e)), e.css({\n\t\t\t\t\t\t\t\theight: b.width + \"px\"\n\t\t\t\t\t\t\t})) : (e = b.container.find(\".swiper-cube-shadow\"), 0 === e.length && (e = a('<div class=\"swiper-cube-shadow\"></div>'), b.container.append(e))));\n\t\t\t\t\t\t\tfor (var r = 0; r < b.slides.length; r++) {\n\t\t\t\t\t\t\t\tvar i = b.slides.eq(r),\n\t\t\t\t\t\t\t\t\ts = 90 * r,\n\t\t\t\t\t\t\t\t\tn = Math.floor(s / 360);\n\t\t\t\t\t\t\t\tb.rtl && (s = -s, n = Math.floor(-s / 360));\n\t\t\t\t\t\t\t\tvar o = Math.max(Math.min(i[0].progress, 1), -1),\n\t\t\t\t\t\t\t\t\tl = 0,\n\t\t\t\t\t\t\t\t\tp = 0,\n\t\t\t\t\t\t\t\t\td = 0;\n\t\t\t\t\t\t\t\tr % 4 === 0 ? (l = 4 * -n * b.size, d = 0) : (r - 1) % 4 === 0 ? (l = 0, d = 4 * -n * b.size) : (r - 2) % 4 === 0 ? (l = b.size + 4 * n * b.size, d = b.size) : (r - 3) % 4 === 0 && (l = -b.size, d = 3 * b.size + 4 * b.size * n), b.rtl && (l = -l), b.isHorizontal() || (p = l, l = 0);\n\t\t\t\t\t\t\t\tvar u = \"rotateX(\" + (b.isHorizontal() ? 0 : -s) + \"deg) rotateY(\" + (b.isHorizontal() ? s : 0) + \"deg) translate3d(\" + l + \"px, \" + p + \"px, \" + d + \"px)\";\n\t\t\t\t\t\t\t\tif (1 >= o && o > -1 && (t = 90 * r + 90 * o, b.rtl && (t = 90 * -r - 90 * o)), i.transform(u), b.params.cube.slideShadows) {\n\t\t\t\t\t\t\t\t\tvar c = b.isHorizontal() ? i.find(\".swiper-slide-shadow-left\") : i.find(\".swiper-slide-shadow-top\"),\n\t\t\t\t\t\t\t\t\t\tm = b.isHorizontal() ? i.find(\".swiper-slide-shadow-right\") : i.find(\".swiper-slide-shadow-bottom\");\n\t\t\t\t\t\t\t\t\t0 === c.length && (c = a('<div class=\"swiper-slide-shadow-' + (b.isHorizontal() ? \"left\" : \"top\") + '\"></div>'), i.append(c)), 0 === m.length && (m = a('<div class=\"swiper-slide-shadow-' + (b.isHorizontal() ? \"right\" : \"bottom\") + '\"></div>'), i.append(m)), c.length && (c[0].style.opacity = Math.max(-o, 0)), m.length && (m[0].style.opacity = Math.max(o, 0))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (b.wrapper.css({\n\t\t\t\t\t\t\t\t\t\"-webkit-transform-origin\": \"50% 50% -\" + b.size / 2 + \"px\",\n\t\t\t\t\t\t\t\t\t\"-moz-transform-origin\": \"50% 50% -\" + b.size / 2 + \"px\",\n\t\t\t\t\t\t\t\t\t\"-ms-transform-origin\": \"50% 50% -\" + b.size / 2 + \"px\",\n\t\t\t\t\t\t\t\t\t\"transform-origin\": \"50% 50% -\" + b.size / 2 + \"px\"\n\t\t\t\t\t\t\t\t}), b.params.cube.shadow)\n\t\t\t\t\t\t\t\tif (b.isHorizontal()) e.transform(\"translate3d(0px, \" + (b.width / 2 + b.params.cube.shadowOffset) + \"px, \" + -b.width / 2 + \"px) rotateX(90deg) rotateZ(0deg) scale(\" + b.params.cube.shadowScale + \")\");\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tvar h = Math.abs(t) - 90 * Math.floor(Math.abs(t) / 90),\n\t\t\t\t\t\t\t\t\t\tf = 1.5 - (Math.sin(2 * h * Math.PI / 360) / 2 + Math.cos(2 * h * Math.PI / 360) / 2),\n\t\t\t\t\t\t\t\t\t\tg = b.params.cube.shadowScale,\n\t\t\t\t\t\t\t\t\t\tv = b.params.cube.shadowScale / f,\n\t\t\t\t\t\t\t\t\t\tw = b.params.cube.shadowOffset;\n\t\t\t\t\t\t\t\t\te.transform(\"scale3d(\" + g + \", 1, \" + v + \") translate3d(0px, \" + (b.height / 2 + w) + \"px, \" + -b.height / 2 / v + \"px) rotateX(-90deg)\")\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar y = b.isSafari || b.isUiWebView ? -b.size / 2 : 0;\n\t\t\t\t\t\t\tb.wrapper.transform(\"translate3d(0px,0,\" + y + \"px) rotateX(\" + (b.isHorizontal() ? 0 : t) + \"deg) rotateY(\" + (b.isHorizontal() ? -t : 0) + \"deg)\")\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsetTransition: function(e) {\n\t\t\t\t\t\t\tb.slides.transition(e).find(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").transition(e), b.params.cube.shadow && !b.isHorizontal() && b.container.find(\".swiper-cube-shadow\").transition(e)\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tcoverflow: {\n\t\t\t\t\t\tsetTranslate: function() {\n\t\t\t\t\t\t\tfor (var e = b.translate, t = b.isHorizontal() ? -e + b.width / 2 : -e + b.height / 2, r = b.isHorizontal() ? b.params.coverflow.rotate : -b.params.coverflow.rotate, i = b.params.coverflow.depth, s = 0, n = b.slides.length; n > s; s++) {\n\t\t\t\t\t\t\t\tvar o = b.slides.eq(s),\n\t\t\t\t\t\t\t\t\tl = b.slidesSizesGrid[s],\n\t\t\t\t\t\t\t\t\tp = o[0].swiperSlideOffset,\n\t\t\t\t\t\t\t\t\td = (t - p - l / 2) / l * b.params.coverflow.modifier,\n\t\t\t\t\t\t\t\t\tu = b.isHorizontal() ? r * d : 0,\n\t\t\t\t\t\t\t\t\tc = b.isHorizontal() ? 0 : r * d,\n\t\t\t\t\t\t\t\t\tm = -i * Math.abs(d),\n\t\t\t\t\t\t\t\t\th = b.isHorizontal() ? 0 : b.params.coverflow.stretch * d,\n\t\t\t\t\t\t\t\t\tf = b.isHorizontal() ? b.params.coverflow.stretch * d : 0;\n\t\t\t\t\t\t\t\tMath.abs(f) < .001 && (f = 0), Math.abs(h) < .001 && (h = 0), Math.abs(m) < .001 && (m = 0), Math.abs(u) < .001 && (u = 0), Math.abs(c) < .001 && (c = 0);\n\t\t\t\t\t\t\t\tvar g = \"translate3d(\" + f + \"px,\" + h + \"px,\" + m + \"px)  rotateX(\" + c + \"deg) rotateY(\" + u + \"deg)\";\n\t\t\t\t\t\t\t\tif (o.transform(g), o[0].style.zIndex = -Math.abs(Math.round(d)) + 1, b.params.coverflow.slideShadows) {\n\t\t\t\t\t\t\t\t\tvar v = b.isHorizontal() ? o.find(\".swiper-slide-shadow-left\") : o.find(\".swiper-slide-shadow-top\"),\n\t\t\t\t\t\t\t\t\t\tw = b.isHorizontal() ? o.find(\".swiper-slide-shadow-right\") : o.find(\".swiper-slide-shadow-bottom\");\n\t\t\t\t\t\t\t\t\t0 === v.length && (v = a('<div class=\"swiper-slide-shadow-' + (b.isHorizontal() ? \"left\" : \"top\") + '\"></div>'), o.append(v)), 0 === w.length && (w = a('<div class=\"swiper-slide-shadow-' + (b.isHorizontal() ? \"right\" : \"bottom\") + '\"></div>'), o.append(w)), v.length && (v[0].style.opacity = d > 0 ? d : 0), w.length && (w[0].style.opacity = -d > 0 ? -d : 0)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (b.browser.ie) {\n\t\t\t\t\t\t\t\tvar y = b.wrapper[0].style;\n\t\t\t\t\t\t\t\ty.perspectiveOrigin = t + \"px 50%\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsetTransition: function(e) {\n\t\t\t\t\t\t\tb.slides.transition(e).find(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").transition(e)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, b.lazy = {\n\t\t\t\t\tinitialImageLoaded: !1,\n\t\t\t\t\tloadImageInSlide: function(e, t) {\n\t\t\t\t\t\tif (\"undefined\" != typeof e && (\"undefined\" == typeof t && (t = !0), 0 !== b.slides.length)) {\n\t\t\t\t\t\t\tvar r = b.slides.eq(e),\n\t\t\t\t\t\t\t\ti = r.find(\".swiper-lazy:not(.swiper-lazy-loaded):not(.swiper-lazy-loading)\");\n\t\t\t\t\t\t\t!r.hasClass(\"swiper-lazy\") || r.hasClass(\"swiper-lazy-loaded\") || r.hasClass(\"swiper-lazy-loading\") || (i = i.add(r[0])), 0 !== i.length && i.each(function() {\n\t\t\t\t\t\t\t\tvar e = a(this);\n\t\t\t\t\t\t\t\te.addClass(\"swiper-lazy-loading\");\n\t\t\t\t\t\t\t\tvar i = e.attr(\"data-background\"),\n\t\t\t\t\t\t\t\t\ts = e.attr(\"data-src\"),\n\t\t\t\t\t\t\t\t\tn = e.attr(\"data-srcset\");\n\t\t\t\t\t\t\t\tb.loadImage(e[0], s || i, n, !1, function() {\n\t\t\t\t\t\t\t\t\tif (i ? (e.css(\"background-image\", 'url(\"' + i + '\")'), e.removeAttr(\"data-background\")) : (n && (e.attr(\"srcset\", n), e.removeAttr(\"data-srcset\")), s && (e.attr(\"src\", s), e.removeAttr(\"data-src\"))), e.addClass(\"swiper-lazy-loaded\").removeClass(\"swiper-lazy-loading\"), r.find(\".swiper-lazy-preloader, .preloader\").remove(), b.params.loop && t) {\n\t\t\t\t\t\t\t\t\t\tvar a = r.attr(\"data-swiper-slide-index\");\n\t\t\t\t\t\t\t\t\t\tif (r.hasClass(b.params.slideDuplicateClass)) {\n\t\t\t\t\t\t\t\t\t\t\tvar o = b.wrapper.children('[data-swiper-slide-index=\"' + a + '\"]:not(.' + b.params.slideDuplicateClass + \")\");\n\t\t\t\t\t\t\t\t\t\t\tb.lazy.loadImageInSlide(o.index(), !1)\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tvar l = b.wrapper.children(\".\" + b.params.slideDuplicateClass + '[data-swiper-slide-index=\"' + a + '\"]');\n\t\t\t\t\t\t\t\t\t\t\tb.lazy.loadImageInSlide(l.index(), !1)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tb.emit(\"onLazyImageReady\", b, r[0], e[0])\n\t\t\t\t\t\t\t\t}), b.emit(\"onLazyImageLoad\", b, r[0], e[0])\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tload: function() {\n\t\t\t\t\t\tvar e;\n\t\t\t\t\t\tif (b.params.watchSlidesVisibility) b.wrapper.children(\".\" + b.params.slideVisibleClass).each(function() {\n\t\t\t\t\t\t\tb.lazy.loadImageInSlide(a(this).index())\n\t\t\t\t\t\t});\n\t\t\t\t\t\telse if (b.params.slidesPerView > 1)\n\t\t\t\t\t\t\tfor (e = b.activeIndex; e < b.activeIndex + b.params.slidesPerView; e++) b.slides[e] && b.lazy.loadImageInSlide(e);\n\t\t\t\t\t\telse b.lazy.loadImageInSlide(b.activeIndex);\n\t\t\t\t\t\tif (b.params.lazyLoadingInPrevNext)\n\t\t\t\t\t\t\tif (b.params.slidesPerView > 1 || b.params.lazyLoadingInPrevNextAmount && b.params.lazyLoadingInPrevNextAmount > 1) {\n\t\t\t\t\t\t\t\tvar t = b.params.lazyLoadingInPrevNextAmount,\n\t\t\t\t\t\t\t\t\tr = b.params.slidesPerView,\n\t\t\t\t\t\t\t\t\ti = Math.min(b.activeIndex + r + Math.max(t, r), b.slides.length),\n\t\t\t\t\t\t\t\t\ts = Math.max(b.activeIndex - Math.max(r, t), 0);\n\t\t\t\t\t\t\t\tfor (e = b.activeIndex + b.params.slidesPerView; i > e; e++) b.slides[e] && b.lazy.loadImageInSlide(e);\n\t\t\t\t\t\t\t\tfor (e = s; e < b.activeIndex; e++) b.slides[e] && b.lazy.loadImageInSlide(e)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar n = b.wrapper.children(\".\" + b.params.slideNextClass);\n\t\t\t\t\t\t\t\tn.length > 0 && b.lazy.loadImageInSlide(n.index());\n\t\t\t\t\t\t\t\tvar o = b.wrapper.children(\".\" + b.params.slidePrevClass);\n\t\t\t\t\t\t\t\to.length > 0 && b.lazy.loadImageInSlide(o.index())\n\t\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tonTransitionStart: function() {\n\t\t\t\t\t\tb.params.lazyLoading && (b.params.lazyLoadingOnTransitionStart || !b.params.lazyLoadingOnTransitionStart && !b.lazy.initialImageLoaded) && b.lazy.load()\n\t\t\t\t\t},\n\t\t\t\t\tonTransitionEnd: function() {\n\t\t\t\t\t\tb.params.lazyLoading && !b.params.lazyLoadingOnTransitionStart && b.lazy.load()\n\t\t\t\t\t}\n\t\t\t\t}, b.scrollbar = {\n\t\t\t\t\tisTouched: !1,\n\t\t\t\t\tsetDragPosition: function(e) {\n\t\t\t\t\t\tvar a = b.scrollbar,\n\t\t\t\t\t\t\tt = b.isHorizontal() ? \"touchstart\" === e.type || \"touchmove\" === e.type ? e.targetTouches[0].pageX : e.pageX || e.clientX : \"touchstart\" === e.type || \"touchmove\" === e.type ? e.targetTouches[0].pageY : e.pageY || e.clientY,\n\t\t\t\t\t\t\tr = t - a.track.offset()[b.isHorizontal() ? \"left\" : \"top\"] - a.dragSize / 2,\n\t\t\t\t\t\t\ti = -b.minTranslate() * a.moveDivider,\n\t\t\t\t\t\t\ts = -b.maxTranslate() * a.moveDivider;\n\t\t\t\t\t\ti > r ? r = i : r > s && (r = s), r = -r / a.moveDivider, b.updateProgress(r), b.setWrapperTranslate(r, !0)\n\t\t\t\t\t},\n\t\t\t\t\tdragStart: function(e) {\n\t\t\t\t\t\tvar a = b.scrollbar;\n\t\t\t\t\t\ta.isTouched = !0, e.preventDefault(), e.stopPropagation(), a.setDragPosition(e), clearTimeout(a.dragTimeout), a.track.transition(0), b.params.scrollbarHide && a.track.css(\"opacity\", 1), b.wrapper.transition(100), a.drag.transition(100), b.emit(\"onScrollbarDragStart\", b)\n\t\t\t\t\t},\n\t\t\t\t\tdragMove: function(e) {\n\t\t\t\t\t\tvar a = b.scrollbar;\n\t\t\t\t\t\ta.isTouched && (e.preventDefault ? e.preventDefault() : e.returnValue = !1, a.setDragPosition(e), b.wrapper.transition(0), a.track.transition(0), a.drag.transition(0), b.emit(\"onScrollbarDragMove\", b))\n\t\t\t\t\t},\n\t\t\t\t\tdragEnd: function(e) {\n\t\t\t\t\t\tvar a = b.scrollbar;\n\t\t\t\t\t\ta.isTouched && (a.isTouched = !1, b.params.scrollbarHide && (clearTimeout(a.dragTimeout), a.dragTimeout = setTimeout(function() {\n\t\t\t\t\t\t\ta.track.css(\"opacity\", 0), a.track.transition(400)\n\t\t\t\t\t\t}, 1e3)), b.emit(\"onScrollbarDragEnd\", b), b.params.scrollbarSnapOnRelease && b.slideReset())\n\t\t\t\t\t},\n\t\t\t\t\tenableDraggable: function() {\n\t\t\t\t\t\tvar e = b.scrollbar,\n\t\t\t\t\t\t\tt = b.support.touch ? e.track : document;\n\t\t\t\t\t\ta(e.track).on(b.touchEvents.start, e.dragStart), a(t).on(b.touchEvents.move, e.dragMove), a(t).on(b.touchEvents.end, e.dragEnd)\n\t\t\t\t\t},\n\t\t\t\t\tdisableDraggable: function() {\n\t\t\t\t\t\tvar e = b.scrollbar,\n\t\t\t\t\t\t\tt = b.support.touch ? e.track : document;\n\t\t\t\t\t\ta(e.track).off(b.touchEvents.start, e.dragStart), a(t).off(b.touchEvents.move, e.dragMove), a(t).off(b.touchEvents.end, e.dragEnd)\n\t\t\t\t\t},\n\t\t\t\t\tset: function() {\n\t\t\t\t\t\tif (b.params.scrollbar) {\n\t\t\t\t\t\t\tvar e = b.scrollbar;\n\t\t\t\t\t\t\te.track = a(b.params.scrollbar), b.params.uniqueNavElements && \"string\" == typeof b.params.scrollbar && e.track.length > 1 && 1 === b.container.find(b.params.scrollbar).length && (e.track = b.container.find(b.params.scrollbar)), e.drag = e.track.find(\".swiper-scrollbar-drag\"), 0 === e.drag.length && (e.drag = a('<div class=\"swiper-scrollbar-drag\"></div>'), e.track.append(e.drag)), e.drag[0].style.width = \"\", e.drag[0].style.height = \"\", e.trackSize = b.isHorizontal() ? e.track[0].offsetWidth : e.track[0].offsetHeight, e.divider = b.size / b.virtualSize, e.moveDivider = e.divider * (e.trackSize / b.size), e.dragSize = e.trackSize * e.divider, b.isHorizontal() ? e.drag[0].style.width = e.dragSize + \"px\" : e.drag[0].style.height = e.dragSize + \"px\", e.divider >= 1 ? e.track[0].style.display = \"none\" : e.track[0].style.display = \"\", b.params.scrollbarHide && (e.track[0].style.opacity = 0)\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tsetTranslate: function() {\n\t\t\t\t\t\tif (b.params.scrollbar) {\n\t\t\t\t\t\t\tvar e, a = b.scrollbar,\n\t\t\t\t\t\t\t\tt = (b.translate || 0, a.dragSize);\n\t\t\t\t\t\t\te = (a.trackSize - a.dragSize) * b.progress, b.rtl && b.isHorizontal() ? (e = -e, e > 0 ? (t = a.dragSize - e, e = 0) : -e + a.dragSize > a.trackSize && (t = a.trackSize + e)) : 0 > e ? (t = a.dragSize + e, e = 0) : e + a.dragSize > a.trackSize && (t = a.trackSize - e), b.isHorizontal() ? (b.support.transforms3d ? a.drag.transform(\"translate3d(\" + e + \"px, 0, 0)\") : a.drag.transform(\"translateX(\" + e + \"px)\"), a.drag[0].style.width = t + \"px\") : (b.support.transforms3d ? a.drag.transform(\"translate3d(0px, \" + e + \"px, 0)\") : a.drag.transform(\"translateY(\" + e + \"px)\"), a.drag[0].style.height = t + \"px\"), b.params.scrollbarHide && (clearTimeout(a.timeout), a.track[0].style.opacity = 1, a.timeout = setTimeout(function() {\n\t\t\t\t\t\t\t\ta.track[0].style.opacity = 0, a.track.transition(400)\n\t\t\t\t\t\t\t}, 1e3))\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tsetTransition: function(e) {\n\t\t\t\t\t\tb.params.scrollbar && b.scrollbar.drag.transition(e)\n\t\t\t\t\t}\n\t\t\t\t}, b.controller = {\n\t\t\t\t\tLinearSpline: function(e, a) {\n\t\t\t\t\t\tthis.x = e, this.y = a, this.lastIndex = e.length - 1;\n\t\t\t\t\t\tvar t, r;\n\t\t\t\t\t\tthis.x.length;\n\t\t\t\t\t\tthis.interpolate = function(e) {\n\t\t\t\t\t\t\treturn e ? (r = i(this.x, e), t = r - 1, (e - this.x[t]) * (this.y[r] - this.y[t]) / (this.x[r] - this.x[t]) + this.y[t]) : 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tvar i = function() {\n\t\t\t\t\t\t\tvar e, a, t;\n\t\t\t\t\t\t\treturn function(r, i) {\n\t\t\t\t\t\t\t\tfor (a = -1, e = r.length; e - a > 1;) r[t = e + a >> 1] <= i ? a = t : e = t;\n\t\t\t\t\t\t\t\treturn e\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}()\n\t\t\t\t\t},\n\t\t\t\t\tgetInterpolateFunction: function(e) {\n\t\t\t\t\t\tb.controller.spline || (b.controller.spline = b.params.loop ? new b.controller.LinearSpline(b.slidesGrid, e.slidesGrid) : new b.controller.LinearSpline(b.snapGrid, e.snapGrid))\n\t\t\t\t\t},\n\t\t\t\t\tsetTranslate: function(e, a) {\n\t\t\t\t\t\tfunction r(a) {\n\t\t\t\t\t\t\te = a.rtl && \"horizontal\" === a.params.direction ? -b.translate : b.translate, \"slide\" === b.params.controlBy && (b.controller.getInterpolateFunction(a), s = -b.controller.spline.interpolate(-e)), s && \"container\" !== b.params.controlBy || (i = (a.maxTranslate() - a.minTranslate()) / (b.maxTranslate() - b.minTranslate()), s = (e - b.minTranslate()) * i + a.minTranslate()), b.params.controlInverse && (s = a.maxTranslate() - s), a.updateProgress(s), a.setWrapperTranslate(s, !1, b), a.updateActiveIndex()\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar i, s, n = b.params.control;\n\t\t\t\t\t\tif (b.isArray(n))\n\t\t\t\t\t\t\tfor (var o = 0; o < n.length; o++) n[o] !== a && n[o] instanceof t && r(n[o]);\n\t\t\t\t\t\telse n instanceof t && a !== n && r(n)\n\t\t\t\t\t},\n\t\t\t\t\tsetTransition: function(e, a) {\n\t\t\t\t\t\tfunction r(a) {\n\t\t\t\t\t\t\ta.setWrapperTransition(e, b), 0 !== e && (a.onTransitionStart(), a.wrapper.transitionEnd(function() {\n\t\t\t\t\t\t\t\ts && (a.params.loop && \"slide\" === b.params.controlBy && a.fixLoop(), a.onTransitionEnd())\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar i, s = b.params.control;\n\t\t\t\t\t\tif (b.isArray(s))\n\t\t\t\t\t\t\tfor (i = 0; i < s.length; i++) s[i] !== a && s[i] instanceof t && r(s[i]);\n\t\t\t\t\t\telse s instanceof t && a !== s && r(s)\n\t\t\t\t\t}\n\t\t\t\t}, b.hashnav = {\n\t\t\t\t\tinit: function() {\n\t\t\t\t\t\tif (b.params.hashnav) {\n\t\t\t\t\t\t\tb.hashnav.initialized = !0;\n\t\t\t\t\t\t\tvar e = document.location.hash.replace(\"#\", \"\");\n\t\t\t\t\t\t\tif (e)\n\t\t\t\t\t\t\t\tfor (var a = 0, t = 0, r = b.slides.length; r > t; t++) {\n\t\t\t\t\t\t\t\t\tvar i = b.slides.eq(t),\n\t\t\t\t\t\t\t\t\t\ts = i.attr(\"data-hash\");\n\t\t\t\t\t\t\t\t\tif (s === e && !i.hasClass(b.params.slideDuplicateClass)) {\n\t\t\t\t\t\t\t\t\t\tvar n = i.index();\n\t\t\t\t\t\t\t\t\t\tb.slideTo(n, a, b.params.runCallbacksOnInit, !0)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tsetHash: function() {\n\t\t\t\t\t\tb.hashnav.initialized && b.params.hashnav && (document.location.hash = b.slides.eq(b.activeIndex).attr(\"data-hash\") || \"\")\n\t\t\t\t\t}\n\t\t\t\t}, b.disableKeyboardControl = function() {\n\t\t\t\t\tb.params.keyboardControl = !1, a(document).off(\"keydown\", p)\n\t\t\t\t}, b.enableKeyboardControl = function() {\n\t\t\t\t\tb.params.keyboardControl = !0, a(document).on(\"keydown\", p)\n\t\t\t\t}, b.mousewheel = {\n\t\t\t\t\tevent: !1,\n\t\t\t\t\tlastScrollTime: (new window.Date).getTime()\n\t\t\t\t}, b.params.mousewheelControl) {\n\t\t\t\ttry {\n\t\t\t\t\tnew window.WheelEvent(\"wheel\"), b.mousewheel.event = \"wheel\"\n\t\t\t\t} catch (N) {\n\t\t\t\t\t(window.WheelEvent || b.container[0] && \"wheel\" in b.container[0]) && (b.mousewheel.event = \"wheel\")\n\t\t\t\t}!b.mousewheel.event && window.WheelEvent, b.mousewheel.event || void 0 === document.onmousewheel || (b.mousewheel.event = \"mousewheel\"), b.mousewheel.event || (b.mousewheel.event = \"DOMMouseScroll\")\n\t\t\t}\n\t\t\tb.disableMousewheelControl = function() {\n\t\t\t\treturn b.mousewheel.event ? (b.container.off(b.mousewheel.event, d), !0) : !1\n\t\t\t}, b.enableMousewheelControl = function() {\n\t\t\t\treturn b.mousewheel.event ? (b.container.on(b.mousewheel.event, d), !0) : !1\n\t\t\t}, b.parallax = {\n\t\t\t\tsetTranslate: function() {\n\t\t\t\t\tb.container.children(\"[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]\").each(function() {\n\t\t\t\t\t\tu(this, b.progress)\n\t\t\t\t\t}), b.slides.each(function() {\n\t\t\t\t\t\tvar e = a(this);\n\t\t\t\t\t\te.find(\"[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]\").each(function() {\n\t\t\t\t\t\t\tvar a = Math.min(Math.max(e[0].progress, -1), 1);\n\t\t\t\t\t\t\tu(this, a)\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tsetTransition: function(e) {\n\t\t\t\t\t\"undefined\" == typeof e && (e = b.params.speed), b.container.find(\"[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]\").each(function() {\n\t\t\t\t\t\tvar t = a(this),\n\t\t\t\t\t\t\tr = parseInt(t.attr(\"data-swiper-parallax-duration\"), 10) || e;\n\t\t\t\t\t\t0 === e && (r = 0), t.transition(r)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}, b._plugins = [];\n\t\t\tfor (var R in b.plugins) {\n\t\t\t\tvar W = b.plugins[R](b, b.params[R]);\n\t\t\t\tW && b._plugins.push(W)\n\t\t\t}\n\t\t\treturn b.callPlugins = function(e) {\n\t\t\t\tfor (var a = 0; a < b._plugins.length; a++) e in b._plugins[a] && b._plugins[a][e](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5])\n\t\t\t}, b.emitterEventListeners = {}, b.emit = function(e) {\n\t\t\t\tb.params[e] && b.params[e](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n\t\t\t\tvar a;\n\t\t\t\tif (b.emitterEventListeners[e])\n\t\t\t\t\tfor (a = 0; a < b.emitterEventListeners[e].length; a++) b.emitterEventListeners[e][a](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n\t\t\t\tb.callPlugins && b.callPlugins(e, arguments[1], arguments[2], arguments[3], arguments[4], arguments[5])\n\t\t\t}, b.on = function(e, a) {\n\t\t\t\treturn e = c(e), b.emitterEventListeners[e] || (b.emitterEventListeners[e] = []), b.emitterEventListeners[e].push(a), b\n\t\t\t}, b.off = function(e, a) {\n\t\t\t\tvar t;\n\t\t\t\tif (e = c(e), \"undefined\" == typeof a) return b.emitterEventListeners[e] = [], b;\n\t\t\t\tif (b.emitterEventListeners[e] && 0 !== b.emitterEventListeners[e].length) {\n\t\t\t\t\tfor (t = 0; t < b.emitterEventListeners[e].length; t++) b.emitterEventListeners[e][t] === a && b.emitterEventListeners[e].splice(t, 1);\n\t\t\t\t\treturn b\n\t\t\t\t}\n\t\t\t}, b.once = function(e, a) {\n\t\t\t\te = c(e);\n\t\t\t\tvar t = function() {\n\t\t\t\t\ta(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]), b.off(e, t)\n\t\t\t\t};\n\t\t\t\treturn b.on(e, t), b\n\t\t\t}, b.a11y = {\n\t\t\t\tmakeFocusable: function(e) {\n\t\t\t\t\treturn e.attr(\"tabIndex\", \"0\"), e\n\t\t\t\t},\n\t\t\t\taddRole: function(e, a) {\n\t\t\t\t\treturn e.attr(\"role\", a), e\n\t\t\t\t},\n\t\t\t\taddLabel: function(e, a) {\n\t\t\t\t\treturn e.attr(\"aria-label\", a), e\n\t\t\t\t},\n\t\t\t\tdisable: function(e) {\n\t\t\t\t\treturn e.attr(\"aria-disabled\", !0), e\n\t\t\t\t},\n\t\t\t\tenable: function(e) {\n\t\t\t\t\treturn e.attr(\"aria-disabled\", !1), e\n\t\t\t\t},\n\t\t\t\tonEnterKey: function(e) {\n\t\t\t\t\t13 === e.keyCode && (a(e.target).is(b.params.nextButton) ? (b.onClickNext(e), b.isEnd ? b.a11y.notify(b.params.lastSlideMessage) : b.a11y.notify(b.params.nextSlideMessage)) : a(e.target).is(b.params.prevButton) && (b.onClickPrev(e), b.isBeginning ? b.a11y.notify(b.params.firstSlideMessage) : b.a11y.notify(b.params.prevSlideMessage)), a(e.target).is(\".\" + b.params.bulletClass) && a(e.target)[0].click())\n\t\t\t\t},\n\t\t\t\tliveRegion: a('<span class=\"swiper-notification\" aria-live=\"assertive\" aria-atomic=\"true\"></span>'),\n\t\t\t\tnotify: function(e) {\n\t\t\t\t\tvar a = b.a11y.liveRegion;\n\t\t\t\t\t0 !== a.length && (a.html(\"\"), a.html(e))\n\t\t\t\t},\n\t\t\t\tinit: function() {\n\t\t\t\t\tb.params.nextButton && b.nextButton && b.nextButton.length > 0 && (b.a11y.makeFocusable(b.nextButton), b.a11y.addRole(b.nextButton, \"button\"), b.a11y.addLabel(b.nextButton, b.params.nextSlideMessage)), b.params.prevButton && b.prevButton && b.prevButton.length > 0 && (b.a11y.makeFocusable(b.prevButton), b.a11y.addRole(b.prevButton, \"button\"), b.a11y.addLabel(b.prevButton, b.params.prevSlideMessage)), a(b.container).append(b.a11y.liveRegion)\n\t\t\t\t},\n\t\t\t\tinitPagination: function() {\n\t\t\t\t\tb.params.pagination && b.params.paginationClickable && b.bullets && b.bullets.length && b.bullets.each(function() {\n\t\t\t\t\t\tvar e = a(this);\n\t\t\t\t\t\tb.a11y.makeFocusable(e), b.a11y.addRole(e, \"button\"), b.a11y.addLabel(e, b.params.paginationBulletMessage.replace(/{{index}}/, e.index() + 1))\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tdestroy: function() {\n\t\t\t\t\tb.a11y.liveRegion && b.a11y.liveRegion.length > 0 && b.a11y.liveRegion.remove()\n\t\t\t\t}\n\t\t\t}, b.init = function() {\n\t\t\t\tb.params.loop && b.createLoop(), b.updateContainerSize(), b.updateSlidesSize(), b.updatePagination(), b.params.scrollbar && b.scrollbar && (b.scrollbar.set(), b.params.scrollbarDraggable && b.scrollbar.enableDraggable()), \"slide\" !== b.params.effect && b.effects[b.params.effect] && (b.params.loop || b.updateProgress(), b.effects[b.params.effect].setTranslate()), b.params.loop ? b.slideTo(b.params.initialSlide + b.loopedSlides, 0, b.params.runCallbacksOnInit) : (b.slideTo(b.params.initialSlide, 0, b.params.runCallbacksOnInit), 0 === b.params.initialSlide && (b.parallax && b.params.parallax && b.parallax.setTranslate(), b.lazy && b.params.lazyLoading && (b.lazy.load(), b.lazy.initialImageLoaded = !0))), b.attachEvents(), b.params.observer && b.support.observer && b.initObservers(), b.params.preloadImages && !b.params.lazyLoading && b.preloadImages(), b.params.autoplay && b.startAutoplay(), b.params.keyboardControl && b.enableKeyboardControl && b.enableKeyboardControl(), b.params.mousewheelControl && b.enableMousewheelControl && b.enableMousewheelControl(),\n\t\t\t\t\tb.params.hashnav && b.hashnav && b.hashnav.init(), b.params.a11y && b.a11y && b.a11y.init(), b.emit(\"onInit\", b)\n\t\t\t}, b.cleanupStyles = function() {\n\t\t\t\tb.container.removeClass(b.classNames.join(\" \")).removeAttr(\"style\"), b.wrapper.removeAttr(\"style\"), b.slides && b.slides.length && b.slides.removeClass([b.params.slideVisibleClass, b.params.slideActiveClass, b.params.slideNextClass, b.params.slidePrevClass].join(\" \")).removeAttr(\"style\").removeAttr(\"data-swiper-column\").removeAttr(\"data-swiper-row\"), b.paginationContainer && b.paginationContainer.length && b.paginationContainer.removeClass(b.params.paginationHiddenClass), b.bullets && b.bullets.length && b.bullets.removeClass(b.params.bulletActiveClass), b.params.prevButton && a(b.params.prevButton).removeClass(b.params.buttonDisabledClass), b.params.nextButton && a(b.params.nextButton).removeClass(b.params.buttonDisabledClass), b.params.scrollbar && b.scrollbar && (b.scrollbar.track && b.scrollbar.track.length && b.scrollbar.track.removeAttr(\"style\"), b.scrollbar.drag && b.scrollbar.drag.length && b.scrollbar.drag.removeAttr(\"style\"))\n\t\t\t}, b.destroy = function(e, a) {\n\t\t\t\tb.detachEvents(), b.stopAutoplay(), b.params.scrollbar && b.scrollbar && b.params.scrollbarDraggable && b.scrollbar.disableDraggable(), b.params.loop && b.destroyLoop(), a && b.cleanupStyles(), b.disconnectObservers(), b.params.keyboardControl && b.disableKeyboardControl && b.disableKeyboardControl(), b.params.mousewheelControl && b.disableMousewheelControl && b.disableMousewheelControl(), b.params.a11y && b.a11y && b.a11y.destroy(), b.emit(\"onDestroy\"), e !== !1 && (b = null)\n\t\t\t}, b.init(), b\n\t\t}\n\t};\n\tt.prototype = {\n\t\tisSafari: function() {\n\t\t\tvar e = navigator.userAgent.toLowerCase();\n\t\t\treturn e.indexOf(\"safari\") >= 0 && e.indexOf(\"chrome\") < 0 && e.indexOf(\"android\") < 0\n\t\t}(),\n\t\tisUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent),\n\t\tisArray: function(e) {\n\t\t\treturn \"[object Array]\" === Object.prototype.toString.apply(e)\n\t\t},\n\t\tbrowser: {\n\t\t\tie: window.navigator.pointerEnabled || window.navigator.msPointerEnabled,\n\t\t\tieTouch: window.navigator.msPointerEnabled && window.navigator.msMaxTouchPoints > 1 || window.navigator.pointerEnabled && window.navigator.maxTouchPoints > 1\n\t\t},\n\t\tdevice: function() {\n\t\t\tvar e = navigator.userAgent,\n\t\t\t\ta = e.match(/(Android);?[\\s\\/]+([\\d.]+)?/),\n\t\t\t\tt = e.match(/(iPad).*OS\\s([\\d_]+)/),\n\t\t\t\tr = e.match(/(iPod)(.*OS\\s([\\d_]+))?/),\n\t\t\t\ti = !t && e.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n\t\t\treturn {\n\t\t\t\tios: t || i || r,\n\t\t\t\tandroid: a\n\t\t\t}\n\t\t}(),\n\t\tsupport: {\n\t\t\ttouch: window.Modernizr && Modernizr.touch === !0 || function() {\n\t\t\t\treturn !!(\"ontouchstart\" in window || window.DocumentTouch && document instanceof DocumentTouch)\n\t\t\t}(),\n\t\t\ttransforms3d: window.Modernizr && Modernizr.csstransforms3d === !0 || function() {\n\t\t\t\tvar e = document.createElement(\"div\").style;\n\t\t\t\treturn \"webkitPerspective\" in e || \"MozPerspective\" in e || \"OPerspective\" in e || \"MsPerspective\" in e || \"perspective\" in e\n\t\t\t}(),\n\t\t\tflexbox: function() {\n\t\t\t\tfor (var e = document.createElement(\"div\").style, a = \"alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient\".split(\" \"), t = 0; t < a.length; t++)\n\t\t\t\t\tif (a[t] in e) return !0\n\t\t\t}(),\n\t\t\tobserver: function() {\n\t\t\t\treturn \"MutationObserver\" in window || \"WebkitMutationObserver\" in window\n\t\t\t}()\n\t\t},\n\t\tplugins: {}\n\t};\n\tfor (var r = (function() {\n\t\t\tvar e = function(e) {\n\t\t\t\t\tvar a = this,\n\t\t\t\t\t\tt = 0;\n\t\t\t\t\tfor (t = 0; t < e.length; t++) a[t] = e[t];\n\t\t\t\t\treturn a.length = e.length, this\n\t\t\t\t},\n\t\t\t\ta = function(a, t) {\n\t\t\t\t\tvar r = [],\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\tif (a && !t && a instanceof e) return a;\n\t\t\t\t\tif (a)\n\t\t\t\t\t\tif (\"string\" == typeof a) {\n\t\t\t\t\t\t\tvar s, n, o = a.trim();\n\t\t\t\t\t\t\tif (o.indexOf(\"<\") >= 0 && o.indexOf(\">\") >= 0) {\n\t\t\t\t\t\t\t\tvar l = \"div\";\n\t\t\t\t\t\t\t\tfor (0 === o.indexOf(\"<li\") && (l = \"ul\"), 0 === o.indexOf(\"<tr\") && (l = \"tbody\"), (0 === o.indexOf(\"<td\") || 0 === o.indexOf(\"<th\")) && (l = \"tr\"), 0 === o.indexOf(\"<tbody\") && (l = \"table\"), 0 === o.indexOf(\"<option\") && (l = \"select\"), n = document.createElement(l), n.innerHTML = a, i = 0; i < n.childNodes.length; i++) r.push(n.childNodes[i])\n\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\tfor (s = t || \"#\" !== a[0] || a.match(/[ .<>:~]/) ? (t || document).querySelectorAll(a) : [document.getElementById(a.split(\"#\")[1])], i = 0; i < s.length; i++) s[i] && r.push(s[i])\n\t\t\t\t\t\t} else if (a.nodeType || a === window || a === document) r.push(a);\n\t\t\t\t\telse if (a.length > 0 && a[0].nodeType)\n\t\t\t\t\t\tfor (i = 0; i < a.length; i++) r.push(a[i]);\n\t\t\t\t\treturn new e(r)\n\t\t\t\t};\n\t\t\treturn e.prototype = {\n\t\t\t\taddClass: function(e) {\n\t\t\t\t\tif (\"undefined\" == typeof e) return this;\n\t\t\t\t\tfor (var a = e.split(\" \"), t = 0; t < a.length; t++)\n\t\t\t\t\t\tfor (var r = 0; r < this.length; r++) this[r].classList.add(a[t]);\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\tremoveClass: function(e) {\n\t\t\t\t\tfor (var a = e.split(\" \"), t = 0; t < a.length; t++)\n\t\t\t\t\t\tfor (var r = 0; r < this.length; r++) this[r].classList.remove(a[t]);\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\thasClass: function(e) {\n\t\t\t\t\treturn this[0] ? this[0].classList.contains(e) : !1\n\t\t\t\t},\n\t\t\t\ttoggleClass: function(e) {\n\t\t\t\t\tfor (var a = e.split(\" \"), t = 0; t < a.length; t++)\n\t\t\t\t\t\tfor (var r = 0; r < this.length; r++) this[r].classList.toggle(a[t]);\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\tattr: function(e, a) {\n\t\t\t\t\tif (1 === arguments.length && \"string\" == typeof e) return this[0] ? this[0].getAttribute(e) : void 0;\n\t\t\t\t\tfor (var t = 0; t < this.length; t++)\n\t\t\t\t\t\tif (2 === arguments.length) this[t].setAttribute(e, a);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tfor (var r in e) this[t][r] = e[r], this[t].setAttribute(r, e[r]);\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\tremoveAttr: function(e) {\n\t\t\t\t\tfor (var a = 0; a < this.length; a++) this[a].removeAttribute(e);\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\tdata: function(e, a) {\n\t\t\t\t\tif (\"undefined\" != typeof a) {\n\t\t\t\t\t\tfor (var t = 0; t < this.length; t++) {\n\t\t\t\t\t\t\tvar r = this[t];\n\t\t\t\t\t\t\tr.dom7ElementDataStorage || (r.dom7ElementDataStorage = {}), r.dom7ElementDataStorage[e] = a\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn this\n\t\t\t\t\t}\n\t\t\t\t\tif (this[0]) {\n\t\t\t\t\t\tvar i = this[0].getAttribute(\"data-\" + e);\n\t\t\t\t\t\treturn i ? i : this[0].dom7ElementDataStorage && e in this[0].dom7ElementDataStorage ? this[0].dom7ElementDataStorage[e] : void 0\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttransform: function(e) {\n\t\t\t\t\tfor (var a = 0; a < this.length; a++) {\n\t\t\t\t\t\tvar t = this[a].style;\n\t\t\t\t\t\tt.webkitTransform = t.MsTransform = t.msTransform = t.MozTransform = t.OTransform = t.transform = e\n\t\t\t\t\t}\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\ttransition: function(e) {\n\t\t\t\t\t\"string\" != typeof e && (e += \"ms\");\n\t\t\t\t\tfor (var a = 0; a < this.length; a++) {\n\t\t\t\t\t\tvar t = this[a].style;\n\t\t\t\t\t\tt.webkitTransitionDuration = t.MsTransitionDuration = t.msTransitionDuration = t.MozTransitionDuration = t.OTransitionDuration = t.transitionDuration = e\n\t\t\t\t\t}\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\ton: function(e, t, r, i) {\n\t\t\t\t\tfunction s(e) {\n\t\t\t\t\t\tvar i = e.target;\n\t\t\t\t\t\tif (a(i).is(t)) r.call(i, e);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tfor (var s = a(i).parents(), n = 0; n < s.length; n++) a(s[n]).is(t) && r.call(s[n], e)\n\t\t\t\t\t}\n\t\t\t\t\tvar n, o, l = e.split(\" \");\n\t\t\t\t\tfor (n = 0; n < this.length; n++)\n\t\t\t\t\t\tif (\"function\" == typeof t || t === !1)\n\t\t\t\t\t\t\tfor (\"function\" == typeof t && (r = arguments[1], i = arguments[2] || !1), o = 0; o < l.length; o++) this[n].addEventListener(l[o], r, i);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tfor (o = 0; o < l.length; o++) this[n].dom7LiveListeners || (this[n].dom7LiveListeners = []), this[n].dom7LiveListeners.push({\n\t\t\t\t\t\t\t\tlistener: r,\n\t\t\t\t\t\t\t\tliveListener: s\n\t\t\t\t\t\t\t}), this[n].addEventListener(l[o], s, i);\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\toff: function(e, a, t, r) {\n\t\t\t\t\tfor (var i = e.split(\" \"), s = 0; s < i.length; s++)\n\t\t\t\t\t\tfor (var n = 0; n < this.length; n++)\n\t\t\t\t\t\t\tif (\"function\" == typeof a || a === !1) \"function\" == typeof a && (t = arguments[1], r = arguments[2] || !1), this[n].removeEventListener(i[s], t, r);\n\t\t\t\t\t\t\telse if (this[n].dom7LiveListeners)\n\t\t\t\t\t\tfor (var o = 0; o < this[n].dom7LiveListeners.length; o++) this[n].dom7LiveListeners[o].listener === t && this[n].removeEventListener(i[s], this[n].dom7LiveListeners[o].liveListener, r);\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\tonce: function(e, a, t, r) {\n\t\t\t\t\tfunction i(n) {\n\t\t\t\t\t\tt(n), s.off(e, a, i, r)\n\t\t\t\t\t}\n\t\t\t\t\tvar s = this;\n\t\t\t\t\t\"function\" == typeof a && (a = !1, t = arguments[1], r = arguments[2]), s.on(e, a, i, r)\n\t\t\t\t},\n\t\t\t\ttrigger: function(e, a) {\n\t\t\t\t\tfor (var t = 0; t < this.length; t++) {\n\t\t\t\t\t\tvar r;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tr = new window.CustomEvent(e, {\n\t\t\t\t\t\t\t\tdetail: a,\n\t\t\t\t\t\t\t\tbubbles: !0,\n\t\t\t\t\t\t\t\tcancelable: !0\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t} catch (i) {\n\t\t\t\t\t\t\tr = document.createEvent(\"Event\"), r.initEvent(e, !0, !0), r.detail = a\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis[t].dispatchEvent(r)\n\t\t\t\t\t}\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\ttransitionEnd: function(e) {\n\t\t\t\t\tfunction a(s) {\n\t\t\t\t\t\tif (s.target === this)\n\t\t\t\t\t\t\tfor (e.call(this, s), t = 0; t < r.length; t++) i.off(r[t], a)\n\t\t\t\t\t}\n\t\t\t\t\tvar t, r = [\"webkitTransitionEnd\", \"transitionend\", \"oTransitionEnd\", \"MSTransitionEnd\", \"msTransitionEnd\"],\n\t\t\t\t\t\ti = this;\n\t\t\t\t\tif (e)\n\t\t\t\t\t\tfor (t = 0; t < r.length; t++) i.on(r[t], a);\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\twidth: function() {\n\t\t\t\t\treturn this[0] === window ? window.innerWidth : this.length > 0 ? parseFloat(this.css(\"width\")) : null\n\t\t\t\t},\n\t\t\t\touterWidth: function(e) {\n\t\t\t\t\treturn this.length > 0 ? e ? this[0].offsetWidth + parseFloat(this.css(\"margin-right\")) + parseFloat(this.css(\"margin-left\")) : this[0].offsetWidth : null\n\t\t\t\t},\n\t\t\t\theight: function() {\n\t\t\t\t\treturn this[0] === window ? window.innerHeight : this.length > 0 ? parseFloat(this.css(\"height\")) : null\n\t\t\t\t},\n\t\t\t\touterHeight: function(e) {\n\t\t\t\t\treturn this.length > 0 ? e ? this[0].offsetHeight + parseFloat(this.css(\"margin-top\")) + parseFloat(this.css(\"margin-bottom\")) : this[0].offsetHeight : null\n\t\t\t\t},\n\t\t\t\toffset: function() {\n\t\t\t\t\tif (this.length > 0) {\n\t\t\t\t\t\tvar e = this[0],\n\t\t\t\t\t\t\ta = e.getBoundingClientRect(),\n\t\t\t\t\t\t\tt = document.body,\n\t\t\t\t\t\t\tr = e.clientTop || t.clientTop || 0,\n\t\t\t\t\t\t\ti = e.clientLeft || t.clientLeft || 0,\n\t\t\t\t\t\t\ts = window.pageYOffset || e.scrollTop,\n\t\t\t\t\t\t\tn = window.pageXOffset || e.scrollLeft;\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttop: a.top + s - r,\n\t\t\t\t\t\t\tleft: a.left + n - i\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null\n\t\t\t\t},\n\t\t\t\tcss: function(e, a) {\n\t\t\t\t\tvar t;\n\t\t\t\t\tif (1 === arguments.length) {\n\t\t\t\t\t\tif (\"string\" != typeof e) {\n\t\t\t\t\t\t\tfor (t = 0; t < this.length; t++)\n\t\t\t\t\t\t\t\tfor (var r in e) this[t].style[r] = e[r];\n\t\t\t\t\t\t\treturn this\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(e)\n\t\t\t\t\t}\n\t\t\t\t\tif (2 === arguments.length && \"string\" == typeof e) {\n\t\t\t\t\t\tfor (t = 0; t < this.length; t++) this[t].style[e] = a;\n\t\t\t\t\t\treturn this\n\t\t\t\t\t}\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\teach: function(e) {\n\t\t\t\t\tfor (var a = 0; a < this.length; a++) e.call(this[a], a, this[a]);\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\thtml: function(e) {\n\t\t\t\t\tif (\"undefined\" == typeof e) return this[0] ? this[0].innerHTML : void 0;\n\t\t\t\t\tfor (var a = 0; a < this.length; a++) this[a].innerHTML = e;\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\ttext: function(e) {\n\t\t\t\t\tif (\"undefined\" == typeof e) return this[0] ? this[0].textContent.trim() : null;\n\t\t\t\t\tfor (var a = 0; a < this.length; a++) this[a].textContent = e;\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\tis: function(t) {\n\t\t\t\t\tif (!this[0]) return !1;\n\t\t\t\t\tvar r, i;\n\t\t\t\t\tif (\"string\" == typeof t) {\n\t\t\t\t\t\tvar s = this[0];\n\t\t\t\t\t\tif (s === document) return t === document;\n\t\t\t\t\t\tif (s === window) return t === window;\n\t\t\t\t\t\tif (s.matches) return s.matches(t);\n\t\t\t\t\t\tif (s.webkitMatchesSelector) return s.webkitMatchesSelector(t);\n\t\t\t\t\t\tif (s.mozMatchesSelector) return s.mozMatchesSelector(t);\n\t\t\t\t\t\tif (s.msMatchesSelector) return s.msMatchesSelector(t);\n\t\t\t\t\t\tfor (r = a(t), i = 0; i < r.length; i++)\n\t\t\t\t\t\t\tif (r[i] === this[0]) return !0;\n\t\t\t\t\t\treturn !1\n\t\t\t\t\t}\n\t\t\t\t\tif (t === document) return this[0] === document;\n\t\t\t\t\tif (t === window) return this[0] === window;\n\t\t\t\t\tif (t.nodeType || t instanceof e) {\n\t\t\t\t\t\tfor (r = t.nodeType ? [t] : t, i = 0; i < r.length; i++)\n\t\t\t\t\t\t\tif (r[i] === this[0]) return !0;\n\t\t\t\t\t\treturn !1\n\t\t\t\t\t}\n\t\t\t\t\treturn !1\n\t\t\t\t},\n\t\t\t\tindex: function() {\n\t\t\t\t\tif (this[0]) {\n\t\t\t\t\t\tfor (var e = this[0], a = 0; null !== (e = e.previousSibling);) 1 === e.nodeType && a++;\n\t\t\t\t\t\treturn a\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\teq: function(a) {\n\t\t\t\t\tif (\"undefined\" == typeof a) return this;\n\t\t\t\t\tvar t, r = this.length;\n\t\t\t\t\treturn a > r - 1 ? new e([]) : 0 > a ? (t = r + a, new e(0 > t ? [] : [this[t]])) : new e([this[a]])\n\t\t\t\t},\n\t\t\t\tappend: function(a) {\n\t\t\t\t\tvar t, r;\n\t\t\t\t\tfor (t = 0; t < this.length; t++)\n\t\t\t\t\t\tif (\"string\" == typeof a) {\n\t\t\t\t\t\t\tvar i = document.createElement(\"div\");\n\t\t\t\t\t\t\tfor (i.innerHTML = a; i.firstChild;) this[t].appendChild(i.firstChild)\n\t\t\t\t\t\t} else if (a instanceof e)\n\t\t\t\t\t\tfor (r = 0; r < a.length; r++) this[t].appendChild(a[r]);\n\t\t\t\t\telse this[t].appendChild(a);\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\tprepend: function(a) {\n\t\t\t\t\tvar t, r;\n\t\t\t\t\tfor (t = 0; t < this.length; t++)\n\t\t\t\t\t\tif (\"string\" == typeof a) {\n\t\t\t\t\t\t\tvar i = document.createElement(\"div\");\n\t\t\t\t\t\t\tfor (i.innerHTML = a, r = i.childNodes.length - 1; r >= 0; r--) this[t].insertBefore(i.childNodes[r], this[t].childNodes[0])\n\t\t\t\t\t\t} else if (a instanceof e)\n\t\t\t\t\t\tfor (r = 0; r < a.length; r++) this[t].insertBefore(a[r], this[t].childNodes[0]);\n\t\t\t\t\telse this[t].insertBefore(a, this[t].childNodes[0]);\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\tinsertBefore: function(e) {\n\t\t\t\t\tfor (var t = a(e), r = 0; r < this.length; r++)\n\t\t\t\t\t\tif (1 === t.length) t[0].parentNode.insertBefore(this[r], t[0]);\n\t\t\t\t\t\telse if (t.length > 1)\n\t\t\t\t\t\tfor (var i = 0; i < t.length; i++) t[i].parentNode.insertBefore(this[r].cloneNode(!0), t[i])\n\t\t\t\t},\n\t\t\t\tinsertAfter: function(e) {\n\t\t\t\t\tfor (var t = a(e), r = 0; r < this.length; r++)\n\t\t\t\t\t\tif (1 === t.length) t[0].parentNode.insertBefore(this[r], t[0].nextSibling);\n\t\t\t\t\t\telse if (t.length > 1)\n\t\t\t\t\t\tfor (var i = 0; i < t.length; i++) t[i].parentNode.insertBefore(this[r].cloneNode(!0), t[i].nextSibling)\n\t\t\t\t},\n\t\t\t\tnext: function(t) {\n\t\t\t\t\treturn new e(this.length > 0 ? t ? this[0].nextElementSibling && a(this[0].nextElementSibling).is(t) ? [this[0].nextElementSibling] : [] : this[0].nextElementSibling ? [this[0].nextElementSibling] : [] : [])\n\t\t\t\t},\n\t\t\t\tnextAll: function(t) {\n\t\t\t\t\tvar r = [],\n\t\t\t\t\t\ti = this[0];\n\t\t\t\t\tif (!i) return new e([]);\n\t\t\t\t\tfor (; i.nextElementSibling;) {\n\t\t\t\t\t\tvar s = i.nextElementSibling;\n\t\t\t\t\t\tt ? a(s).is(t) && r.push(s) : r.push(s), i = s\n\t\t\t\t\t}\n\t\t\t\t\treturn new e(r)\n\t\t\t\t},\n\t\t\t\tprev: function(t) {\n\t\t\t\t\treturn new e(this.length > 0 ? t ? this[0].previousElementSibling && a(this[0].previousElementSibling).is(t) ? [this[0].previousElementSibling] : [] : this[0].previousElementSibling ? [this[0].previousElementSibling] : [] : [])\n\t\t\t\t},\n\t\t\t\tprevAll: function(t) {\n\t\t\t\t\tvar r = [],\n\t\t\t\t\t\ti = this[0];\n\t\t\t\t\tif (!i) return new e([]);\n\t\t\t\t\tfor (; i.previousElementSibling;) {\n\t\t\t\t\t\tvar s = i.previousElementSibling;\n\t\t\t\t\t\tt ? a(s).is(t) && r.push(s) : r.push(s), i = s\n\t\t\t\t\t}\n\t\t\t\t\treturn new e(r)\n\t\t\t\t},\n\t\t\t\tparent: function(e) {\n\t\t\t\t\tfor (var t = [], r = 0; r < this.length; r++) e ? a(this[r].parentNode).is(e) && t.push(this[r].parentNode) : t.push(this[r].parentNode);\n\t\t\t\t\treturn a(a.unique(t))\n\t\t\t\t},\n\t\t\t\tparents: function(e) {\n\t\t\t\t\tfor (var t = [], r = 0; r < this.length; r++)\n\t\t\t\t\t\tfor (var i = this[r].parentNode; i;) e ? a(i).is(e) && t.push(i) : t.push(i), i = i.parentNode;\n\t\t\t\t\treturn a(a.unique(t))\n\t\t\t\t},\n\t\t\t\tfind: function(a) {\n\t\t\t\t\tfor (var t = [], r = 0; r < this.length; r++)\n\t\t\t\t\t\tfor (var i = this[r].querySelectorAll(a), s = 0; s < i.length; s++) t.push(i[s]);\n\t\t\t\t\treturn new e(t)\n\t\t\t\t},\n\t\t\t\tchildren: function(t) {\n\t\t\t\t\tfor (var r = [], i = 0; i < this.length; i++)\n\t\t\t\t\t\tfor (var s = this[i].childNodes, n = 0; n < s.length; n++) t ? 1 === s[n].nodeType && a(s[n]).is(t) && r.push(s[n]) : 1 === s[n].nodeType && r.push(s[n]);\n\t\t\t\t\treturn new e(a.unique(r))\n\t\t\t\t},\n\t\t\t\tremove: function() {\n\t\t\t\t\tfor (var e = 0; e < this.length; e++) this[e].parentNode && this[e].parentNode.removeChild(this[e]);\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\tadd: function() {\n\t\t\t\t\tvar e, t, r = this;\n\t\t\t\t\tfor (e = 0; e < arguments.length; e++) {\n\t\t\t\t\t\tvar i = a(arguments[e]);\n\t\t\t\t\t\tfor (t = 0; t < i.length; t++) r[r.length] = i[t], r.length++\n\t\t\t\t\t}\n\t\t\t\t\treturn r\n\t\t\t\t}\n\t\t\t}, a.fn = e.prototype, a.unique = function(e) {\n\t\t\t\tfor (var a = [], t = 0; t < e.length; t++) - 1 === a.indexOf(e[t]) && a.push(e[t]);\n\t\t\t\treturn a\n\t\t\t}, a\n\t\t}()), i = [\"jQuery\", \"Zepto\", \"Dom7\"], s = 0; s < i.length; s++) window[i[s]] && e(window[i[s]]);\n\tvar n;\n\tn = \"undefined\" == typeof r ? window.Dom7 || window.Zepto || window.jQuery : r, n && (\"transitionEnd\" in n.fn || (n.fn.transitionEnd = function(e) {\n\t\tfunction a(s) {\n\t\t\tif (s.target === this)\n\t\t\t\tfor (e.call(this, s), t = 0; t < r.length; t++) i.off(r[t], a)\n\t\t}\n\t\tvar t, r = [\"webkitTransitionEnd\", \"transitionend\", \"oTransitionEnd\", \"MSTransitionEnd\", \"msTransitionEnd\"],\n\t\t\ti = this;\n\t\tif (e)\n\t\t\tfor (t = 0; t < r.length; t++) i.on(r[t], a);\n\t\treturn this\n\t}), \"transform\" in n.fn || (n.fn.transform = function(e) {\n\t\tfor (var a = 0; a < this.length; a++) {\n\t\t\tvar t = this[a].style;\n\t\t\tt.webkitTransform = t.MsTransform = t.msTransform = t.MozTransform = t.OTransform = t.transform = e\n\t\t}\n\t\treturn this\n\t}), \"transition\" in n.fn || (n.fn.transition = function(e) {\n\t\t\"string\" != typeof e && (e += \"ms\");\n\t\tfor (var a = 0; a < this.length; a++) {\n\t\t\tvar t = this[a].style;\n\t\t\tt.webkitTransitionDuration = t.MsTransitionDuration = t.msTransitionDuration = t.MozTransitionDuration = t.OTransitionDuration = t.transitionDuration = e\n\t\t}\n\t\treturn this\n\t})), window.Swiper = t\n}(),  true ? module.exports = window.Swiper : \"function\" == typeof define && define.amd && define([], function() {\n\t\"use strict\";\n\treturn window.Swiper\n});\n//# sourceMappingURL=maps/swiper.min.js.map\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }
/******/ ]);